{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-parser/build/esm/commons.js","../../../src/index.ts","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/parseqs/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/parseuri/index.js","../node_modules/yeast/index.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/backo2/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js"],"names":["target","property","receiver","Reflect","get","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","self","window","Function","Transport","opts","writable","installTimerFunctions","query","readyState","socket","msg","err","Error","type","description","this","doOpen","doClose","onClose","packets","write","data","packet","decodePacket","binaryType","onPacket","Emitter","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","encodePacket","supportsBinary","obj","isView","buffer","decodeBase64Packet","decoded","decode","mapBinary","base64","encodedPacket","charAt","substring","length","SEPARATOR","String","fromCharCode","encodePayload","encodedPackets","Array","count","i","join","decodePayload","encodedPayload","decodedPacket","push","protocol","exports","encode","str","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","step","next","_e2","_typeof","constructor","_possibleConstructorReturn","assertThisInitialized","re","parts","module","src","b","indexOf","replace","m","exec","uri","source","host","authority","ipv6uri","pathNames","path","regx","names","substr","splice","queryKey","$0","$1","$2","prev","alphabet","map","seed","num","encoded","Math","floor","yeast","now","Date","xdomain","XMLHttpRequest","hasCORS","globalThis","concat","Polling","arguments","polling","poll","onPause","pause","total","once","doPoll","emit","onOpen","close","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","parseqs","hostname","empty","hasXHR2","responseType","XHR","location","isSSL","xd","xs","forceBase64","assign","Request","fn","req","request","method","on","onError","onData","bind","pollXhr","async","undefined","pick","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","setTimeoutFn","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","transports","websocket","WS","Socket","parseuri","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","removeAllListeners","offlineEventListener","name","clone","EIO","priorWebsocketSuccess","emitReserved","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","off","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","clearTimeoutFn","autoUnref","unref","options","compress","cleanupAndClose","waitForUpgrade","reason","removeEventListener","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","p","start","buf","c","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","ev","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onopen","onpacket","subEvents","_readyState","args","apply","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","listeners","slice","sent","emitBuffered","subDestroy","listener","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","_reconnecting","attempts","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","clearTimeout","onping","ondata","ondecoded","add","active","_close","reset","delay","duration","onreconnect","attempt","cache","lookup","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","isReactNative","navigator","product","toLowerCase","check","protocols","headers","ws","usingBrowserWebSocket","WebSocket","defaultBinaryType","addEventListeners","_socket","onmessage","lastPacket","Buffer","byteLength","nextTick","Promise","resolve","cb","then","MozWebSocket","ms","factor","pow","rand","random","deviation","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","enumerable","configurable","defineProperty","_createClass","protoProps","staticProps","_setPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","Super","NewTarget","possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","ReferenceError","attr","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","useNativeTimers","mixin","event","_callbacks","callbacks","len","hasListeners"],"mappings":"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","file":"static/js/7.e55a71be.chunk.js","sourcesContent":["import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n"],"sourceRoot":""}