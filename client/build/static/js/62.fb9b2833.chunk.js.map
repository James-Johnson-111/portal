{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Inventory/InvtryAssets/InvtryAssets.jsx"],"names":["InvtryAssets","history","useHistory","useState","AstName","editAstName","editID","AstCode","editAstCode","Asset","setAsset","Categories","setCategories","useEffect","GetAllCategories","OnChangeHandler","e","target","name","value","setValues","axios","get","then","response","data","catch","err","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","className","length","map","val","index","src","alt","asset_name","asset_code","onClick","id","asset_id","replace","title","indexx","category","filter","arr","$","trigger","OnEdit","Data","FormData","append","post","OnDelete","type","class","onSubmit","preventDefault","autocomplete","placeholder","onChange","required","role","pattern","minLength","updateCategory"],"mappings":"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","file":"static/js/62.fb9b2833.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './InvtryAssets.css';\r\nimport axios from '../../../../../../axios';\r\nimport $ from 'jquery';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst InvtryAssets = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [ Asset, setAsset ] = useState(\r\n        {\r\n            AstName: '', editAstName: '', editID: 0, AstCode: '', editAstCode: ''\r\n        }\r\n    );\r\n    const [ Categories, setCategories ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            GetAllCategories();\r\n\r\n        }, []\r\n    )\r\n\r\n    // Call on change function to store input field data into usestate()\r\n    const OnChangeHandler = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n        const setValues = {\r\n            ...Asset,\r\n            [name]: value\r\n        }\r\n\r\n        setAsset(setValues);\r\n\r\n    }\r\n\r\n    const GetAllCategories = () => {\r\n\r\n        axios.get('/getallinvtryassets').then( response => {\r\n\r\n            setCategories( response.data );\r\n\r\n        } ).catch( err => {\r\n\r\n            toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n        } );\r\n    }\r\n\r\n    const OnAddCategory = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const Data = new FormData();\r\n        Data.append('AssetName', Asset.AstName);\r\n        Data.append('AssetCode', Asset.AstCode);\r\n        axios.post('/addinvtryasset', Data).then( () => {\r\n\r\n            GetAllCategories();\r\n\r\n            setAsset(\r\n                {\r\n                    AstName: '', editAstName: '', editID: 0, AstCode: ''\r\n                }\r\n            )\r\n\r\n        } ).catch( err => {\r\n\r\n            toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n        } );\r\n    }\r\n\r\n    const OnEdit = ( id, indexx ) => {\r\n\r\n        let category = Categories.filter(\r\n            (val, index, arr) => {\r\n                return index === indexx;\r\n            }\r\n        );\r\n\r\n        const setValues = {\r\n            ...Asset,\r\n            editAstName: category[0].asset_name,\r\n            editAstCode: category[0].asset_code,\r\n            editID: id\r\n        }\r\n\r\n        setAsset(setValues);\r\n        $('.editModalBtn').trigger('click');\r\n\r\n    }\r\n\r\n    const OnDelete = ( id ) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('EditCtgryID', id);\r\n        axios.post('/deleteinvtryasset', Data).then( () => {\r\n\r\n            GetAllCategories();\r\n\r\n            setAsset(\r\n                {\r\n                    AstName: '', editAstName: '', editID: 0\r\n                }\r\n            );\r\n            toast.dark('Asset Deleted', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } ).catch( err => {\r\n\r\n            toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n        } );\r\n        \r\n    }\r\n\r\n    const updateCategory = ( id ) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('EditAstName', Asset.editAstName);\r\n        Data.append('EditAstCode', Asset.editAstCode);\r\n        Data.append('EditAstID', id);\r\n        axios.post('/updateinvtryasset', Data).then( () => {\r\n\r\n            GetAllCategories();\r\n\r\n            setAsset(\r\n                {\r\n                    AstName: '', editAstName: '', editID: 0\r\n                }\r\n            );\r\n            toast.dark('Asset Updated', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        } ).catch( err => {\r\n\r\n            toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n        } );\r\n\r\n    }\r\n\r\n    const GoToSubAssets = ( id ) => {\r\n\r\n        history.replace('/invtry_assets/invtrysubassets/' + id);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <div className=\"InventoryAssets_Box\">\r\n                <div className=\"InventoryAssets_Details\">\r\n                    <h3 className=\"mb-4\"> All Assets </h3>\r\n                    <div className=\"lists\">\r\n                        {\r\n                            Categories.length === 0\r\n                                ?\r\n                                <h3 className=\"text-center mb-0\">No Asset Found</h3>\r\n                                :\r\n                                Categories.map(\r\n                                    (val, index) => {\r\n                                        return (\r\n                                            <div className=\"one\" key={ index }>\r\n                                                <div className=\"d-flex\">\r\n                                                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                                                        <img src={'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThLP6xJXBY_W2tT5waakogfnpHk4uhpVTy7A&usqp=CAU'} alt=\"Image\" />\r\n                                                    </div>\r\n                                                    <div className=\"d-flex align-items-center\">\r\n                                                        <div>\r\n                                                            <p className=\"mb-0 font-weight-bold\">Name</p>\r\n                                                            <p className=\"mb-0\">{val.asset_name}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"d-flex align-items-center Text\">\r\n                                                    <div>\r\n                                                        <p className=\"mb-0 font-weight-bold\">Code</p>\r\n                                                        <p className=\"mb-0\">{val.asset_code}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"ShowOnHover\">\r\n                                                    <i onClick={() => GoToSubAssets(val.asset_id)} title=\"Add Sub Asset\" className=\"las la-plus\"></i>\r\n                                                    <i onClick={() => OnEdit(val.asset_id, index)} title=\"Edit\" className=\"lar la-edit\"></i>\r\n                                                    <i onClick={() => OnDelete(val.asset_id)} title=\"Delete\" className=\"las la-trash\"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"InventoryAssets_Right\">\r\n                    <div className=\"Btn5\">\r\n                        <button type=\"button\" class=\"btn\">New Asset</button>\r\n                        <div className=\"NewAssetForm\">\r\n                            <h4 className=\"mb-3\">\r\n                                Add New Asset\r\n                            </h4>\r\n                            <form onSubmit={ OnAddCategory } autocomplete=\"off\">\r\n                                <input type=\"text\" value={ Asset.AstName } className=\"form-control mb-3\" placeholder=\"Asset Name\" name=\"AstName\" onChange={ OnChangeHandler } required />\r\n                                <input type=\"text\" value={ Asset.AstCode } className=\"form-control mb-3\" placeholder=\"Asset Code\" name=\"AstCode\" onChange={ OnChangeHandler } required />\r\n                                <button className=\"btn d-block ml-auto\" type=\"submit\">Add Asset</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary d-none editModalBtn\" data-toggle=\"modal\" data-target=\"#AssetModal\">\r\n                Launch demo modal\r\n            </button>\r\n            <div className=\"modal fade\" id=\"AssetModal\" role=\"dialog\" aria-labelledby=\"AssetModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-body\">\r\n                            <input type=\"text\" value={Asset.editAstName} className=\"form-control mb-3\" placeholder=\"Asset Name\" name=\"editAstName\" onChange={OnChangeHandler} pattern=\"[a-zA-Z][a-zA-Z\\s]*\" minLength=\"3\" required />\r\n                            <input type=\"text\" value={Asset.editAstCode} className=\"form-control mb-3\" placeholder=\"Asset Code\" name=\"editAstCode\" onChange={OnChangeHandler} pattern=\"^[0-9]+$\" required />\r\n                            <button data-dismiss=\"modal\" className=\"btn btn-primary d-block ml-auto text-white\" onClick={() => updateCategory(Asset.editID)}>Update Asset</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default InvtryAssets;"],"sourceRoot":""}