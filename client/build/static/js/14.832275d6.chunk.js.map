{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Chat/Components/Drive/Drive.jsx","images/nochat.png","Components/EmployeeProtal/Dashboard/Pages/Chat/Employee_Chat.jsx","Components/UI/Modal/Modal.jsx","Components/UI/Menu/Menu.jsx"],"names":["Drive","props","useState","Data","setData","useEffect","data","className","map","val","index","style","backgroundImage","name","onClick","AttachDrive","Employee_Chat","Date","Calender","setCalender","encryptor","require","Employees","setEmployees","EmployeeStatus","setEmployeeStatus","Chat","setChat","ChatEmployee","setChatEmployee","ShowChat","setShowChat","Show","setShow","DriveContent","setDriveContent","EmpID","setEmpID","EmpIndex","setEmpIndex","CurrentEmployeeData","useSelector","state","EmpAuth","EmployeeData","GetAllEmployees","parseInt","sessionStorage","getItem","$","hide","show","socket","on","res","rslt","app_status","emp_id","receiver","undefined","sender","trigger","mode","FormData","append","axios","post","then","catch","err","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","GetThatEmpChat","id","toString","emit","length","setTimeout","objDiv","document","getElementById","scrollTop","scrollHeight","OnChat","encrypt","tConvert","time","match","slice","join","OpenDriveModal","console","log","ShowHide","txt","body","ShowCalender","toggle","Modal","Hide","content","src","emp_image","alt","width","height","designation_name","company_name","toDateString","decrypt","chat_body","includes","split","chatDate","send_date","prevDate","currDate","sender_id","read_status","fontSize","send_time","borderRadius","color","placeholder","NoCHat","onChange","value","fontWeight","toTimeString","GetThatEmpChat2","display","animationDelay","Menu","slideToggle","link","to","href","func","hasClass","removeClass","addClass","class","icon"],"mappings":"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","file":"static/js/14.832275d6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './Drive.css';\r\n\r\nconst Drive = ( props ) => {\r\n\r\n    const [ Data, setData ] = useState([]);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setData( props.data );\r\n\r\n        }, [ props.data ]\r\n    )\r\n\r\n    return (\r\n        <div className=\"DicussionDrive\">\r\n            {\r\n                Data.map(\r\n                    ( val, index ) => {\r\n\r\n                        return (\r\n                            <div \r\n                                key={ index } \r\n                                className=\"DriveItem\"\r\n                                style={\r\n                                    {\r\n                                        backgroundImage: \"url('images/drive/\" + val.name + \"')\"\r\n                                    }\r\n                                }\r\n                                onClick={ () => props.AttachDrive( val.name ) }\r\n                            ></div>\r\n                        )\r\n\r\n                    }\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Drive;","export default __webpack_public_path__ + \"static/media/nochat.25180477.png\";","import React, { Suspense, useEffect, useState } from 'react'\r\n\r\nimport './Employee_Chat.css';\r\nimport axios from '../../../../../axios';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport $ from 'jquery';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Menu from '../../../../UI/Menu/Menu';\r\nimport Drive from './Components/Drive/Drive';\r\nimport Modal from '../../../../UI/Modal/Modal';\r\n\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\n\r\nimport socket from '../../../../../io';\r\n\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nimport NoCHat from '../../../../../images/nochat.png';\r\n\r\nconst Employee_Chat = () => {\r\n\r\n    const [Calender, setCalender] = useState(new Date());\r\n\r\n    let key = 'real secret keys should be long and random';\r\n    const encryptor = require('simple-encryptor')(key);\r\n\r\n    const [Employees, setEmployees] = useState([]);\r\n    const [EmployeeStatus, setEmployeeStatus] = useState('');\r\n    const [Chat, setChat] = useState([]);\r\n    const [ChatEmployee, setChatEmployee] = useState({});\r\n    const [ShowChat, setShowChat] = useState(false);\r\n    const [Show, setShow] = useState(false);\r\n    const [DriveContent, setDriveContent] = useState([]);\r\n    const [EmpID, setEmpID] = useState();\r\n    const [EmpIndex, setEmpIndex] = useState();\r\n\r\n    const CurrentEmployeeData = useSelector((state) => state.EmpAuth.EmployeeData);\r\n\r\n    useEffect( // component did mount\r\n        () => {\r\n\r\n            GetAllEmployees('chat');\r\n            setEmpID(parseInt(sessionStorage.getItem('EmpID')));\r\n\r\n            $('.RightCalender').hide(0);\r\n\r\n        }, []\r\n    );\r\n\r\n    useEffect( // component did update\r\n        () => {\r\n\r\n            $('.RightCalender').hide();\r\n            $('.SecondDiv .Left').show();\r\n            $('.SecondDiv .Right').show();\r\n\r\n        }, [ Calender ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // CHECK USER IS ONLINE OR NOT\r\n            socket.on(\r\n                'UserOnline', (res) => {\r\n\r\n                    setEmployeeStatus(res.rslt[0].app_status);\r\n\r\n                }\r\n            )\r\n\r\n            // WHEN NEW CHAT COMES\r\n            socket.on(\r\n                'UserNewChat', (res) => {\r\n\r\n                    if (CurrentEmployeeData.emp_id === parseInt(res.receiver)) {\r\n\r\n                        if (ChatEmployee.emp_id !== undefined) {\r\n                            if (ChatEmployee.emp_id === parseInt(res.sender)) {\r\n                                // GetThatEmpChat( ChatEmployee.emp_id, EmpIndex );\r\n                                $('.NewTweet .refresh').trigger('click');\r\n                            }\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n            )\r\n\r\n        }, [ ChatEmployee ]\r\n    )\r\n\r\n    const GetAllEmployees = (mode) => {\r\n\r\n        const Data = new FormData();\r\n\r\n        if (mode === 'chat') {\r\n\r\n            setEmployees([]);\r\n            Data.append('currentEmp', sessionStorage.getItem('EmpID'));\r\n\r\n            axios.post('/getchatemployees', Data).then(res => {\r\n\r\n                setEmployees(res.data);\r\n\r\n            }).catch(err => {\r\n\r\n                toast.dark(err, {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            });\r\n\r\n        }\r\n\r\n        if (mode === 'contacts') {\r\n\r\n            setEmployees([]);\r\n            Data.append('currentEmp', sessionStorage.getItem('EmpID'));\r\n\r\n            axios.post('/getallemployees', Data).then(res => {\r\n\r\n                setEmployees(res.data);\r\n\r\n            }).catch(err => {\r\n\r\n                toast.dark(err, {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n    const GetThatEmpChat = (id, index) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('sender', id);\r\n        Data.append('receiver', sessionStorage.getItem('EmpID'));\r\n        Data.append('chatDate', Calender.toString());\r\n        axios.post('/getemployeewithchat', Data).then(res => {\r\n\r\n            setShowChat(true);\r\n            setChatEmployee(Employees[index]);\r\n            socket.emit(\r\n                'UserOnline', Employees[index].emp_id\r\n            )\r\n\r\n            setEmpIndex(index);\r\n            if (res.data.length !== Chat.length) {\r\n\r\n                setChat([]);\r\n                setChat(res.data);\r\n                setTimeout(() => {\r\n                    var objDiv = document.getElementById(\"ChatContainer\");\r\n                    objDiv.scrollTop = objDiv.scrollHeight;\r\n                }, 300);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n\r\n            toast.dark(err, {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    const GetThatEmpChat2 = (id, index) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('sender', id);\r\n        Data.append('receiver', sessionStorage.getItem('EmpID'));\r\n        Data.append('chatDate', Calender.toString());\r\n        axios.post('/getemployeewithchat', Data).then(res => {\r\n\r\n            setShowChat(true);\r\n            setChatEmployee(Employees[index]);\r\n            socket.emit(\r\n                'UserOnline', Employees[index].emp_id\r\n            )\r\n\r\n            setEmpIndex(index);\r\n            if (res.data.length > Chat.length || res.data.length < Chat.length) {\r\n\r\n                setChat([]);\r\n                setChat(res.data);\r\n                setTimeout(() => {\r\n                    var objDiv = document.getElementById(\"ChatContainer\");\r\n                    objDiv.scrollTop = objDiv.scrollHeight;\r\n                }, 300);\r\n\r\n            }\r\n\r\n        }).catch(err => {\r\n\r\n            toast.dark(err, {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n        });\r\n\r\n        $('.SecondDiv .Left').hide();\r\n        $('.SecondDiv .Center').show();\r\n\r\n    }\r\n\r\n    const OnChat = () => {\r\n\r\n\r\n        if ($('#Sendtext').val() !== '') {\r\n            const Data = new FormData();\r\n            Data.append('eventID', 1);\r\n            Data.append('senderID', sessionStorage.getItem('EmpID'));\r\n            Data.append('receiverID', ChatEmployee.emp_id);\r\n            Data.append('ChatBody', encryptor.encrypt($('#Sendtext').val()));\r\n            Data.append('NotificationBody', $('#Sendtext').val());\r\n            Data.append('Title', CurrentEmployeeData.name);\r\n            axios.post('/insertchat', Data).then(() => {\r\n\r\n                GetThatEmpChat(ChatEmployee.emp_id, EmpIndex);\r\n                $('#Sendtext').val('');\r\n                setTimeout(() => {\r\n                    var objDiv = document.getElementById(\"ChatContainer\");\r\n                    objDiv.scrollTop = objDiv.scrollHeight;\r\n                }, 300);\r\n\r\n                axios.post('/newnotification', Data).then(() => {\r\n\r\n                    socket.emit('NewNotification', ChatEmployee.emp_id);\r\n                    socket.emit('NewChat', { sender: CurrentEmployeeData.emp_id, receiver: ChatEmployee.emp_id, index: EmpIndex });\r\n\r\n                }).catch(err => {\r\n                    toast.dark(err, {\r\n                        position: 'top-right',\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                });\r\n\r\n            }).catch(err => {\r\n                toast.dark(err, {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function tConvert(time) {\r\n        // Check correct time format and split into components\r\n        time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n        if (time.length > 1) { // If time format correct\r\n            time = time.slice(1);  // Remove full string match value\r\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\r\n            time[0] = +time[0] % 12 || 12; // Adjust hours\r\n        }\r\n        return time.join(''); // return adjusted time or original string\r\n\r\n    }\r\n\r\n    const OpenDriveModal = () => {\r\n\r\n        axios.post(\r\n            '/getalldrive',\r\n            {\r\n                emp_id: CurrentEmployeeData.emp_id\r\n            }\r\n        ).then(\r\n            res => {\r\n\r\n                setDriveContent(\r\n                    res.data\r\n                );\r\n\r\n            }\r\n        ).catch(\r\n            err => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n        ShowHide();\r\n\r\n    }\r\n\r\n    const ShowHide = () => {\r\n\r\n        setShow(!Show);\r\n\r\n    }\r\n\r\n    const AttachDrive = (txt) => {\r\n\r\n        let body = '/***' + txt + '***/';\r\n        $('#Sendtext').val(body);\r\n        OnChat();\r\n        ShowHide();\r\n\r\n    }\r\n\r\n    const BackDiv = () => {\r\n        $('.SecondDiv .Left').show();\r\n        $('.SecondDiv .Center').hide();\r\n    }\r\n\r\n    const ShowCalender = () => {\r\n        $('.RightCalender').toggle();\r\n        $('.SecondDiv .Left').hide();\r\n        $('.SecondDiv .Center').hide();\r\n        $('.SecondDiv .Right').hide();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"EmployeeChat\">\r\n                <Modal show={Show} Hide={ShowHide} content={<Drive AttachDrive={AttachDrive} data={DriveContent} />} />\r\n\r\n                <div className=\"Left\">\r\n                    <p className='font-weight-bold'>Chat Members</p>\r\n                    <p>{Employees.length - 1} members</p>\r\n\r\n                    <div className=\"tabs\">\r\n                        <button onClick={() => GetAllEmployees('chat')}>Chat</button>\r\n                        <button onClick={() => GetAllEmployees('contacts')}>contacts</button>\r\n                    </div>\r\n\r\n                    <div className=\"List\">\r\n\r\n                        {\r\n                            Employees.length === 0\r\n                                ?\r\n                                <h5> No Chat Found </h5>\r\n                                :\r\n                                Employees.map(\r\n                                    (val, index) => {\r\n\r\n                                        return (\r\n                                            <>\r\n                                                {\r\n                                                    val.emp_id === parseInt(sessionStorage.getItem('EmpID'))\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        <div key={index} className=\"employee\" onClick={() => GetThatEmpChat(val.emp_id, index)}>\r\n                                                            <div>\r\n                                                                <img\r\n                                                                    src={'images/employees/' + val.emp_image}\r\n                                                                    alt=\"empImg\"\r\n                                                                    width='45'\r\n                                                                    height='45'\r\n                                                                    className='rounded-circle'\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"ml-2\">\r\n                                                                <p className='font-weight-bold'> {val.name} </p>\r\n                                                                <p> {val.designation_name + \" in \" + val.company_name} </p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                }\r\n                                            </>\r\n\r\n\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Center\">\r\n                    {\r\n                        ShowChat\r\n                            ?\r\n                            <>\r\n                                <div className=\"ChatEmployee\">\r\n                                    <img\r\n                                        src={'images/employees/' + ChatEmployee.emp_image}\r\n                                        width='50'\r\n                                        height='50'\r\n                                        alt=\"chat employee img\"\r\n                                        className='rounded-circle'\r\n                                    />\r\n                                    <div className=\"ml-2\">\r\n                                        <p className='font-weight-bold'> {ChatEmployee.name} </p>\r\n                                        <p> {ChatEmployee.designation_name + ' in ' + ChatEmployee.company_name} </p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ChatContent\" id=\"ChatContainer\">\r\n\r\n                                    {\r\n                                        Calender.toDateString() !== new Date().toDateString()\r\n                                            ?\r\n                                            <p className=\"TweetDate\"> {Calender.toDateString()}</p>\r\n                                            :\r\n                                            null\r\n                                    }\r\n                                    {\r\n                                        Chat.map(\r\n                                            (val, index) => {\r\n\r\n                                                let src = '';\r\n                                                if (encryptor.decrypt(val.chat_body).includes('/***')) {\r\n                                                    src = encryptor.decrypt(val.chat_body).split('/***')[1].split('***')[0];\r\n                                                }\r\n\r\n\r\n                                                const chatDate = new Date(val.send_date);\r\n\r\n                                                let content = null;\r\n                                                if (Calender.toDateString() === new Date().toDateString()) {\r\n                                                    if (index - 1 >= 0) {\r\n\r\n                                                        let prevDate = new Date(Chat[index - 1].send_date).toDateString();\r\n                                                        let currDate = new Date(Chat[index].send_date).toDateString();\r\n\r\n                                                        if (currDate !== prevDate) {\r\n                                                            content = <p className=\"TweetDate\"> {currDate}</p>\r\n                                                        }\r\n\r\n                                                    } else if (index === 0) {\r\n                                                        content = <p className=\"TweetDate\"> {new Date(Chat[index].send_date).toDateString()}</p>\r\n                                                    }\r\n                                                }\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            Calender.toDateString() === new Date().toDateString()\r\n                                                                ?\r\n                                                                <>\r\n                                                                    {content}\r\n                                                                    <div key={index} className={val.sender_id !== EmpID ? \"Tweet\" : \"Tweet owner\"}>\r\n                                                                        <p className=\"Tweeter\"> {val.sender_id !== EmpID ? ChatEmployee.name : CurrentEmployeeData.name}</p>\r\n                                                                        <div className=\"TweetBox\">\r\n                                                                            {\r\n                                                                                encryptor.decrypt(val.chat_body).includes('/***')\r\n                                                                                    ?\r\n                                                                                    <img\r\n                                                                                        src={'images/drive/' + src}\r\n                                                                                        width=\"100%\"\r\n                                                                                        height=\"auto\"\r\n                                                                                        alt=\"drive attachment\"\r\n                                                                                    />\r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {encryptor.decrypt(val.chat_body)}\r\n                                                                                    </>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                        <p className=\"TweetTime\">\r\n                                                                            {\r\n                                                                                val.sender_id !== EmpID\r\n                                                                                    ?\r\n                                                                                    null\r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {\r\n                                                                                            val.read_status === 'Read'\r\n                                                                                                ?\r\n                                                                                                <i style={{ fontSize: '12px !important' }} className=\"las la-check-double mr-1\"></i>\r\n                                                                                                :\r\n                                                                                                <i style={{ fontSize: '12px !important' }} className=\"las la-check mr-1\"></i>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                            }\r\n                                                                            {tConvert(val.send_time)}\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                chatDate.toDateString() === Calender.toDateString()\r\n                                                                    ?\r\n                                                                    <>\r\n                                                                        <div key={index} className={val.sender_id !== EmpID ? \"Tweet\" : \"Tweet owner\"}>\r\n                                                                            <p className=\"Tweeter\"> {val.sender_id !== EmpID ? ChatEmployee.name : CurrentEmployeeData.name}</p>\r\n                                                                            <div className=\"TweetBox\">\r\n                                                                                {\r\n                                                                                    encryptor.decrypt(val.chat_body).includes('/***')\r\n                                                                                        ?\r\n                                                                                        <img\r\n                                                                                            src={'images/drive/' + src}\r\n                                                                                            width=\"100%\"\r\n                                                                                            height=\"auto\"\r\n                                                                                            alt=\"drive attachment\"\r\n                                                                                        />\r\n                                                                                        :\r\n                                                                                        <>\r\n                                                                                            {encryptor.decrypt(val.chat_body)}\r\n                                                                                        </>\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                            <p className=\"TweetTime\">\r\n                                                                                {\r\n                                                                                    val.read_status === 'Read'\r\n                                                                                        ?\r\n                                                                                        <i style={{ fontSize: '12px !important' }} className=\"las la-check-double mr-1\"></i>\r\n                                                                                        :\r\n                                                                                        <i style={{ fontSize: '12px !important' }} className=\"las la-check mr-1\"></i>\r\n                                                                                }\r\n                                                                                {tConvert(val.send_time)}\r\n                                                                            </p>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                                <div className=\"NewTweet\">\r\n                                    <div\r\n                                        className=\"d-flex align-content-center w-100 bg-white border\"\r\n                                        style={\r\n                                            {\r\n                                                borderRadius: '10px',\r\n                                                color: 'rgb(91, 109, 128, .5)'\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        <input\r\n                                            className=\"form-control w-100\"\r\n                                            placeholder=\"Type something here...\"\r\n                                            id=\"Sendtext\"\r\n                                        />\r\n                                        <i className=\"las la-paperclip\" onClick={OpenDriveModal}></i>\r\n                                    </div>\r\n                                    <button onClick={OnChat}>\r\n                                        <i className=\"las la-arrow-up\"></i>\r\n                                    </button>\r\n                                    <button className=\"btn text-white refresh d-none\" onClick={() => GetThatEmpChat(ChatEmployee.emp_id, EmpIndex)}><i className=\"las la-redo-alt\"></i></button>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <div className=\"NoChat\">\r\n\r\n                                <img\r\n                                    src={NoCHat}\r\n                                    width=\"100%\"\r\n                                    height=\"auto\"\r\n                                    alt=\"No CHat Img\"\r\n                                />\r\n\r\n                                <h3 className='font-weight-bold'>NO EMPLOYEE SELECTED</h3>\r\n\r\n                            </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n\r\n                <div className='Right'>\r\n\r\n                    <div className='RightDiv'>\r\n                        <Calendar\r\n                            onChange={setCalender}\r\n                            value={Calender}\r\n                        />\r\n\r\n                        <div className=\"Details\">\r\n                            <p className=\"lightColor\">Status</p>\r\n                            <p\r\n                                style={\r\n                                    {\r\n                                        fontWeight: 500\r\n                                    }\r\n                                }\r\n                            >\r\n                                {\r\n                                    ShowChat\r\n                                        ?\r\n                                        ChatEmployee.name + ' is ' + (EmployeeStatus === '' ? 'offline' : 'online')\r\n                                        :\r\n                                        'No Employee Selected'\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"Details\">\r\n                            <p className=\"lightColor\">You are online from</p>\r\n                            <p\r\n                                style={\r\n                                    {\r\n                                        fontWeight: 500\r\n                                    }\r\n                                }\r\n                            >\r\n                                {\r\n                                    new Date().toTimeString()\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='RightCalender'>\r\n                    <Calendar\r\n                        onChange={setCalender}\r\n                        value={Calender}\r\n                    />\r\n                </div>\r\n                <div className='calenderdiv' onClick={ShowCalender}>\r\n                    <i className=\"las la-calendar\"></i>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"EmployeeChat SecondDiv\">\r\n                <Modal show={Show} Hide={ShowHide} content={<Drive AttachDrive={AttachDrive} data={DriveContent} />} />\r\n\r\n                <div className=\"Left\">\r\n                    <p className='font-weight-bold'>Chat Members</p>\r\n                    <p>{Employees.length - 1} members</p>\r\n\r\n                    <div className=\"tabs\">\r\n                        <button onClick={() => GetAllEmployees('chat')}>Chat</button>\r\n                        <button onClick={() => GetAllEmployees('contacts')}>contacts</button>\r\n                    </div>\r\n\r\n                    <div className=\"List\">\r\n\r\n                        {\r\n                            Employees.length === 0\r\n                                ?\r\n                                <h5> No Chat Found </h5>\r\n                                :\r\n                                Employees.map(\r\n                                    (val, index) => {\r\n\r\n                                        return (\r\n                                            <>\r\n                                                {\r\n                                                    val.emp_id === parseInt(sessionStorage.getItem('EmpID'))\r\n                                                        ?\r\n                                                        null\r\n                                                        :\r\n                                                        <div key={index} className=\"employee\" onClick={() => GetThatEmpChat2(val.emp_id, index)}>\r\n                                                            <div>\r\n                                                                <img\r\n                                                                    src={'images/employees/' + val.emp_image}\r\n                                                                    alt=\"empImg\"\r\n                                                                    width='45'\r\n                                                                    height='45'\r\n                                                                    className='rounded-circle'\r\n                                                                />\r\n                                                            </div>\r\n                                                            <div className=\"ml-2\">\r\n                                                                <p className='font-weight-bold'> {val.name} </p>\r\n                                                                <p> {val.designation_name + \" in \" + val.company_name} </p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                }\r\n                                            </>\r\n\r\n\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"Center\">\r\n                    {\r\n                        ShowChat\r\n                            ?\r\n                            <>\r\n                                <div className=\"ChatEmployee\">\r\n                                    <img\r\n                                        src={'images/employees/' + ChatEmployee.emp_image}\r\n                                        width='50'\r\n                                        height='50'\r\n                                        alt=\"chat employee img\"\r\n                                        className='rounded-circle'\r\n                                        onClick={BackDiv}\r\n                                    />\r\n                                    <div className=\"ml-2\">\r\n                                        <p className='font-weight-bold'> {ChatEmployee.name} </p>\r\n                                        <p> {ChatEmployee.designation_name + ' in ' + ChatEmployee.company_name} </p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"ChatContent\" id=\"ChatContainer\">\r\n\r\n                                    {\r\n                                        Calender.toDateString() !== new Date().toDateString()\r\n                                            ?\r\n                                            <p className=\"TweetDate\"> {Calender.toDateString()}</p>\r\n                                            :\r\n                                            null\r\n                                    }\r\n\r\n                                    {\r\n                                        Chat.map(\r\n                                            (val, index) => {\r\n\r\n                                                let src = '';\r\n                                                if (encryptor.decrypt(val.chat_body).includes('/***')) {\r\n                                                    src = encryptor.decrypt(val.chat_body).split('/***')[1].split('***')[0];\r\n                                                }\r\n\r\n\r\n                                                const chatDate = new Date(val.send_date);\r\n\r\n                                                let content = null;\r\n                                                if (Calender.toDateString() === new Date().toDateString()) {\r\n                                                    if (index - 1 >= 0) {\r\n\r\n                                                        let prevDate = new Date(Chat[index - 1].send_date).toDateString();\r\n                                                        let currDate = new Date(Chat[index].send_date).toDateString();\r\n\r\n                                                        if (currDate !== prevDate) {\r\n                                                            content = <p className=\"TweetDate\"> {currDate}</p>\r\n                                                        }\r\n\r\n                                                    } else if (index === 0) {\r\n                                                        content = <p className=\"TweetDate\"> {new Date(Chat[index].send_date).toDateString()}</p>\r\n                                                    }\r\n                                                }\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            Calender.toDateString() === new Date().toDateString()\r\n                                                                ?\r\n                                                                <>\r\n                                                                    {content}\r\n                                                                    <div key={index} className={val.sender_id !== EmpID ? \"Tweet\" : \"Tweet owner\"}>\r\n                                                                        <p className=\"Tweeter\"> {val.sender_id !== EmpID ? ChatEmployee.name : CurrentEmployeeData.name}</p>\r\n                                                                        <div className=\"TweetBox\">\r\n                                                                            {\r\n                                                                                encryptor.decrypt(val.chat_body).includes('/***')\r\n                                                                                    ?\r\n                                                                                    <img\r\n                                                                                        src={'images/drive/' + src}\r\n                                                                                        width=\"100%\"\r\n                                                                                        height=\"auto\"\r\n                                                                                        alt=\"drive attachment\"\r\n                                                                                    />\r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {encryptor.decrypt(val.chat_body)}\r\n                                                                                    </>\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                        <p className=\"TweetTime\">\r\n                                                                            {\r\n                                                                                val.sender_id !== EmpID\r\n                                                                                    ?\r\n                                                                                    null\r\n                                                                                    :\r\n                                                                                    <>\r\n                                                                                        {\r\n                                                                                            val.read_status === 'Read'\r\n                                                                                                ?\r\n                                                                                                <i style={{ fontSize: '12px !important' }} className=\"las la-check-double mr-1\"></i>\r\n                                                                                                :\r\n                                                                                                <i style={{ fontSize: '12px !important' }} className=\"las la-check mr-1\"></i>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                            }\r\n                                                                            {tConvert(val.send_time)}\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                chatDate.toDateString() === Calender.toDateString()\r\n                                                                    ?\r\n                                                                    <>\r\n                                                                        <div key={index} className={val.sender_id !== EmpID ? \"Tweet\" : \"Tweet owner\"}>\r\n                                                                            <p className=\"Tweeter\"> {val.sender_id !== EmpID ? ChatEmployee.name : CurrentEmployeeData.name}</p>\r\n                                                                            <div className=\"TweetBox\">\r\n                                                                                {\r\n                                                                                    encryptor.decrypt(val.chat_body).includes('/***')\r\n                                                                                        ?\r\n                                                                                        <img\r\n                                                                                            src={'images/drive/' + src}\r\n                                                                                            width=\"100%\"\r\n                                                                                            height=\"auto\"\r\n                                                                                            alt=\"drive attachment\"\r\n                                                                                        />\r\n                                                                                        :\r\n                                                                                        <>\r\n                                                                                            {encryptor.decrypt(val.chat_body)}\r\n                                                                                        </>\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                            <p className=\"TweetTime\">\r\n                                                                                {\r\n                                                                                    val.read_status === 'Read'\r\n                                                                                        ?\r\n                                                                                        <i style={{ fontSize: '12px !important' }} className=\"las la-check-double mr-1\"></i>\r\n                                                                                        :\r\n                                                                                        <i style={{ fontSize: '12px !important' }} className=\"las la-check mr-1\"></i>\r\n                                                                                }\r\n                                                                                {tConvert(val.send_time)}\r\n                                                                            </p>\r\n                                                                        </div>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                                <div className=\"NewTweet\">\r\n                                    <div\r\n                                        className=\"d-flex align-content-center w-100 bg-white border\"\r\n                                        style={\r\n                                            {\r\n                                                borderRadius: '10px',\r\n                                                color: 'rgb(91, 109, 128, .5)'\r\n                                            }\r\n                                        }\r\n                                    >\r\n                                        <input\r\n                                            className=\"form-control w-100\"\r\n                                            placeholder=\"Type something here...\"\r\n                                            id=\"Sendtext\"\r\n                                        />\r\n                                        <i className=\"las la-paperclip\" onClick={OpenDriveModal}></i>\r\n                                    </div>\r\n                                    <button onClick={OnChat}>\r\n                                        <i className=\"las la-arrow-up\"></i>\r\n                                    </button>\r\n                                    <button className=\"btn text-white refresh d-none\" onClick={() => GetThatEmpChat(ChatEmployee.emp_id, EmpIndex)}><i className=\"las la-redo-alt\"></i></button>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <div className=\"NoChat\">\r\n\r\n                                <img\r\n                                    src={NoCHat}\r\n                                    width=\"100%\"\r\n                                    height=\"auto\"\r\n                                    alt=\"No CHat Img\"\r\n                                />\r\n\r\n                                <h3 className='font-weight-bold'>NO EMPLOYEE SELECTED</h3>\r\n\r\n                            </div>\r\n                    }\r\n\r\n\r\n                </div>\r\n                <div className='RightCalender'>\r\n                    <Calendar\r\n                        onChange={setCalender}\r\n                        value={Calender}\r\n                    />\r\n                </div>\r\n                <div className='calenderdiv' onClick={ShowCalender}>\r\n                    <i className=\"las la-calendar\"></i>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Employee_Chat;","import React from 'react'\r\nimport './Modal.css';\r\n\r\nconst Modal = ( props ) =>{\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request_Div\" style={ { display: props.show ? 'flex' : 'none'  } }>\r\n                <div className=\"dark\" onClick={ props.Hide }>\r\n                </div>\r\n                <div style={ { animationDelay: ( 0 + '.' + 1 ).toString() + 's' } } className={ props.show ? \"Attandence_Request_Div_Content Attandence_Request_Div_Content2\" : \"Attandence_Request_Div_Content\" }>\r\n                    {\r\n                        props.content\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Modal;","import React, { useEffect } from 'react';\r\nimport './Menu.css';\r\nimport $ from \"jquery\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n\r\n    useEffect(\r\n        () => {\r\n            $('.Speeddail_Grid').slideToggle(0);\r\n        }, []\r\n\r\n    )\r\n    const ShowMenuGrid = () => {\r\n        $('.Menu_Speeddail .Speeddail_Grid').slideToggle(200);\r\n        \r\n        if ( $('.Menu_Speeddail .Menu_Speeddail_circle .las').hasClass('la-bars') )\r\n        {\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').removeClass('la-bars');\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').addClass('la-times');\r\n        }else\r\n        {\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').removeClass('la-times');\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').addClass('la-bars');      \r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Menu\">\r\n                {\r\n                    props.data.length > 0\r\n                        ?\r\n                        <>\r\n                            <div className=\"Menu_Grid\">\r\n                                {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <button><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                                </Link>\r\n                                                            :\r\n                                                                <button onClick={ () => val.func() }><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                            </div>\r\n                            <div className=\"Menu_Speeddail\">\r\n                                <div className=\"Menu_Speeddail_circle\" onClick={ShowMenuGrid}>\r\n                                    <i class=\"las la-times\"></i>\r\n                                </div>\r\n                                <div className=\"Speeddail_Grid\">\r\n                                    {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <div key={index}>\r\n                                                                        <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                        <p>{val.txt}</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                                :\r\n                                                                <div className=\"clicks\" key={index} onClick={ () => val.func() }>\r\n                                                                    <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                    <p>{val.txt}</p>\r\n                                                                </div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Menu;"],"sourceRoot":""}