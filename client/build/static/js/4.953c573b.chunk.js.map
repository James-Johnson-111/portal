{"version":3,"sources":["../node_modules/spoken/build/spoken.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["spoken","_","window","recognition","SpeechRecognition","webkitSpeechRecognition","Object","transcriptResults","event","resolve","results","interim","i","length","push","transcript","isFinal","listen","partialcb","join","interimResults","lang","navigator","language","voices","e","a","Promise","r","speechSynthesis","getVoices","onvoiceschanged","say","text","voice","speech","SpeechSynthesisUtterance","filter","v","name","onend","speak","setup","onstart","startcb","endcb","onerror","errorcb","continuous","reject","onresult","start","delay","duration","setTimeout","stop","on","partial","cb","end","error","available","module","exports","runtime","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply"],"mappings":"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","file":"static/js/4.953c573b.chunk.js","sourcesContent":["function spoken() {}\n\nexport default spoken; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n// Speech SDK for Voice to Text and Text to Voice\n// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n(_ => {\n  'use strict';\n\n  if (typeof window !== 'undefined') window.spoken = spoken; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Setup Speech Regcognition\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n  const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition || Object)();\n  recognition.interimResults = true;\n  recognition.lang = navigator.language || 'en-US';\n  spoken.recognition = recognition; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Get Voices for Text-to-Speech\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n  spoken.voices = async e => {\n    return new Promise(r => {\n      let voices = speechSynthesis.getVoices();\n      if (voices.length) r(voices);\n\n      speechSynthesis.onvoiceschanged = e => r(speechSynthesis.getVoices());\n    });\n  }; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Invoike Synthetic Voices for Text-to-Speech\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n\n  spoken.say = async (text, voice = 'Alex') => {\n    const speech = new SpeechSynthesisUtterance(text);\n    const voices = await spoken.voices();\n    const lang = recognition.lang; // Select Voice with Default\n\n    if (voice) speech.voice = (voices.filter(v => v.name == voice) || voices)[0];else speech.voice = (voices.filter(v => v.lang == lang) || voices)[0];\n    return new Promise(resolve => {\n      speech.onend = async () => resolve(speech);\n\n      speechSynthesis.speak(speech);\n    });\n  }; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Speech to Text - Listens to your voice and creates a transcription.\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n\n  spoken.listen = async (setup = {}) => {\n    recognition.onstart = spoken.listen.startcb;\n    recognition.onend = spoken.listen.endcb;\n    recognition.onerror = spoken.listen.errorcb;\n    recognition.continuous = setup.continuous;\n    return new Promise((resolve, reject) => {\n      recognition.onresult = async e => transcriptResults(e, resolve);\n\n      try {\n        recognition.start();\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n\n  function transcriptResults(event, resolve) {\n    const results = event.results;\n    const interim = []; // Results\n\n    for (let i = 0; i < results.length; i++) {\n      // Interim Result\n      interim.push(results[i][0].transcript); // Final Result\n\n      if (results[i].isFinal) resolve(results[i][0].transcript, event);\n    }\n\n    spoken.listen.partialcb(interim.join(''), event);\n    interim.length = 0;\n  } // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Easy Wait Command\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n\n  spoken.delay = duration => {\n    return new Promise(resolve => setTimeout(resolve, duration));\n  }; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Stop Speech to Text Voice Recognition\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n\n  spoken.listen.stop = async e => {\n    spoken.recognition.stop();\n  }; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Speech to Text - Transcription Events\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n\n  spoken.listen.on = {\n    partial: cb => spoken.listen.partialcb = cb,\n    start: cb => spoken.listen.startcb = cb,\n    end: cb => spoken.listen.endcb = cb,\n    error: cb => spoken.listen.errorcb = cb\n  };\n\n  spoken.listen.partialcb = e => true;\n\n  spoken.listen.startcb = e => true;\n\n  spoken.listen.endcb = e => true;\n\n  spoken.listen.errorcb = e => true; // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Speech to Text is Available\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n\n\n  spoken.listen.available = e => !!recognition.start;\n})();","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}