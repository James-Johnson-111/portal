{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/@socket.io/component-emitter/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-parser/build/esm/commons.js","../../../src/index.ts","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/parseqs/index.js","../node_modules/parseuri/index.js","../node_modules/yeast/index.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/backo2/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"],"names":["_assertThisInitialized","self","ReferenceError","pick","obj","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","Emitter","key","prototype","mixin","exports","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","target","property","receiver","Reflect","get","base","object","Object","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","isArray","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","xdomain","XMLHttpRequest","hasCORS","concat","join","Polling","polling","poll","onPause","readyState","pause","writable","total","doPoll","data","decodePayload","socket","binaryType","forEach","packet","type","onOpen","onClose","onPacket","close","write","packets","encodePayload","doWrite","query","schema","secure","port","timestampRequests","timestampParam","yeast","supportsBinary","sid","b64","Number","encodedQuery","parseqs","encode","hostname","indexOf","path","Transport","empty","hasXHR2","responseType","XHR","location","isSSL","protocol","xd","xs","forceBase64","assign","Request","uri","req","request","method","onError","onData","pollXhr","async","undefined","create","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","transports","websocket","WS","Socket","parseuri","host","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","replace","decode","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","Error","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","l","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","autoUnref","unref","options","compress","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeArrayBuffer","ArrayBuffer","toString","withNativeBlob","Blob","withNativeFile","File","isBinary","isView","buffer","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","Date","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","str","nsp","stringify","deconstruction","unshift","Decoder","decodeString","reconstructor","BinaryReconstructor","base64","takeBinaryData","p","charAt","start","buf","substring","c","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","ev","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onopen","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","_reconnecting","attempts","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","keys","active","_close","encodedPackets","reset","delay","duration","onreconnect","attempt","cache","lookup","parsed","loc","test","href","url","source","sameNamespace","forceNew","multiplex","queryKey","window","Function","description","doOpen","doClose","decodePacket","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","encodePacket","decodeBase64Packet","decoded","mapBinary","encodedPacket","SEPARATOR","String","fromCharCode","count","encodedPayload","decodedPacket","_typeof","constructor","_possibleConstructorReturn","assertThisInitialized","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","re","parts","module","src","b","m","exec","authority","ipv6uri","pathNames","regx","names","$0","$1","$2","prev","alphabet","map","seed","encoded","Math","floor","now","isReactNative","navigator","product","toLowerCase","check","protocols","headers","ws","usingBrowserWebSocket","WebSocket","defaultBinaryType","addEventListeners","_socket","onmessage","lastPacket","Buffer","byteLength","nextTick","Promise","resolve","then","MozWebSocket","ms","factor","pow","rand","random","deviation","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","enumerable","configurable","defineProperty","_createClass","protoProps","staticProps","_setPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","Super","NewTarget","possibleConstructorReturn","_getPrototypeOf"],"mappings":"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","file":"static/js/4.cb53484c.chunk.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}"],"sourceRoot":""}