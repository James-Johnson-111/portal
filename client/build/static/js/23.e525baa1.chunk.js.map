{"version":3,"sources":["images/QFS-LOGO.PNG","images/SBL-LOGO.PNG","images/SEABOARD-SERVICES.PNG","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/Request/Request.jsx","images/Logo.jpg","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/Form/Venders/Venders.jsx","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/Form/Form.jsx","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/PurchaseOrder.jsx","Components/UI/Menu/Menu.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Request","className","src","alt","style","backgroundColor","fontSize","to","Venders","props","name","phone","address","onClick","RemoveVender","key","Form","useState","NewVender","setNewVender","Companies","setCompanies","Locations","setLocations","ShiptoLocations","setShiptoLocations","VendersList","setVendersList","VendersFound","setVendersFound","Data","setData","useEffect","GetAllVenders","d","Date","axios","get","then","res","data","catch","err","console","log","SGC","textDecoration","QFS","width","SBL","SBS","onChange","OnChangeCompany","value","map","val","index","company_code","company_name","RequestInformation","company","OnChangeLocation","location_code","location","location_phone","company_website","type","placeholder","PurchaseOrderCode","toDateString","$","hasClass","removeClass","addClass","cursor","venders","length","onSubmit","e","preventDefault","VenderName","target","VenderPhone","VenderAddress","filter","alert","trigger","AddVender","minLength","vender_name","includes","required","id","SelectedVender","vender_phone","vender_address","SelectVender","OnChangeShipToCompany","ShipTo","OnChangeShipToLocation","Items","onDoubleClick","OnEdit","onContextMenu","onDelete","description","reason","quantity","price","taxRequired","tax","amount","toLocaleString","OnChangeHandler","onKeyDown","AddItem","Item","pattern","disabled","Amount","Total","OnComments","Home","lazy","PurchaseOrder","MenuData","setMenuData","Submitted","setPOCode","setRequests","setPurchaseOrderCode","setCountStatus","location_name","location_address","comments","setRequestInformation","setItems","setAmount","setTotal","Index","setIndex","EditMode","setEditMode","setItem","useSelector","state","EmpAuth","EmployeeData","GetAllCompanies","socket","on","AllPO","emp_id","GetLastPO","icon","txt","link","href","FormData","append","post","arr","x","push","status","pr_code","createPOCode","CCode","LastNum","Year","getMonth","getFullYear","toString","substring","code","parseInt","po_code","split","Company","website","Location","input","document","getElementById","keyCode","i","speed","typeWriter","charAt","html","setTimeout","cart","pr_id","t","objDiv","scrollTop","scrollHeight","toggleClass","Menu","fallback","exact","path","render","slideToggle","func","class","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"mGAAe,QAA0B,sC,iCCA1B,QAA0B,sC,iCCA1B,QAA0B,+C,kNCiD1BA,EA5CC,WACZ,OACI,sBAAKC,UAAU,oBAAf,UACI,sBAAKA,UAAU,oDAAf,UACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKC,IAAK,sHAAuHC,IAAI,gBACrI,gCACI,mBAAGF,UAAU,qBAAb,2BACA,gEAGR,sBAAKA,UAAU,OAAf,UACI,mBAAGA,UAAU,qBAAb,mBACA,gDAGR,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,gCACI,mBAAGA,UAAU,qBAAb,kBACA,gDAEJ,gCACI,mBAAGA,UAAU,qBAAb,oBACA,mBAAGG,MAAO,CAAEC,gBAAiB,MAAOC,SAAU,QAAUL,UAAU,2CAAlE,gCAIZ,sBAAKA,UAAU,4BAAf,UACI,mBAAGA,UAAU,0BACb,gCACI,mBAAGA,UAAU,qBAAb,uBACA,mDAGR,qBAAKA,UAAU,wBAAf,SACI,cAAC,IAAD,CAAMM,GAAI,+CAAV,SACI,wBAAQN,UAAU,MAAlB,0B,qFC1CL,MAA0B,iCCsB1BO,G,OAlBC,SAAEC,GAEd,OACI,sBAAKR,UAAU,SAAf,UACI,6BACMQ,EAAMC,OAEZ,4BACMD,EAAME,QAEZ,4BACMF,EAAMG,UAEZ,mBAAGX,UAAU,mBAAmBY,QAAU,kBAAMJ,EAAMK,aAAcL,EAAMC,WAVhDD,EAAMM,OC4tB7BC,EAttBF,SAAEP,GAEX,MAAoCQ,oBAAU,GAA9C,mBAAQC,EAAR,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQG,EAAR,KAAmBC,EAAnB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAQK,EAAR,KAAmBC,EAAnB,KACA,EAAgDN,mBAAS,IAAzD,mBAAQO,EAAR,KAAyBC,EAAzB,KACA,EAAwCR,mBAAS,IAAjD,mBAAQS,EAAR,KAAqBC,EAArB,KACA,EAA0CV,mBAAS,IAAnD,mBAAQW,EAAR,KAAsBC,EAAtB,KACA,EAA0BZ,mBAAS,IAAnC,mBAAQa,EAAR,KAAcC,EAAd,KAEAC,qBACI,WAEIX,EAAcZ,EAAMW,WACpBG,EAAcd,EAAMa,WACpBG,EAAoBhB,EAAMe,iBAC1BO,EAAStB,EAAMqB,QAEhB,CAAErB,EAAMW,UAAWX,EAAMa,UAAWb,EAAMe,gBAAiBf,EAAMqB,OAGxEE,qBACI,WAEIC,MAED,IAGP,IAAMC,EAAI,IAAIC,KAwDRF,EAAgB,WAElBG,IAAMC,IAAI,kBAAkBC,MAAK,SAAAC,GAE7BZ,EAAgBY,EAAIC,SAErBC,OAAM,SAAAC,GAELC,QAAQC,IAAIF,OAuCpB,OACI,qCACI,sBAAKzC,UAAU,SAAf,UAEI,qBAAKC,IAAM2C,EAAM5C,UAAU,YAAYE,IAAI,oBAG3C,oBACIF,UAAU,cACVG,MACI,CACI0C,eAAgB,aAJ5B,4BASA,sBAAK7C,UAAU,aAAf,UAEI,qBAAKC,IAAM6C,IAAM5C,IAAI,WAAW6C,MAAM,SACtC,qBAAK9C,IAAM+C,IAAM9C,IAAI,WAAW6C,MAAM,SACtC,qBAAK9C,IAAMgD,IAAM/C,IAAI,WAAW6C,MAAM,YAK1C,oBACI/C,UAAU,mBACVG,MACI,CACI0C,eAAgB,aAJ5B,4BAWA,sBAAK7C,UAAU,oBAAf,UAII,sBAAKA,UAAU,mBAAf,UAEI,yBACIA,UAAU,yBACVkD,SAAW1C,EAAM2C,gBAFrB,UAII,wBAAQC,MAAM,GAAd,gCAEIjC,EAAUkC,KACN,SAAEC,EAAKC,GAEH,OACI,yBAAsBH,MAAQE,EAAIE,aAAlC,cAAoDF,EAAIG,aAAxD,MAAcF,SAQ9B/C,EAAMkD,oBAE4C,IAAlDlD,EAAMkD,mBAAmBC,QAAQH,aAE7B,yBACIxD,UAAU,yBACVkD,SAAW1C,EAAMoD,iBAFrB,UAII,wBAAQR,MAAM,GAAd,iCAEI/B,EAAUgC,KACN,SAAEC,EAAKC,GAGH,OACI,yBAAsBH,MAAQE,EAAIO,cAAlC,cAAqDP,EAAI3C,QAAzD,MAAc4C,SAUtC,KAEJ,8BACI,mBAAGvD,UAAU,OAAb,oBAEIQ,EAAMkD,mBAENlD,EAAMkD,mBAAmBI,SAASC,eAElC,QAGR,8BACI,mBAAG/D,UAAU,OAAb,sBAEIQ,EAAMkD,mBAENlD,EAAMkD,mBAAmBC,QAAQK,gBAEjC,WAQZ,qBAAKhE,UAAU,oBAAf,SAEI,sBAAKA,UAAU,WAAf,UAGI,qBAAKA,UAAU,OAAf,uBAIA,qBAAKA,UAAU,OAAf,SACI,uBACIiE,KAAK,OACLjE,UAAU,wBACVkE,YAAY,yBAKpB,qBAAKlE,UAAU,OAAf,uBAIA,qBAAKA,UAAU,OAAf,SACMQ,EAAM2D,oBAIZ,qBAAKnE,UAAU,OAAf,kBAIA,qBAAKA,UAAU,OAAf,SACMiC,EAAEmC,yBAWpB,sBAAKpE,UAAU,+BAAf,UAII,sBAAKA,UAAU,cAAf,UAGI,sBAAKA,UAAU,0DAAf,oBAEI,gCACI,mBACIA,UAAU,sCACVY,QA3QX,WAEjBM,GAAeD,GACVoD,IAAE,wEAAwEC,SAAS,mBAEpFD,IAAE,wEAAwEE,YAAY,kBACtFF,IAAE,wEAAwEG,SAAS,qBAGnFH,IAAE,wEAAwEE,YAAY,mBACtFF,IAAE,wEAAwEG,SAAS,oBAkQ3DrE,MACI,CACIsE,OAAQ,aAIpB,qCAASjE,EAAMkD,mBAAqBlD,EAAMkD,mBAAmBgB,QAAQC,OAAS,KAA9E,aAMJ1D,EAEA,uBAAM2D,SA1QZ,SAAEC,GAEhBA,EAAEC,iBAGF,IAAIC,EAAaF,EAAEG,OAAF,WAAuB5B,MACpC6B,EAAcJ,EAAEG,OAAF,YAAwB5B,MACtC8B,EAAgBL,EAAEG,OAAF,cAA0B5B,MAE1CE,EAAM,CACNyB,WAAYA,EACZE,YAAaA,EACbC,cAAeA,IAGA1E,EAAMkD,mBAAqBlD,EAAMkD,mBAAmBgB,QAAU,MAEjDS,QAC5B,SAAE7B,GAEE,OAAOA,EAAIyB,aAAeA,KAKhBJ,OAAS,EAEvBS,MAAM,0BAGNf,IAAE,kBAAkBgB,QAAQ,SAC5B7E,EAAM8E,UAAWhC,KA2O4BtD,UAAU,YAAvC,UACI,8BAAG,sCAAH,0CACA,sBAAKA,UAAU,4BAAf,UACI,mBAAGA,UAAU,6BAAb,oBACA,sBAAKA,UAAU,wBAAf,UACI,uBACIuF,UAAU,IACVtB,KAAK,OACLjE,UAAU,eACVS,KAAK,aACLyC,SAhOX,SAAE2B,GAE3B,IAAQzB,EAAUyB,EAAEG,OAAZ5B,MAEJzB,EAAeF,EAAY0D,QAC3B,SAAE7B,GAEE,OAAOA,EAAIkC,YAAYC,SAAUrC,MAKzCxB,EAAiBD,GACF,KAAVyB,GAEDxB,EAAgB,KAkNgB8D,UAAQ,IAGgB,IAAxB/D,EAAagD,OAEb,KAEA,qBAAK3E,UAAU,OAAf,SAEQ2B,EAAa0B,KACT,SAAEC,EAAKC,GAEH,OACI,oBAEIvD,UAAU,OACVY,QAAU,kBA5NrD,SAAE+E,GAEnB,IAAIC,EAAiBjE,EAAagE,GAClCtB,IAAE,kCAAkCf,IAAKsC,EAAeJ,aACxDnB,IAAE,mCAAmCf,IAAKsC,EAAeC,cACzDxB,IAAE,qCAAqCf,IAAKsC,EAAeE,gBAE3DlE,EAAgB,IAqN4DmE,CAAcxC,IAC9BpD,MACI,CACIsE,OAAQ,WANpB,cASInB,EAAIkC,YATR,MACUjC,cAkB1C,sBAAKvD,UAAU,4BAAf,UACI,mBAAGA,UAAU,6BAAb,qBACA,uBACIuF,UAAU,KACVtB,KAAK,OACLjE,UAAU,eACVS,KAAK,cACLiF,UAAQ,OAGhB,sBAAK1F,UAAU,4BAAf,UACI,mBAAGA,UAAU,6BAAb,uBACA,uBACIuF,UAAU,IACVtB,KAAK,OACLjE,UAAU,eACVS,KAAK,gBACLiF,UAAQ,OAGhB,wBAAQ1F,UAAU,uBAAuBiE,KAAK,QAA9C,oBACA,wBAAQjE,UAAU,MAAMiE,KAAK,SAA7B,oBAGJ,KAIAzD,EAAMkD,oBAENlD,EAAMkD,mBAAmBgB,QAAQC,OAAS,EAE1CnE,EAAMkD,mBAAmBgB,QAAQrB,KAC7B,SAAEC,EAAKC,GAEH,OACI,cAAC,EAAD,CAEI9C,KAAO6C,EAAIyB,WACXrE,MAAQ4C,EAAI2B,YACZtE,QAAU2C,EAAI4B,cAEdrE,aAAeL,EAAMK,cALf0C,MActB,QAOR,sBAAKvD,UAAU,kBAAf,UAGI,qBAAKA,UAAU,QAAf,qBAKA,yBACIA,UAAU,yBACVkD,SAAW1C,EAAMwF,sBAFrB,UAII,wDAEI7E,EAAUkC,KACN,SAAEC,EAAKC,GAEH,OACI,yBAAsBH,MAAQE,EAAIE,aAAlC,cAAoDF,EAAIG,aAAxD,MAAcF,SAQ9B/C,EAAMkD,oBAEmD,IAAzDlD,EAAMkD,mBAAmBuC,OAAOtC,QAAQH,aAEpC,yBACIxD,UAAU,yBACVkD,SAAW1C,EAAM0F,uBAFrB,UAII,yDAEI3E,EAAgB8B,KACZ,SAAEC,EAAKC,GAGH,OACI,yBAAsBH,MAAQE,EAAIO,cAAlC,cAAqDP,EAAI3C,QAAzD,MAAc4C,SAUtC,KAEJ,8BACI,mBAAGvD,UAAU,OAAb,oBAEIQ,EAAMkD,mBAENlD,EAAMkD,mBAAmBuC,OAAOnC,SAASC,eAEzC,QAGR,8BACI,mBAAG/D,UAAU,OAAb,sBAEIQ,EAAMkD,mBAENlD,EAAMkD,mBAAmBuC,OAAOtC,QAAQK,gBAExC,cAWhB,sBAAKhE,UAAU,oBAAf,UACI,sBAAKA,UAAU,kBAAkBG,MAAO,CAAEC,gBAAiB,sBAA3D,UACI,8BAAK,mBAAGJ,UAAU,qBAAb,kBACL,8BAAK,oBAAGA,UAAU,qBAAb,yBAA8C,qBAAKA,UAAU,UAAf,8CAA9C,SACL,8BAAK,mBAAGA,UAAU,qBAAb,sBACL,8BAAK,mBAAGA,UAAU,qBAAb,wBACL,8BAAK,oBAAGA,UAAU,qBAAb,4BAAkD,wCAAlD,SACL,8BAAK,oBAAGA,UAAU,qBAAb,iBAAuC,6CAAvC,SACL,8BAAK,mBAAGA,UAAU,qBAAb,qBACL,8BAAK,mBAAGA,UAAU,qBAAb,6BAGLQ,EAAM2F,MAAM9C,KACR,SAACC,EAAKC,GAEF,OAEI,sBACIvD,UAAW,kCAAoCuD,EAE/C6C,cAAe,kBAAM5F,EAAM6F,OAAO9C,IAClC+C,cAAe,kBAAM9F,EAAM+F,SAAShD,IAJxC,UAMI,oCAAM,kCAAKA,EAAQ,EAAb,OAAN,QACA,oCAAM,kCAAKD,EAAIkD,YAAT,UACN,oCAAM,kCAAKlD,EAAImD,OAAT,UACN,oCAAM,kCAAKnD,EAAIoD,SAAT,OAAN,OACA,oCAAM,kCAAKpD,EAAIqD,MAAT,OAAN,OACA,oCAAM,kCAAKrD,EAAIsD,YAAT,OAAN,OACA,oCAAM,kCAAKtD,EAAIuD,IAAT,OAAN,OACA,oCAAM,kCAAK,MAAQvD,EAAIwD,OAAOC,eAAe,SAAvC,OAAN,SAXKxD,MAoBrB/C,EAAM2F,OAEF3F,EAAM2F,MAEN,mCACI,sBAAanG,UAAU,4BAAvB,UACI,qBAAKA,UAAU,mDAAf,SAAkE,4BAAIQ,EAAM2F,MAAMxB,OAAS,MAC3F,8BACI,0BACI3E,UAAU,eACVkD,SAAU1C,EAAMwG,gBAChBC,UAAWzG,EAAM0G,QACjB9D,MAAO5C,EAAM2G,KAAKX,YAClB/F,KAAK,kBAGb,gCACI,0BACIT,UAAU,eACVkD,SAAU1C,EAAMwG,gBAChBC,UAAWzG,EAAM0G,QACjB9D,MAAO5C,EAAM2G,KAAKV,OAClBhG,KAAK,WAET,mBAAGT,UAAU,8BAEjB,8BACI,uBACIiE,KAAK,OACLjE,UAAU,eACVkE,YAAY,IACZhB,SAAU1C,EAAMwG,gBAChBC,UAAWzG,EAAM0G,QACjB9D,MAAO5C,EAAM2G,KAAKT,SAClBU,QAAQ,SACR3G,KAAK,eAGb,8BACI,uBACIwD,KAAK,OACLjE,UAAU,eACVkE,YAAY,IACZhB,SAAU1C,EAAMwG,gBAChBC,UAAWzG,EAAM0G,QACjB9D,MAAO5C,EAAM2G,KAAKR,MAClBS,QAAQ,SACR3G,KAAK,YAGb,8BACI,yBACIwD,KAAK,OACLjE,UAAU,eACVkE,YAAY,IACZhB,SAAU1C,EAAMwG,gBAChBvG,KAAK,cALT,UAOI,wBAAQ2C,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,sBAGR,8BACI,uBACIa,KAAK,OACLjE,UAAU,eACVkE,YAAY,IACZhB,SAAU1C,EAAMwG,gBAChBC,UAAWzG,EAAM0G,QACjB9D,MAAO5C,EAAM2G,KAAKN,IAClBpG,KAAK,MACLkF,GAAG,MACH0B,UAAQ,MAGhB,8BACI,uBACIpD,KAAK,OACLjE,UAAU,eACVkE,YAAY,IACZd,MAAO,MAAQ5C,EAAM8G,OAAOP,eAAe,SAC3CK,QAAQ,SACR3G,KAAK,aACL4G,UAAQ,QA9EV,KAoFd,KAER,sBAAKrH,UAAU,kBAAf,UACI,wBACA,qBAAKG,MAAO,CAAEC,gBAAiB,sBAA/B,SAAuD,mBAAGJ,UAAU,qCAAb,uBACvD,wBACA,wBACA,wBACA,wBACA,wBACA,8BAAK,4BAAI,MAAQQ,EAAM+G,MAAMR,eAAe,mBAKpD,sBAAK/G,UAAU,WAAf,UAGI,qBAAKA,UAAU,kBAAf,sBAGA,0BACIkE,YAAY,6CACZlE,UAAU,yBACVkD,SAAW1C,EAAMgH,gBAQzB,sBAAKxH,UAAU,SAAf,UAKI,sBAAKA,UAAU,mBAAf,UAGI,qBAAKA,UAAU,QAAf,0BAKA,sBAAKA,UAAU,sCAAf,UACI,mBAAGA,UAAU,yBAAb,kBAGA,mBAAGA,UAAU,QAAb,SACM6B,EAAKpB,UAGf,sBAAKT,UAAU,sCAAf,UACI,mBAAGA,UAAU,yBAAb,kBAGA,mBAAGA,UAAU,QAAb,SACMiC,EAAEmC,uBAShB,sBAAKpE,UAAU,mBAAf,UAGI,qBAAKA,UAAU,QAAf,yBAKA,sBAAKA,UAAU,sCAAf,UACI,mBAAGA,UAAU,yBAAb,kBAGA,mBAAGA,UAAU,aAIjB,sBAAKA,UAAU,sCAAf,UACI,mBAAGA,UAAU,yBAAb,kBAGA,mBAAGA,UAAU,sBAW7B,wBAAQA,UAAU,uCAAlB,wBC/sBNyH,EAAOC,gBAAM,kBAAM,wDA4tBVC,UA1tBO,WAGlB,MAAgC3G,mBAAS,IAAzC,mBAAO4G,EAAP,KAAiBC,EAAjB,KAEA,EAAkC7G,oBAAS,GAA3C,mBAAO8G,EAAP,KACA,GADA,KAC4B9G,mBAAS,KAArC,mBAAe+G,GAAf,WAEA,EAAgC/G,mBAAS,IAAzC,mBAAiBgH,GAAjB,WACA,EAAkChH,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8CN,mBAAS,IAAvD,mBAAOO,EAAP,KAAwBC,EAAxB,KACA,EAAkDR,mBAAS,IAA3D,mBAAOmD,EAAP,KAA0B8D,EAA1B,KACA,EAAsCjH,mBAAS,IAA/C,mBAAoBkH,GAApB,WAEA,EAAkClH,oBAAS,GAA3C,mBAEA,GAFA,UAEoDA,mBAChD,CACI2C,QAAS,CACLH,aAAc,EACdC,aAAc,GACdO,gBAAiB,IAErBF,SAAU,CACND,cAAe,EACfsE,cAAe,GACfpE,eAAgB,GAChBqE,iBAAkB,IAEtBnC,OAAQ,CACJtC,QAAS,CACLH,aAAc,EACdC,aAAc,GACdO,gBAAiB,IAErBF,SAAU,CACND,cAAe,EACfsE,cAAe,GACfpE,eAAgB,GAChBqE,iBAAkB,KAG1B1D,QAAS,GACT2D,SAAU,MA3BlB,mBAAO3E,EAAP,KAA2B4E,EAA3B,KA+BA,EAA0BtH,mBAAS,IAAnC,oBAAOmF,GAAP,MAAcoC,GAAd,MACA,GAA4BvH,mBAAS,GAArC,qBAAOsG,GAAP,MAAekB,GAAf,MACA,GAA0BxH,mBAAS,GAAnC,qBAAOuG,GAAP,MAAckB,GAAd,MACA,GAA0BzH,qBAA1B,qBAAO0H,GAAP,MAAcC,GAAd,MAEA,GAAgC3H,oBAAS,GAAzC,qBAAO4H,GAAP,MAAiBC,GAAjB,MAEA,GAAwB7H,mBAAS,CAC7BwF,YAAa,GACbC,OAAQ,GACRE,MAAO,EACPC,YAAa,KACbC,IAAK,GACLH,SAAU,IANd,qBAAOS,GAAP,MAAa2B,GAAb,MASMjH,GAAOkH,aAAa,SAAEC,GAAF,OAAaA,EAAMC,QAAQC,gBAErDnH,qBACI,WAESF,GAAK2B,eAEN2F,KAGAC,IAAOC,GACH,wBAAwB,WAEpBC,GAAOzH,GAAK0H,WAMpBD,GAAOzH,GAAK0H,QAGZC,GAAW3H,GAAK2B,cAEhBqE,EACI,CACI,CACI4B,KAAM,0BACNC,IAAK,iBACLC,MAAM,EACNC,KAAM,iCAWvB,CAAE/H,GAAK2B,aAAcsE,IAI5B,IAAMqB,GAAkB,WAEpB,IAAMtH,EAAO,IAAIgI,SACjB1H,IAAMC,IAAI,mBAAoBP,GAAMQ,MAChC,SAACC,GAEGlB,EAAckB,EAAIC,SAGxBC,OACE,SAACC,GAEGC,QAAQC,IAAIF,OAQlB6G,GAAQ,SAAE3D,GAEZ,IAAM9D,EAAO,IAAIgI,SACjBhI,EAAKiI,OAAO,QAASnE,GACrBxD,IAAM4H,KAAK,4BAA6BlI,GAAMQ,MAC1C,SAACC,GAEG0F,EAAa1F,EAAIC,MAEjB,IADA,IAAIyH,EAAM,GACDC,EAAI,EAAGA,EAAI3H,EAAIC,KAAKoC,OAAQsF,IAGjCD,EAAIE,KAAK5H,EAAIC,KAAK0H,GAAGE,QAGzBjC,EAAgB8B,MAGtBxH,OACE,SAACC,GAEGC,QAAQC,IAAIF,OAOlB+G,GAAY,SAAEhG,GAEhBrB,IAAM4H,KAAK,aAAc,CAAEvG,aAAcA,IAAgBnB,MACrD,SAACC,GAEGyF,EAAWzF,EAAIC,KAAK,GAAG6H,YAG7B5H,OACE,SAACC,GAEGC,QAAQC,IAAIF,OA+BlB4H,GAAe,SAAE7G,GAEnB,IAAI8G,EAAQ,GACRC,EAAU,GACVC,EAAO,GAELvI,EAAI,IAAIC,KAKVsI,EAFCvI,EAAEwI,WAAa,EAETxI,EAAEyI,cAAcC,WAAWC,UAAU,EAAE,GAAK,KAAQ3I,EAAEyI,cAAgB,GAAIC,WAAWC,UAAU,EAAE,IAG/F3I,EAAEyI,cAAgB,GAAIC,WAAWC,UAAU,EAAE,GAAK,IAAM3I,EAAEyI,cAAcC,WAAWC,UAAU,EAAE,GAG5GzI,IAAM4H,KAAK,uBAAwB,CAAEvG,aAAcA,IAAgBnB,MAC/D,SAACC,GAEQA,EAAIC,KAAKoC,OAAS,IAEnB2F,EAAQhI,EAAIC,KAAK,GAAGsI,MAExB1I,IAAM4H,KAAK,aAAc,CAAEvG,aAAcA,IAAgBnB,MACrD,SAACC,GAEG,GAAKA,EAAIC,KAAKoC,OAAS,EACvB,CACI,IAAIkG,GAASC,SAAUxI,EAAIC,KAAK,GAAGwI,QAAQC,MAAM,KAAK,IAAO,GAAIL,WAC5C,IAAhBE,EAAKlG,SAENkG,EAAO,IAAMA,GAEjBN,EAAUM,OAGVN,EAAU,KAGdtC,EAAsBqC,EAAQ,IAAMC,EAAU,IAAMC,MAG1DhI,OACE,SAACC,GAEGC,QAAQC,IAAIF,SAM1BD,OACE,SAACC,GAEGC,QAAQC,IAAIF,OAQlBU,GAAkB,SAAE0B,GAEtB,IAxF0BrB,EAwFlBJ,EAAUyB,EAAEG,OAAZ5B,MAGJ6H,EAAU9J,EAAUgE,QACpB,SAAE7B,GAEE,OAAOA,EAAIE,eAAiBsH,SAAU1H,MAM9CkF,EAAsB,2BAEX5E,GAFU,IAGbC,QAAS,CACLH,aAAcyH,EAAQ,GAAGzH,aACzBC,aAAcwH,EAAQ,GAAGxH,aACzBO,gBAAiBiH,EAAQ,GAAGC,YA1Gd1H,EA+GLyH,EAAQ,GAAGzH,aA7GhCrB,IAAM4H,KAAK,uBACP,CACIvG,aAAcA,GAA8B3B,GAAK2B,eAEvDnB,MAAK,SAAAC,GAGH+H,GAAc7G,GAGdlC,EAAcgB,EAAIC,SAEnBC,OAAM,SAAAC,GAELC,QAAQC,IAAIF,OAoGdmB,GAAmB,SAAEiB,GAEvB,IAAQzB,EAAUyB,EAAEG,OAAZ5B,MAGJ+H,EAAW9J,EAAU8D,QACrB,SAAE7B,GAEE,OAAOA,EAAIO,gBAAkBiH,SAAU1H,MAM/CkF,EAAsB,2BAEX5E,GAFU,IAGbI,SAAU,CACND,cAAesH,EAAS,GAAGtH,cAC3BsE,cAAegD,EAAS,GAAGhD,cAC3BC,iBAAkB+C,EAAS,GAAGxK,QAC9BoD,eAAgBoH,EAAS,GAAGpH,oBAQtCiC,GAAwB,SAAEnB,GAE5B,IAAQzB,EAAUyB,EAAEG,OAAZ5B,MAGJ6H,EAAU9J,EAAUgE,QACpB,SAAE7B,GAEE,OAAOA,EAAIE,eAAiBsH,SAAU1H,MAK9CjB,IAAM4H,KAAK,uBACP,CACIvG,aAAcyH,EAAQ,GAAGzH,eAE/BnB,MAAK,SAAAC,GAGHgG,EAAsB,2BAEX5E,GAFU,IAGbuC,OAAO,2BACAvC,EAAmBuC,QADpB,IAEFtC,QAAS,CACLH,aAAcyH,EAAQ,GAAGzH,aACzBC,aAAcwH,EAAQ,GAAGxH,aACzBO,gBAAiBiH,EAAQ,GAAGC,cAO5C1J,EAAoBc,EAAIC,SAEzBC,OAAM,SAAAC,GAELC,QAAQC,IAAIF,OAOdyD,GAAyB,SAAErB,GAE7B,IAAQzB,EAAUyB,EAAEG,OAAZ5B,MAGJ+H,EAAW5J,EAAgB4D,QAC3B,SAAE7B,GAEE,OAAOA,EAAIO,gBAAkBiH,SAAU1H,MAM/CkF,EAAsB,2BAEX5E,GAFU,IAGbuC,OAAO,2BACAvC,EAAmBuC,QADpB,IAEFnC,SAAU,CACND,cAAesH,EAAS,GAAGtH,cAC3BsE,cAAegD,EAAS,GAAGhD,cAC3BC,iBAAkB+C,EAAS,GAAGxK,QAC9BoD,eAAgBoH,EAAS,GAAGpH,sBAS1CuB,GAAY,SAAEhC,GAEhB,IAAI0G,EAAMtG,EAAmBgB,QAC7BsF,EAAIE,KAAM5G,GAEVgF,EAAsB,2BAEX5E,GAFU,IAGbgB,QAASsF,MAOfnJ,GAAe,SAAEJ,GAEnB,IAAIF,EAAUmD,EAAmBgB,QAAQS,QACrC,SAAE7B,GAEE,OAAOA,EAAIyB,aAAetE,KAKlC6H,EAAsB,2BAEX5E,GAFU,IAGbgB,QAASnE,MAOfiH,GAAa,SAAE3C,GAGjB,IAAQzB,EAAUyB,EAAEG,OAAZ5B,MAEJE,EAAG,2BACAI,GADA,IAEH2E,SAAUjF,IAGdkF,EAAuBhF,IAKrB0D,GAAkB,SAACnC,GACrB,MAAwBA,EAAEG,OAAlBvE,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,MAERE,EAAG,2BACF6D,IADE,kBAEJ1G,EAAO2C,IAKZ,GAFA0F,GAAQxF,GAEK,UAAT7C,EAAkB,CAClB,IAAIqG,EAAS1D,EAAQ+D,GAAKT,SAC1B8B,GAAU1B,GAGd,GAAa,aAATrG,EAAqB,CACrB,IAAIqG,EAAS1D,EAAQ+D,GAAKR,MAC1B6B,GAAU1B,GAGd,GAAa,gBAATrG,EAAwB,CACxB,IAAI2K,EAAQC,SAASC,eAAe,OACtB,QAAVlI,EACAgI,EAAM/D,UAAW,GAEjByB,GAAQ,2BAEG3B,IAFJ,IAGCN,IAAK,MAGbuE,EAAM/D,UAAW,GAIzB,GAAa,QAAT5G,EAAgB,CAEhB,IAAIqG,EAAWK,GAAKR,MAAQQ,GAAKT,SAAY,IAAOtD,EACpDoF,GAAU1B,EAAUK,GAAKR,MAAQQ,GAAKT,YAKxCQ,GAAU,SAACrC,GACb,GACkB,KAAdA,EAAE0G,SAAuC,KAArBpE,GAAKX,aAAsC,KAAhBW,GAAKV,QAAiBU,GAAKT,SAAW,EAGrF,GAAIS,GAAKV,OAAO9B,OAAS,GAAI,CAAC,IAEtBrB,EAAMe,IAAE,eAAef,MAEvBkI,EAAI,EACJ9B,EAAM,+CACN+B,EAAQ,GACZnI,EAAM,GAEN,SAASoI,IACDF,EAAI9B,EAAI/E,SACRrB,GAAOoG,EAAIiC,OAAOH,GAClBnH,IAAE,eAAeuH,KAAKtI,GACtBkI,IACAK,WAAWH,EAAYD,IAI/BC,GAEAG,YAAW,WACPxH,IAAE,eAAeuH,KAAK,MACvB,UAIH,GAAyB,QAArBzE,GAAKP,aAAiD,MAAxBO,GAAKN,IAAI8D,WACvCvF,MAAM,qBAEN,GAAKwD,GAgCE,CACH,IAAIoB,EAAM7D,GACN2F,EAAO,GAEPA,EADA3E,GAAKxB,GACE,CACHA,GAAIwB,GAAKxB,GACToG,MAAO5E,GAAK4E,MACZvF,YAAaW,GAAKX,YAClBC,OAAQU,GAAKV,OACbE,MAAOQ,GAAKR,MACZD,SAAUS,GAAKT,SACfG,IAAKM,GAAKN,IACVC,OAAQQ,IAGL,CACHd,YAAaW,GAAKX,YAClBC,OAAQU,GAAKV,OACbE,MAAOQ,GAAKR,MACZD,SAAUS,GAAKT,SACfG,IAAKM,GAAKN,IACVC,OAAQQ,IAGhBmB,GAASlB,GAAQyC,EAAItB,IAAO5B,OAASQ,IAErC0C,EAAItB,IAASoD,EACbvD,GAASyB,GAETxB,GAAU,GACVnE,IAAE,UAAUf,IAAI,MAChBwF,GAAQ,CACJtC,YAAa,GACbC,OAAQ,GACRE,MAAO,EACPC,YAAa,KACbC,IAAK,GACLH,SAAU,IAEdmC,IAAY,GACZF,KACAtE,IAAE,uCAAuCE,YAAY,cAzE1C,CACX,IAAIuH,EAAO,CACPtF,YAAaW,GAAKX,YAClBC,OAAQU,GAAKV,OACbE,MAAOQ,GAAKR,MACZD,SAAUS,GAAKT,SACfG,IAAKM,GAAKN,IACVC,OAAQQ,IAEZiB,GAAS,GAAD,mBAAKpC,IAAL,CAAY2F,KAEpBtD,GAAU,GACVnE,IAAE,UAAUf,IAAI,MAChBwF,GAAQ,CACJtC,YAAa,GACbC,OAAQ,GACRE,MAAO,EACPC,YAAa,KACbC,IAAK,GACLH,SAAU,IAGd,IAAIsF,EAAIzE,GAGRkB,GAFAuD,GAAQ1E,IAIR,IAAI2E,EAASZ,SAASC,eAAe,aACtB,OAAXW,IACAA,EAAOC,UAAYD,EAAOE,gBAyD5C9F,GAAS,SAAC9C,GACZsF,IAAY,GACZF,GAASpF,GAETiF,GAAUrC,GAAM5C,GAAOuD,QACvBgC,GAAQ,CACJtC,YAAaL,GAAM5C,GAAOiD,YAC1BC,OAAQN,GAAM5C,GAAOkD,OACrBE,MAAOR,GAAM5C,GAAOoD,MACpBD,SAAUP,GAAM5C,GAAOmD,WAG3BrC,IAAE,sCAAwCd,GAAO6I,YAAY,WAI3D7F,GAAW,SAACZ,GAEd4C,GACIpC,GAAMhB,QAAO,SAAC7B,EAAKC,GACf,OAAOA,IAAUoC,MAIzB8C,GAASlB,GAAQpB,GAAMR,GAAImB,SAG/B,OAGI,cADA,CACA,OAAK9G,UAAU,yBAAf,UAGI,cAACqM,EAAA,EAAD,CAAM9J,KAAOqF,IAIb,sBAAK5H,UAAU,oBAAf,UAII,sBAAKA,UAAU,8BAAf,UAGI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAMJ,qBAAKA,UAAU,0BAAf,SAEI,eAAC,WAAD,CAAUsM,SAAW,8CAArB,UAGI,cAAC,IAAD,CACIC,OAAK,EACLC,KAAK,2BACLC,OACI,kBACI,cAAChF,EAAD,OAUZ,cAAC,IAAD,CACI8E,OAAK,EACLC,KAAK,2BACLC,OACI,kBACI,cAAC,EAAD,CACItL,UAAYA,EACZE,UAAYA,EACZE,gBAAkBA,EAClBmC,mBAAqBA,EACrB7B,KAAOA,GACPsE,MAAQA,GACRgB,KAAOA,GACPI,MAAQA,GACRD,OAASA,GACTnD,kBAAoBA,EAEpB+C,QAAUA,GACVb,OAASA,GACTE,SAAWA,GACXpD,gBAAkBA,GAClBS,iBAAmBA,GACnBoC,sBAAwBA,GACxBE,uBAAyBA,GACzBZ,UAAYA,GACZzE,aAAeA,GACf2G,WAAaA,GACbR,gBAAiBA,qB,gCC3tBzD,mDAsGeqF,IAjGF,SAAC7L,GAEVuB,qBACI,WACIsC,IAAE,mBAAmBqI,YAAY,KAClC,IAiBP,OACI,mCACI,qBAAK1M,UAAU,OAAf,SAEQQ,EAAM+B,KAAKoC,OAAS,EAEhB,qCACI,qBAAK3E,UAAU,YAAf,SAEYQ,EAAM+B,KAAKc,KACP,SAACC,EAAKC,GACF,OACI,mCAEQD,EAAIoG,IAEJpG,EAAIqG,KACA,cAAC,IAAD,CAAMrJ,GAAIgD,EAAIsG,KAAd,SACI,iCAAQ,mBAAG5J,UAAU,0BAAb,SAAwCsD,EAAIoG,UAGxD,wBAAQ9I,QAAU,kBAAM0C,EAAIqJ,QAA5B,SAAqC,mBAAG3M,UAAU,0BAAb,SAAwCsD,EAAIoG,QAErF,YAQhC,sBAAK1J,UAAU,iBAAf,UACI,qBAAKA,UAAU,IAAIY,QA9C1B,WACjByD,IAAE,mCAAmCqI,YAAY,KAE5CrI,IAAE,gCAAgCC,SAAS,YAE5CD,IAAE,gCAAgCE,YAAY,WAC9CF,IAAE,gCAAgCG,SAAS,cAG3CH,IAAE,gCAAgCE,YAAY,YAC9CF,IAAE,gCAAgCG,SAAS,aAoCvB,SACI,mBAAGoI,MAAM,mBAEb,qBAAK5M,UAAU,iBAAf,SAEQQ,EAAM+B,KAAKc,KACP,SAACC,EAAKC,GAEF,OACI,mCAEQD,EAAIoG,IAEJpG,EAAIqG,KACA,cAAC,IAAD,CAAMrJ,GAAIgD,EAAIsG,KAAd,SACI,gCACI,qBAAK5J,UAAY,4BAA8BuD,EAA/C,SAAuD,mBAAGvD,UAAWsD,EAAImG,SACzE,4BAAInG,EAAIoG,QAFFnG,KAMd,sBAAKvD,UAAU,SAAqBY,QAAU,kBAAM0C,EAAIqJ,QAAxD,UACI,qBAAK3M,UAAY,4BAA8BuD,EAA/C,SAAuD,mBAAGvD,UAAWsD,EAAImG,SACzE,4BAAInG,EAAIoG,QAFiBnG,GAKjC,kBAWpC,W,+GC5FT,SAASsJ,EAAmB7C,GACzC,OCJa,SAA4BA,GACzC,GAAI8C,MAAMC,QAAQ/C,GAAM,OAAO,OAAAgD,EAAA,GAAiBhD,GDGzC,CAAkBA,IELZ,SAA0BiD,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBjD,IAAQ,OAAAsD,EAAA,GAA2BtD,IGLvE,WACb,MAAM,IAAIuD,UAAU,wIHIwE","file":"static/js/23.e525baa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/QFS-LOGO.d97e6918.PNG\";","export default __webpack_public_path__ + \"static/media/SBL-LOGO.3e8ecf8d.PNG\";","export default __webpack_public_path__ + \"static/media/SEABOARD-SERVICES.b1cc0596.PNG\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Request.css';\r\n\r\nconst Request = () => {\r\n    return (\r\n        <div className=\"PreviousPORequest\">\r\n            <div className=\"d-flex align-items-center justify-content-between\">\r\n                <div className=\"d-flex align-items-center w-75\">\r\n                    <img src={'https://upload.wikimedia.org/wikipedia/commons/e/e7/Everest_North_Face_toward_Base_Camp_Tibet_Luca_Galuzzi_2006.jpg'} alt=\"employeeImg\" />\r\n                    <div>\r\n                        <p className=\"font-weight-bolder\"> Usman Badar </p>\r\n                        <p> Developer at seatech iT </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-25\">\r\n                    <p className=\"font-weight-bolder\">Total</p>\r\n                    <p> Rs 10000</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"py-3\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <p className=\"font-weight-bolder\">Date</p>\r\n                        <p> 2022-01-20 </p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"font-weight-bolder\">Status</p>\r\n                        <p style={{ backgroundColor: 'red', fontSize: '10px' }} className=\"text-white text-center rounded-pill px-2\"> Rejected </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <i className=\"las la-map-marker-alt\"></i>\r\n                <div>\r\n                    <p className=\"font-weight-bolder\"> Seatech </p>\r\n                    <p> Headoffice </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"ViewPrRequests_button\">\r\n                <Link to={\"/purchaserequisition/view=previousrequests/\" + 1}>\r\n                    <button className=\"btn\">View</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Request;","export default __webpack_public_path__ + \"static/media/Logo.cb3c000a.jpg\";","import React from 'react';\r\n\r\nimport './Venders.css';\r\n\r\nconst Venders = ( props ) => {\r\n\r\n    return (\r\n        <div className=\"Vender\" key={ props.key }>\r\n            <h6>\r\n                { props.name }\r\n            </h6>\r\n            <p>\r\n                { props.phone }\r\n            </p>\r\n            <p>\r\n                { props.address }\r\n            </p>\r\n            <i className=\"lar la-trash-alt\" onClick={ () => props.RemoveVender( props.name ) }></i>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Venders;","import React, { useEffect, useState } from 'react';\r\n\r\nimport './Form.css';\r\n\r\nimport QFS from '../../../../../../../images/QFS-LOGO.PNG';\r\nimport SBL from '../../../../../../../images/SBL-LOGO.PNG';\r\nimport SBS from '../../../../../../../images/SEABOARD-SERVICES.PNG';\r\nimport SGC from '../../../../../../../images/Logo.jpg';\r\n\r\nimport Vender from './Venders/Venders';\r\nimport $ from 'jquery';\r\nimport axios from '../../../../../../../axios';\r\n\r\nconst Form = ( props ) => {\r\n\r\n    const [ NewVender, setNewVender ] = useState( false );\r\n    const [ Companies, setCompanies ] = useState([]);\r\n    const [ Locations, setLocations ] = useState([]);\r\n    const [ ShiptoLocations, setShiptoLocations ] = useState([]);\r\n    const [ VendersList, setVendersList ] = useState([]);\r\n    const [ VendersFound, setVendersFound ] = useState([]);\r\n    const [ Data, setData ] = useState({});\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setCompanies( props.Companies );\r\n            setLocations( props.Locations );\r\n            setShiptoLocations( props.ShiptoLocations );\r\n            setData( props.Data );\r\n\r\n        }, [ props.Companies, props.Locations, props.ShiptoLocations, props.Data ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            GetAllVenders();\r\n\r\n        }, []\r\n    );\r\n\r\n    const d = new Date();\r\n\r\n    // ADD NEW VENDER\r\n    const AddNewVender = () => {\r\n\r\n        setNewVender( !NewVender );\r\n        if ( $('.POForm .GridContainer.Venders.ShipTo .VendersList .addNewVenderIcon').hasClass('la-plus-circle') )\r\n        {\r\n            $('.POForm .GridContainer.Venders.ShipTo .VendersList .addNewVenderIcon').removeClass('la-plus-circle');\r\n            $('.POForm .GridContainer.Venders.ShipTo .VendersList .addNewVenderIcon').addClass('la-minus-circle');\r\n        }else\r\n        {\r\n            $('.POForm .GridContainer.Venders.ShipTo .VendersList .addNewVenderIcon').removeClass('la-minus-circle');\r\n            $('.POForm .GridContainer.Venders.ShipTo .VendersList .addNewVenderIcon').addClass('la-plus-circle');\r\n        }\r\n\r\n    }\r\n\r\n    // ADD NEW VENDER\r\n    const AddVender = ( e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        // IMPORTANT VARIABLES\r\n        let VenderName = e.target['VenderName'].value;\r\n        let VenderPhone = e.target['VenderPhone'].value;\r\n        let VenderAddress = e.target['VenderAddress'].value;\r\n\r\n        let val = {\r\n            VenderName: VenderName,\r\n            VenderPhone: VenderPhone,\r\n            VenderAddress: VenderAddress\r\n        }\r\n\r\n        let vendersAdded = props.RequestInformation ? props.RequestInformation.venders : null;\r\n\r\n        let venderExists = vendersAdded.filter(\r\n            ( val ) => {\r\n\r\n                return val.VenderName === VenderName;\r\n\r\n            }\r\n        )\r\n\r\n        if ( venderExists.length > 0 )\r\n        {\r\n            alert('Vender already exists');\r\n        }else\r\n        {\r\n            $('.btn.cancelBtn').trigger('click');\r\n            props.AddVender( val );\r\n        }\r\n\r\n    }\r\n\r\n    // GET ALL VENDERS\r\n    const GetAllVenders = () => {\r\n\r\n        axios.get('/getallvenders').then(res => {\r\n\r\n            setVendersList( res.data );\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // SEARCH PREVIOUS VENDERS\r\n    const SearchEnteredVenders = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        let VendersFound = VendersList.filter(\r\n            ( val ) => {\r\n\r\n                return val.vender_name.includes( value );\r\n\r\n            }\r\n        )\r\n\r\n        setVendersFound( VendersFound );\r\n        if ( value === '' )\r\n        {\r\n            setVendersFound([]);\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN VENDER IS SELECTED\r\n    const SelectVender = ( id ) => {\r\n\r\n        let SelectedVender = VendersFound[id];\r\n        $('.form-control[name=VenderName]').val( SelectedVender.vender_name );\r\n        $('.form-control[name=VenderPhone]').val( SelectedVender.vender_phone );\r\n        $('.form-control[name=VenderAddress]').val( SelectedVender.vender_address );\r\n\r\n        setVendersFound([]);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"POForm\">\r\n\r\n                <img src={ SGC } className='watermark' alt=\"water markimage\" />\r\n\r\n                {/* HEADING */}\r\n                <h1 \r\n                    className=\"text-center\"\r\n                    style={\r\n                        {\r\n                            textDecoration: 'underline'\r\n                        }\r\n                    }\r\n                >Seaboard Group</h1>\r\n                {/* IMAGES GRID */}\r\n                <div className=\"POFormGrid\">\r\n\r\n                    <img src={ QFS } alt=\"QFS LOGO\" width=\"100%\" />\r\n                    <img src={ SBL } alt=\"SBL LOGO\" width=\"100%\" />\r\n                    <img src={ SBS } alt=\"SBS LOGO\" width=\"100%\" />\r\n\r\n                </div>\r\n\r\n                {/* HEADING */}\r\n                <h3 \r\n                    className=\"text-center mb-4\"\r\n                    style={\r\n                        {\r\n                            textDecoration: 'underline'\r\n                        }\r\n                    }\r\n                >Purchase Order</h3>\r\n\r\n                {/* REQUEST INFO */}\r\n                {/* UPPER DIV */}\r\n                <div className=\"Upper RequestInfo\">\r\n\r\n                    {/* COMPANY INFO */}\r\n                    {/* LEFT SIDE */}\r\n                    <div className=\"Left CompanyInfo\">\r\n\r\n                        <select \r\n                            className=\"form-control companies\"\r\n                            onChange={ props.OnChangeCompany }\r\n                        >\r\n                            <option value=\"\">Select the company</option>\r\n                            {\r\n                                Companies.map(\r\n                                    ( val, index ) => {\r\n\r\n                                        return (\r\n                                            <option key={ index } value={ val.company_code }> { val.company_name } </option>\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                            }\r\n                        </select>\r\n                        {\r\n                            props.RequestInformation\r\n                            ?\r\n                            props.RequestInformation.company.company_code !== 0\r\n                            ?\r\n                                <select \r\n                                    className=\"form-control locations\"\r\n                                    onChange={ props.OnChangeLocation }\r\n                                >\r\n                                    <option value=\"\">Select the location</option>\r\n                                    {\r\n                                        Locations.map(\r\n                                            ( val, index ) => {\r\n\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.location_code }> { val.address } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            :\r\n                            null\r\n                            :\r\n                            null\r\n                        }\r\n                        <p>\r\n                            <b className=\"mr-2\">Phone:</b>\r\n                            {\r\n                                props.RequestInformation\r\n                                ?\r\n                                props.RequestInformation.location.location_phone\r\n                                :\r\n                                null\r\n                            }\r\n                        </p>\r\n                        <p>\r\n                            <b className=\"mr-2\">Website:</b>\r\n                            {\r\n                                props.RequestInformation\r\n                                ?\r\n                                props.RequestInformation.company.company_website\r\n                                :\r\n                                null\r\n                            }\r\n                        </p>\r\n\r\n                    </div>\r\n\r\n                    {/* REQUEST INFO */}\r\n                    {/* RIGHT SIDE */}\r\n                    <div className=\"Right RequestInfo\">\r\n\r\n                        <div className=\"TableDiv\">\r\n                            \r\n                            {/* KEY */}\r\n                            <div className='divs'>\r\n                                PR Number\r\n                            </div>\r\n                            {/* VALUE */}\r\n                            <div className='divs'>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control prNumber\" \r\n                                    placeholder='Like: SBS-01-22/23'    \r\n                                />\r\n                            </div>\r\n\r\n                            {/* KEY */}\r\n                            <div className='divs'>\r\n                                PO Number\r\n                            </div>\r\n                            {/* VALUE */}\r\n                            <div className='divs'>\r\n                                { props.PurchaseOrderCode }\r\n                            </div>\r\n\r\n                            {/* KEY */}\r\n                            <div className='divs'>\r\n                                Date\r\n                            </div>\r\n                            {/* VALUE */}\r\n                            <div className='divs'>\r\n                                { d.toDateString() }\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* VENDERS LIST */}\r\n                {/* SHIPPING TO */}\r\n                <div className=\"GridContainer Venders ShipTo\">\r\n\r\n                    {/* LEFT SIDE */}\r\n                    {/* VENDERS LIST */}\r\n                    <div className=\"VendersList\">\r\n\r\n                        {/* TITLE HEADING */}\r\n                        <div className='title d-flex align-items-center justify-content-between'>\r\n                            Venders\r\n                            <div>\r\n                                <i \r\n                                    className=\"las la-plus-circle addNewVenderIcon\"\r\n                                    onClick={ AddNewVender }\r\n                                    style={\r\n                                        {\r\n                                            cursor: 'pointer'\r\n                                        }\r\n                                    }\r\n                                ></i>\r\n                                <span> { props.RequestInformation ? props.RequestInformation.venders.length : null } </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* VENDERS */}\r\n                        {\r\n                            NewVender\r\n                            ?\r\n                            <form onSubmit={ AddVender } className=\"NewVender\">\r\n                                <p><b>Note:</b> Every vender name should be unique.</p>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <p className=\"mb-0 pr-2 font-weight-bold\">Name: </p>\r\n                                    <div className=\"VenderFoundList w-100\">\r\n                                        <input\r\n                                            minLength=\"3\" \r\n                                            type=\"text\" \r\n                                            className=\"form-control\"\r\n                                            name=\"VenderName\" \r\n                                            onChange={ SearchEnteredVenders }\r\n                                            required    \r\n                                        />\r\n                                        {\r\n                                            VendersFound.length === 0\r\n                                            ?\r\n                                            null\r\n                                            :\r\n                                            <div className=\"List\">\r\n                                                {\r\n                                                    VendersFound.map(\r\n                                                        ( val, index ) => {\r\n\r\n                                                            return (\r\n                                                                <p \r\n                                                                    key={ index } \r\n                                                                    className=\"mb-0\"\r\n                                                                    onClick={ () => SelectVender( index ) }\r\n                                                                    style={\r\n                                                                        {\r\n                                                                            cursor: 'pointer'\r\n                                                                        }\r\n                                                                    }\r\n                                                                > { val.vender_name } </p>\r\n                                                            )\r\n\r\n                                                        }\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <p className=\"mb-0 pr-2 font-weight-bold\">Phone: </p>\r\n                                    <input\r\n                                        minLength=\"10\" \r\n                                        type=\"text\" \r\n                                        className=\"form-control\"\r\n                                        name=\"VenderPhone\" \r\n                                        required    \r\n                                    />\r\n                                </div>\r\n                                <div className=\"d-flex align-items-center\">\r\n                                    <p className=\"mb-0 pr-2 font-weight-bold\">Address: </p>\r\n                                    <input\r\n                                        minLength=\"5\" \r\n                                        type=\"text\" \r\n                                        className=\"form-control\"\r\n                                        name=\"VenderAddress\" \r\n                                        required    \r\n                                    />\r\n                                </div>\r\n                                <button className='btn d-none cancelBtn' type='reset'>Cancel</button>\r\n                                <button className='btn' type='submit'>Add</button>\r\n                            </form>\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                        {\r\n                            props.RequestInformation\r\n                            ?\r\n                            props.RequestInformation.venders.length > 0\r\n                            ?\r\n                            props.RequestInformation.venders.map(\r\n                                ( val, index ) => {\r\n\r\n                                    return (\r\n                                        <Vender\r\n                                            key={ index }\r\n                                            name={ val.VenderName }\r\n                                            phone={ val.VenderPhone }\r\n                                            address={ val.VenderAddress }\r\n\r\n                                            RemoveVender={ props.RemoveVender }\r\n                                        />\r\n                                    )\r\n\r\n                                }\r\n                            )\r\n                            :\r\n                            null\r\n                            :\r\n                            null\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    {/* RIGHT SIDE */}\r\n                    {/* SHIPPING TO DETAILS */}\r\n                    <div className=\"ShippingCompany\">\r\n\r\n                        {/* TITLE HEADING */}\r\n                        <div className='title'>\r\n                            Ship To\r\n                        </div>\r\n\r\n                        {/* SHIP TO COMPANY DETAILS */}\r\n                        <select \r\n                            className=\"form-control companies\"\r\n                            onChange={ props.OnChangeShipToCompany }\r\n                        >\r\n                            <option>Select the company</option>\r\n                            {\r\n                                Companies.map(\r\n                                    ( val, index ) => {\r\n\r\n                                        return (\r\n                                            <option key={ index } value={ val.company_code }> { val.company_name } </option>\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                            }\r\n                        </select>\r\n                        {\r\n                            props.RequestInformation\r\n                            ?\r\n                            props.RequestInformation.ShipTo.company.company_code !== 0\r\n                            ?\r\n                                <select \r\n                                    className=\"form-control locations\"\r\n                                    onChange={ props.OnChangeShipToLocation }\r\n                                >\r\n                                    <option>Select the location</option>\r\n                                    {\r\n                                        ShiptoLocations.map(\r\n                                            ( val, index ) => {\r\n\r\n\r\n                                                return (\r\n                                                    <option key={ index } value={ val.location_code }> { val.address } </option>\r\n                                                )\r\n\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            :\r\n                            null\r\n                            :\r\n                            null\r\n                        }\r\n                        <p>\r\n                            <b className=\"mx-2\">Phone:</b>\r\n                            {\r\n                                props.RequestInformation\r\n                                ?\r\n                                props.RequestInformation.ShipTo.location.location_phone\r\n                                :\r\n                                null\r\n                            }\r\n                        </p>\r\n                        <p>\r\n                            <b className=\"mx-2\">Website:</b>\r\n                            {\r\n                                props.RequestInformation\r\n                                ?\r\n                                props.RequestInformation.ShipTo.company.company_website\r\n                                :\r\n                                null\r\n                            }\r\n                        </p>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* MIDDLE */}\r\n                {/* TO ENTER TH REQUIRED ITEMS DETAILS */}\r\n                {/* INPUTS FIELDS */}\r\n                <div className=\"PO_printUI_Middle\">\r\n                    <div className=\"PO_printUI_Grid\" style={{ backgroundColor: \"rgb(243, 243, 243)\" }}>\r\n                        <div><p className=\"font-weight-bolder\">No</p></div>\r\n                        <div><p className=\"font-weight-bolder\">Description <sub className='d-block'>(include specification required)</sub> </p></div>\r\n                        <div><p className=\"font-weight-bolder\">Reason</p></div>\r\n                        <div><p className=\"font-weight-bolder\">Quantity</p></div>\r\n                        <div><p className=\"font-weight-bolder\" >Estimated Cost <sub>(PKR)</sub> </p></div>\r\n                        <div><p className=\"font-weight-bolder\" >Tax <sub>Required ?</sub> </p></div>\r\n                        <div><p className=\"font-weight-bolder\" >Tax %</p></div>\r\n                        <div><p className=\"font-weight-bolder\">Total Cost</p></div>\r\n                    </div>\r\n                    {\r\n                        props.Items.map(\r\n                            (val, index) => {\r\n\r\n                                return (\r\n\r\n                                    <div\r\n                                        className={\"PO_printUI_Grid MyItems MyItems\" + index}\r\n                                        key={index}\r\n                                        onDoubleClick={() => props.OnEdit(index)}\r\n                                        onContextMenu={() => props.onDelete(index)}\r\n                                    >\r\n                                        <div> <p> {index + 1} </p>  </div>\r\n                                        <div> <p> {val.description} </p></div>\r\n                                        <div> <p> {val.reason} </p></div>\r\n                                        <div> <p> {val.quantity} </p> </div>\r\n                                        <div> <p> {val.price} </p> </div>\r\n                                        <div> <p> {val.taxRequired} </p> </div>\r\n                                        <div> <p> {val.tax} </p> </div>\r\n                                        <div> <p> {'Rs ' + val.amount.toLocaleString('en-US')} </p> </div>\r\n                                    </div>\r\n\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                    {\r\n                        props.Items\r\n                            ||\r\n                            props.Items\r\n                            ?\r\n                            <>\r\n                                <div key={1} className=\"PO_printUI_Grid insertion\">\r\n                                    <div className=\"d-flex align-items-center justify-content-center\"><p>{props.Items.length + 1}</p></div>\r\n                                    <div>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            onChange={props.OnChangeHandler}\r\n                                            onKeyDown={props.AddItem}\r\n                                            value={props.Item.description}\r\n                                            name=\"description\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <textarea\r\n                                            className=\"form-control\"\r\n                                            onChange={props.OnChangeHandler}\r\n                                            onKeyDown={props.AddItem}\r\n                                            value={props.Item.reason}\r\n                                            name=\"reason\"\r\n                                        />\r\n                                        <p className=\"err_reason text-danger\"></p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={props.OnChangeHandler}\r\n                                            onKeyDown={props.AddItem}\r\n                                            value={props.Item.quantity}\r\n                                            pattern=\"[0-9]+\"\r\n                                            name=\"quantity\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={props.OnChangeHandler}\r\n                                            onKeyDown={props.AddItem}\r\n                                            value={props.Item.price}\r\n                                            pattern=\"[0-9]+\"\r\n                                            name=\"price\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <select\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={props.OnChangeHandler}\r\n                                            name=\"taxRequired\"\r\n                                        >\r\n                                            <option value=\"NO\">No</option>\r\n                                            <option value=\"YES\">YES</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"0\"\r\n                                            onChange={props.OnChangeHandler}\r\n                                            onKeyDown={props.AddItem}\r\n                                            value={props.Item.tax}\r\n                                            name=\"tax\"\r\n                                            id=\"TAX\"\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"0\"\r\n                                            value={'Rs ' + props.Amount.toLocaleString('en-US')}\r\n                                            pattern=\"[0-9]+\"\r\n                                            name=\"itemAmount\"\r\n                                            disabled\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            null\r\n                    }\r\n                    <div className=\"PO_printUI_Grid\">\r\n                        <div></div>\r\n                        <div style={{ backgroundColor: \"rgb(243, 243, 243)\" }}><p className=\"font-weight-bolder text-right mr-2\">Total :</p></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div><p>{'Rs ' + props.Total.toLocaleString('en-US')}</p></div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* SENDER COMMENTS ON PURCHASE ORDER */}\r\n                <div className=\"Comments\">\r\n\r\n                    {/* TITLE HEADING */}\r\n                    <div className='title rounded-0'>\r\n                        Comments\r\n                    </div>\r\n                    <textarea \r\n                        placeholder='Please enter your comments on the request.'\r\n                        className=\"form-control rounded-0\"\r\n                        onChange={ props.OnComments }\r\n                    />\r\n\r\n                </div>\r\n\r\n                {/* SENDER & RECEIVER INFORMATION */}\r\n                {/* GRID CONTAINER */}\r\n                {/* FOOTER */}\r\n                <div className=\"Footer\">\r\n\r\n                    {/* LEFT SIDE */}\r\n                    {/* SENDER INFO */}\r\n                    {/* REQUESTED BY */}\r\n                    <div className=\"Left RequestedBy\">\r\n\r\n                        {/* TITLE HEADING */}\r\n                        <div className='title'>\r\n                            Requested By\r\n                        </div>\r\n\r\n                        {/* DATE AND SENDER NAME */}\r\n                        <div className=\"d-flex align-items-center pl-2 py-1\">\r\n                            <p className='w-100 font-weight-bold'>\r\n                                Name\r\n                            </p>\r\n                            <p className='w-100'>\r\n                                { Data.name }\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center pl-2 py-1\">\r\n                            <p className='w-100 font-weight-bold'>\r\n                                Date\r\n                            </p>\r\n                            <p className='w-100'>\r\n                                { d.toDateString() }\r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    {/* RIGHT SIDE */}\r\n                    {/* RECEIVER INFO */}\r\n                    {/* APPROVED BY */}\r\n                    <div className=\"Right ApprovedBy\">\r\n\r\n                        {/* TITLE HEADING */}\r\n                        <div className='title'>\r\n                            Approved By\r\n                        </div>\r\n\r\n                        {/* DATE AND RECEIVER NAME */}\r\n                        <div className=\"d-flex align-items-center pl-2 py-1\">\r\n                            <p className='w-100 font-weight-bold'>\r\n                                Name\r\n                            </p>\r\n                            <p className='w-100'>\r\n                                \r\n                            </p>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center pl-2 py-1\">\r\n                            <p className='w-100 font-weight-bold'>\r\n                                Date\r\n                            </p>\r\n                            <p className='w-100'>\r\n                                \r\n                            </p>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <button className='btn btn-primary d-block my-3 ml-auto'>Submit</button>\r\n        </>\r\n    )\r\n}\r\nexport default Form;","import React, { Suspense, lazy, useState, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n// IMPORT CSS\r\nimport './PurchaseOrder.css';\r\n\r\nimport Request from './Request/Request';\r\n\r\nimport Menu from \"../../../../../UI/Menu/Menu\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport axios from '../../../../../../axios';\r\nimport socket from '../../../../../../io';\r\nimport $ from 'jquery';\r\nimport Form from './Form/Form';\r\n\r\nconst Home = lazy( () => import('./Home/Home') );\r\n\r\nconst PurchaseOrder = () => {\r\n\r\n    // STATE FOR MENU\r\n    const [MenuData, setMenuData] = useState([]);\r\n\r\n    const [Submitted, setSubmitted] = useState(false);\r\n    const [POCode, setPOCode] = useState('');\r\n\r\n    const [Requests, setRequests] = useState([]);\r\n    const [Companies, setCompanies] = useState([]);\r\n    const [Locations, setLocations] = useState([]);\r\n    const [ShiptoLocations, setShiptoLocations] = useState([]);\r\n    const [PurchaseOrderCode, setPurchaseOrderCode] = useState('');\r\n    const [CountStatus, setCountStatus] = useState([]);\r\n\r\n    const [ModalShow, setModalShow] = useState(false);\r\n\r\n    const [RequestInformation, setRequestInformation] = useState(\r\n        {\r\n            company: {\r\n                company_code: 0,\r\n                company_name: '',\r\n                company_website: ''\r\n            },\r\n            location: {\r\n                location_code: 0,\r\n                location_name: '',\r\n                location_phone: '',\r\n                location_address: ''\r\n            },\r\n            ShipTo: {\r\n                company: {\r\n                    company_code: 0,\r\n                    company_name: '',\r\n                    company_website: ''\r\n                },\r\n                location: {\r\n                    location_code: 0,\r\n                    location_name: '',\r\n                    location_phone: '',\r\n                    location_address: ''\r\n                },\r\n            },\r\n            venders: [],\r\n            comments: ''\r\n        }\r\n    );\r\n\r\n    const [Items, setItems] = useState([]);\r\n    const [Amount, setAmount] = useState(0.0);\r\n    const [Total, setTotal] = useState(0.0);\r\n    const [Index, setIndex] = useState();\r\n\r\n    const [EditMode, setEditMode] = useState(false);\r\n\r\n    const [Item, setItem] = useState({\r\n        description: \"\",\r\n        reason: \"\",\r\n        price: 0,\r\n        taxRequired: \"NO\",\r\n        tax: '',\r\n        quantity: 1,\r\n    });\r\n\r\n    const Data = useSelector( ( state ) => state.EmpAuth.EmployeeData ); // CURRENT EMPLOYEE DATA\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( Data.company_code ) {\r\n\r\n                GetAllCompanies();\r\n                // GetCompanyLocations(Data.company_code);\r\n\r\n                socket.on(\r\n                    'newpurchaserequision', () => {\r\n                        \r\n                        AllPO( Data.emp_id );\r\n                \r\n                    }\r\n                )\r\n\r\n                // GET ALL PREVIOUS PURCHASE ORDERS\r\n                AllPO( Data.emp_id );\r\n\r\n                // GET THE LAST PO CODE\r\n                GetLastPO( Data.company_code );\r\n\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Order',\r\n                            link: true,\r\n                            href: \"/purchaseorder/view=form\"\r\n                        }\r\n                    ]\r\n                )\r\n            }\r\n\r\n            // $('.PurchaseRequisition').show();\r\n            // $('.Discussion').hide(0);\r\n\r\n\r\n\r\n        }, [ Data.company_code, Submitted ]\r\n    );\r\n\r\n    // GET ALL COMPANIES\r\n    const GetAllCompanies = () => {\r\n\r\n        const Data = new FormData();\r\n        axios.get('/getallcompanies', Data).then(\r\n            (res) => {\r\n\r\n                setCompanies( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // GET ALL PREVIOUS PURCHASE ORDERS\r\n    const AllPO = ( id ) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('empID', id);\r\n        axios.post('/getthatempinvtryrequests', Data).then(\r\n            (res) => {\r\n\r\n                setRequests( res.data );\r\n                let arr = [];\r\n                for( let x = 0; x < res.data.length; x++ )\r\n                {\r\n    \r\n                    arr.push(res.data[x].status)\r\n    \r\n                }\r\n                setCountStatus( arr );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const GetLastPO = ( company_code ) => {\r\n\r\n        axios.post('/getprcode', { company_code: company_code }).then(\r\n            (res) => {\r\n\r\n                setPOCode( res.data[0].pr_code );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n    \r\n    // GET COMPANY'S ALL LOCATIONS\r\n    const GetCompanyLocations = ( company_code ) => {\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: company_code ? company_code : Data.company_code\r\n            }\r\n        ).then(res => {\r\n\r\n            // CREATE PO CODE ACCORDING TO THE COMPANY CODE\r\n            createPOCode( company_code );\r\n\r\n            // SET VALUE TO LOCATIONS DROPDOWN\r\n            setLocations( res.data );\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    // CREATE CODE FOR PURCHASE ORDER\r\n    const createPOCode = ( company_code ) => {\r\n\r\n        let CCode = '';\r\n        let LastNum = '';\r\n        let Year = '';\r\n\r\n        const d = new Date();\r\n\r\n        // IF CURRENT MONTH IS GREATER THAN JUNE\r\n        if ( d.getMonth() > 6 )\r\n        {\r\n            Year = d.getFullYear().toString().substring(2,4) + '/' + ( d.getFullYear() + 1 ).toString().substring(2,4);\r\n        }else\r\n        {\r\n            Year = ( d.getFullYear() - 1 ).toString().substring(2,4) + '/' + d.getFullYear().toString().substring(2,4);\r\n        }\r\n\r\n        axios.post('/getshortcompanyname', { company_code: company_code }).then(\r\n            (res) => {\r\n\r\n                if ( res.data.length > 0 )\r\n                {\r\n                    CCode = res.data[0].code;\r\n                }\r\n                axios.post('/getpocode', { company_code: company_code }).then(\r\n                    (res) => {\r\n        \r\n                        if ( res.data.length > 0 )\r\n                        {\r\n                            let code = ( parseInt( res.data[0].po_code.split('-')[1] ) + 1 ).toString();\r\n                            if ( code.length === 1 )\r\n                            {\r\n                                code = '0' + code;\r\n                            }\r\n                            LastNum = code;\r\n                        }else\r\n                        {\r\n                            LastNum = '01';\r\n                        }\r\n\r\n                        setPurchaseOrderCode( CCode + '-' + LastNum + '-' + Year );\r\n        \r\n                    }\r\n                ).catch(\r\n                    (err) => {\r\n        \r\n                        console.log(err);\r\n        \r\n                    }\r\n                )\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN REQUEST COMPANY IS SELECTED\r\n    const OnChangeCompany = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED COMPANY\r\n        let Company = Companies.filter(\r\n            ( val ) => {\r\n\r\n                return val.company_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                company: {\r\n                    company_code: Company[0].company_code,\r\n                    company_name: Company[0].company_name,\r\n                    company_website: Company[0].website\r\n                }\r\n            }\r\n        )\r\n\r\n        GetCompanyLocations( Company[0].company_code );\r\n\r\n    }\r\n\r\n    // WHEN REQUEST LOCATION IS SELECTED\r\n    const OnChangeLocation = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED LOCATION\r\n        let Location = Locations.filter(\r\n            ( val ) => {\r\n\r\n                return val.location_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                location: {\r\n                    location_code: Location[0].location_code,\r\n                    location_name: Location[0].location_name,\r\n                    location_address: Location[0].address,\r\n                    location_phone: Location[0].location_phone\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN SHIP TO COMPANY IS SELECTED\r\n    const OnChangeShipToCompany = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED COMPANY\r\n        let Company = Companies.filter(\r\n            ( val ) => {\r\n\r\n                return val.company_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: Company[0].company_code\r\n            }\r\n        ).then(res => {\r\n\r\n            // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n            setRequestInformation(\r\n                {\r\n                    ...RequestInformation,\r\n                    ShipTo: {\r\n                        ...RequestInformation.ShipTo,\r\n                        company: {\r\n                            company_code: Company[0].company_code,\r\n                            company_name: Company[0].company_name,\r\n                            company_website: Company[0].website\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n\r\n            // SET SHIP TO LOCATIONS\r\n            setShiptoLocations( res.data );\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // WHEN SHIP TO LOCATION IS SELECTED\r\n    const OnChangeShipToLocation = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED LOCATION\r\n        let Location = ShiptoLocations.filter(\r\n            ( val ) => {\r\n\r\n                return val.location_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                ShipTo: {\r\n                    ...RequestInformation.ShipTo,\r\n                    location: {\r\n                        location_code: Location[0].location_code,\r\n                        location_name: Location[0].location_name,\r\n                        location_address: Location[0].address,\r\n                        location_phone: Location[0].location_phone\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // ADD VENDER TO THE REQUEST\r\n    const AddVender = ( val ) => {\r\n\r\n        let arr = RequestInformation.venders;\r\n        arr.push( val );\r\n        \r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                venders: arr\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // REMOVE THE ADDED VENDER FROM THE LIST\r\n    const RemoveVender = ( name ) => {\r\n\r\n        let Venders = RequestInformation.venders.filter(\r\n            ( val ) => {\r\n\r\n                return val.VenderName !== name\r\n\r\n            }\r\n        )\r\n\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                venders: Venders\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // ON ENTER COMMENTS FOR THE REQUEST\r\n    const OnComments = ( e ) => {\r\n\r\n        // EXTRACTING VALUE\r\n        const { value } = e.target;\r\n\r\n        let val = {\r\n            ...RequestInformation,\r\n            comments: value\r\n        }\r\n\r\n        setRequestInformation( val );\r\n\r\n    }\r\n\r\n    // WHEN EMPLOYEE ENTERING THE DETAILS IN THE FIELDS AND THE DATA IS STORE TO STATE\r\n    const OnChangeHandler = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const val = {\r\n            ...Item,\r\n            [name]: value,\r\n        };\r\n\r\n        setItem(val);\r\n\r\n        if (name === \"price\") {\r\n            let amount = value * Item.quantity;\r\n            setAmount(amount);\r\n        }\r\n\r\n        if (name === \"quantity\") {\r\n            let amount = value * Item.price;\r\n            setAmount(amount);\r\n        }\r\n\r\n        if (name === \"taxRequired\") {\r\n            let input = document.getElementById('TAX');\r\n            if (value === 'YES') {\r\n                input.disabled = false;\r\n            } else {\r\n                setItem(\r\n                    {\r\n                        ...Item,\r\n                        tax: ''\r\n                    }\r\n                )\r\n                input.disabled = true;\r\n            }\r\n        }\r\n\r\n        if (name === \"tax\") {\r\n\r\n            let amount = ((Item.price * Item.quantity) / 100) * value;\r\n            setAmount(amount + (Item.price * Item.quantity));\r\n        }\r\n    };\r\n\r\n    // WHEN EMPLOYEE WANT TO ADD AN ITEM TO THE ENTERED ITEMS LIST\r\n    const AddItem = (e) => {\r\n        if (\r\n            e.keyCode === 13 && Item.description !== '' && Item.reason !== '' && Item.quantity > 0\r\n        ) {\r\n\r\n            if (Item.reason.length < 20) {\r\n\r\n                let val = $(\".err_reason\").val();\r\n\r\n                let i = 0;\r\n                let txt = \"Reason must contain 20 characters minimum!!!\";\r\n                let speed = 50;\r\n                val = '';\r\n\r\n                function typeWriter() {\r\n                    if (i < txt.length) {\r\n                        val += txt.charAt(i);\r\n                        $(\".err_reason\").html(val);\r\n                        i++;\r\n                        setTimeout(typeWriter, speed);\r\n                    }\r\n                }\r\n\r\n                typeWriter();\r\n\r\n                setTimeout(() => {\r\n                    $(\".err_reason\").html('');\r\n                }, 5000);\r\n\r\n            } else {\r\n\r\n                if (Item.taxRequired === \"YES\" && Item.tax.toString() === '0') {\r\n                    alert('tax required');\r\n                } else {\r\n                    if (!EditMode) {\r\n                        let cart = {\r\n                            description: Item.description,\r\n                            reason: Item.reason,\r\n                            price: Item.price,\r\n                            quantity: Item.quantity,\r\n                            tax: Item.tax,\r\n                            amount: Amount,\r\n                        };\r\n                        setItems([...Items, cart]);\r\n\r\n                        setAmount(0.0);\r\n                        $('select').val('NO');\r\n                        setItem({\r\n                            description: \"\",\r\n                            reason: \"\",\r\n                            price: 0,\r\n                            taxRequired: \"NO\",\r\n                            tax: '',\r\n                            quantity: 1,\r\n                        });\r\n\r\n                        let t = Total;\r\n                        t = t + Amount;\r\n\r\n                        setTotal(t);\r\n\r\n                        var objDiv = document.getElementById(\"ItemsLIst\");\r\n                        if (objDiv !== null) {\r\n                            objDiv.scrollTop = objDiv.scrollHeight;\r\n                        }\r\n\r\n                    } else {\r\n                        let arr = Items;\r\n                        let cart = {};\r\n                        if (Item.id) {\r\n                            cart = {\r\n                                id: Item.id,\r\n                                pr_id: Item.pr_id,\r\n                                description: Item.description,\r\n                                reason: Item.reason,\r\n                                price: Item.price,\r\n                                quantity: Item.quantity,\r\n                                tax: Item.tax,\r\n                                amount: Amount,\r\n                            };\r\n                        } else {\r\n                            cart = {\r\n                                description: Item.description,\r\n                                reason: Item.reason,\r\n                                price: Item.price,\r\n                                quantity: Item.quantity,\r\n                                tax: Item.tax,\r\n                                amount: Amount,\r\n                            };\r\n                        }\r\n                        setTotal(Total - arr[Index].amount + Amount);\r\n\r\n                        arr[Index] = cart;\r\n                        setItems(arr);\r\n\r\n                        setAmount(0.0);\r\n                        $('select').val('NO');\r\n                        setItem({\r\n                            description: \"\",\r\n                            reason: \"\",\r\n                            price: 0,\r\n                            taxRequired: \"NO\",\r\n                            tax: '',\r\n                            quantity: 1,\r\n                        });\r\n                        setEditMode(false);\r\n                        setIndex();\r\n                        $(\".POForm .PO_printUI_Middle .MyItems\").removeClass(\"d-none\");\r\n\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // WHEN EMPLOYEE WANT TO EDIT THE ENTERED ITEM DETAIL\r\n    const OnEdit = (index) => {\r\n        setEditMode(true);\r\n        setIndex(index);\r\n\r\n        setAmount(Items[index].amount);\r\n        setItem({\r\n            description: Items[index].description,\r\n            reason: Items[index].reason,\r\n            price: Items[index].price,\r\n            quantity: Items[index].quantity,\r\n        });\r\n\r\n        $(\".POForm .PO_printUI_Middle .MyItems\" + index).toggleClass(\"d-none\");\r\n    };\r\n\r\n    // WHEN EMPLOYEE WANT TO DELETE/REMOVE THE ENTERED ITEM\r\n    const onDelete = (id) => {\r\n\r\n        setItems(\r\n            Items.filter((val, index) => {\r\n                return index !== id;\r\n            })\r\n        );\r\n\r\n        setTotal(Total - Items[id].amount);\r\n    };\r\n\r\n    return (\r\n\r\n        // PURCHASE ORDER START\r\n        <div className=\"PurchaseOrderContainer\">\r\n\r\n            {/* PURCHASE ORDER MENU COMPONENT */}\r\n            <Menu data={ MenuData } />\r\n\r\n            {/* CONTENT */}\r\n            {/* GRID CONTAINER */}\r\n            <div className='PurchaseOrderGrid'>\r\n\r\n                {/* LEFT PANEL */}\r\n                {/* PREVIOUS REQUESTS */}\r\n                <div className=\"Left PreviousPurchaseOrders\">\r\n\r\n                    {/* REQUESTS */}\r\n                    <Request />\r\n                    <Request />\r\n                    <Request />\r\n                    <Request />\r\n                    <Request />\r\n\r\n                </div>\r\n\r\n                {/* RIGHT PANEL */}\r\n                {/* MAIN CONTENT */}\r\n                <div className=\"Right MainContentWindow\">\r\n\r\n                    <Suspense fallback={ <div>Loading....</div> }>\r\n                        \r\n                        {/* ROUTES */}\r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=home'\r\n                            render={  \r\n                                () =>\r\n                                    <Home\r\n                                        // ViewRequest={ ViewRequest }\r\n                                        // CountRequests={ViewRequest.length}\r\n                                        // CountStatus={CountStatus}\r\n                                        // // MonthlyRequests={MonthlyRequests}\r\n                                        // EmpData={ Data }\r\n                                    />\r\n                            }\r\n                        />\r\n                        \r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=form'\r\n                            render={  \r\n                                () =>\r\n                                    <Form\r\n                                        Companies={ Companies }\r\n                                        Locations={ Locations }\r\n                                        ShiptoLocations={ ShiptoLocations }\r\n                                        RequestInformation={ RequestInformation }\r\n                                        Data={ Data }\r\n                                        Items={ Items }\r\n                                        Item={ Item }\r\n                                        Total={ Total }\r\n                                        Amount={ Amount }\r\n                                        PurchaseOrderCode={ PurchaseOrderCode }\r\n\r\n                                        AddItem={ AddItem }\r\n                                        OnEdit={ OnEdit }\r\n                                        onDelete={ onDelete }\r\n                                        OnChangeCompany={ OnChangeCompany }\r\n                                        OnChangeLocation={ OnChangeLocation }\r\n                                        OnChangeShipToCompany={ OnChangeShipToCompany }\r\n                                        OnChangeShipToLocation={ OnChangeShipToLocation }\r\n                                        AddVender={ AddVender }\r\n                                        RemoveVender={ RemoveVender }\r\n                                        OnComments={ OnComments }\r\n                                        OnChangeHandler={OnChangeHandler}\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                    </Suspense>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PurchaseOrder;","import React, { useEffect } from 'react';\r\nimport './Menu.css';\r\nimport $ from \"jquery\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n\r\n    useEffect(\r\n        () => {\r\n            $('.Speeddail_Grid').slideToggle(0);\r\n        }, []\r\n\r\n    )\r\n    const ShowMenuGrid = () => {\r\n        $('.Menu_Speeddail .Speeddail_Grid').slideToggle(200);\r\n        \r\n        if ( $('.Menu_Speeddail .Button .las').hasClass('la-bars') )\r\n        {\r\n            $('.Menu_Speeddail .Button .las').removeClass('la-bars');\r\n            $('.Menu_Speeddail .Button .las').addClass('la-times');\r\n        }else\r\n        {\r\n            $('.Menu_Speeddail .Button .las').removeClass('la-times');\r\n            $('.Menu_Speeddail .Button .las').addClass('la-bars');      \r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Menu\">\r\n                {\r\n                    props.data.length > 0\r\n                        ?\r\n                        <>\r\n                            <div className=\"Menu_Grid\">\r\n                                {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <button><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                                </Link>\r\n                                                            :\r\n                                                                <button onClick={ () => val.func() }><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                            </div>\r\n                            <div className=\"Menu_Speeddail\">\r\n                                <div className=\" \" onClick={ShowMenuGrid}>\r\n                                    <i class=\"las la-times\"></i>\r\n                                </div>\r\n                                <div className=\"Speeddail_Grid\">\r\n                                    {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <div key={index}>\r\n                                                                        <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                        <p>{val.txt}</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                                :\r\n                                                                <div className=\"clicks\" key={index} onClick={ () => val.func() }>\r\n                                                                    <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                    <p>{val.txt}</p>\r\n                                                                </div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Menu;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}