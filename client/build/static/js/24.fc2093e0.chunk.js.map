{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/Request/Request.jsx","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/PR_printUI/Logos/QFS-LOGO.PNG","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/PR_printUI/Logos/SEABOARD-SERVICES.PNG","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/PR_printUI/Logos/SBL-LOGO.PNG","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/PR_printUI/PR_printUI.jsx","Components/EmployeeProtal/Dashboard/Pages/Forms/PurchaseOrder/PurchaseOrder.jsx","Components/UI/Modal/Modal.jsx","Components/UI/Menu/Menu.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["Request","props","className","src","data","emp_image","alt","name","designation_name","department_name","company_name","total","toLocaleString","d","toDateString","style","backgroundColor","bgColor","fontSize","txt","location_name","to","pr_id","po_id","PR_printUI","useState","info","specifications","ListDetails","setListDetails","useEffect","PrID","axios","post","then","res","catch","err","console","log","arr","x","push","map","val","index","d1","Date","approve_date","d2","discard_date","d3","request_date","QFS","SBS","SBL","pr_company_name","width","pr_code","toString","substring","description","quantity","price","tax","amount","reason","sender_name","approve_emp_name","handle_emp_name","Home","lazy","Form","PreviousRequest","Bills","PurchaseOrder","MenuData","setMenuData","ShowHide","setShowHide","Submitted","Requests","setRequests","Companies","setCompanies","Locations","setLocations","ShiptoLocations","setShiptoLocations","PurchaseOrderCode","setPurchaseOrderCode","CountStatus","setCountStatus","setPrID","PrIDPrev","setPrIDPrev","PRCode","setPRCode","company","company_code","company_website","location","location_code","location_phone","location_address","ShipTo","venders","comments","gst","cartage","others","RequestInformation","setRequestInformation","Items","setItems","Amount","setAmount","Total","setTotal","Index","setIndex","EditMode","setEditMode","taxRequired","Item","setItem","TaxMode","setTaxMode","IndividualTax","setIndividualTax","PurchaseOrderDetails","setPurchaseOrderDetails","setPOID","Details","setDetails","AttachBills","setAttachBills","BillPreview","setBillPreview","Data","useSelector","state","EmpAuth","EmployeeData","history","useHistory","length","$","window","href","split","pop","isNaN","parseInt","poInfo","emp_id","AllPO","GetAllCompanies","condition","icon","link","func","OpenPurchaseOrderForm","OpenAttachedBillsView","OpenPurchaseOrderBills","socket","on","parseFloat","subTotal","replace","links","FormData","get","id","append","status","createPOCode","CCode","LastNum","Year","getMonth","getFullYear","code","po_code","OnChangeCompany","e","value","target","Company","filter","website","OnChangeLocation","Location","address","OnChangeShipToCompany","OnChangeShipToLocation","AddVender","RemoveVender","Venders","VenderName","OnComments","OnChangeHandler","pass","ShowNotification","input","document","getElementById","disabled","AddItem","keyCode","i","speed","typeWriter","charAt","html","setTimeout","cart","removeClass","t","objDiv","scrollTop","scrollHeight","OnEdit","toggleClass","onDelete","SubmitPurchaseOrder","RequestInfo","SenderInfo","D","JSON","stringify","forEach","file","emit","Data3","Data2","sessionStorage","getItem","OnChangePrNumber","NotFound","FinalValuesChangeHandler","ExclusiveInclusiveTax","IndividualTaxMode","note","position","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onAttachBills","reader","FileReader","files","onload","readyState","readAsDataURL","PreviewBill","array","image","RemoveBill","ShowModal","Modal","show","Hide","content","height","Menu","fallback","exact","path","render","ViewRequest","CountRequests","EmpData","display","onClick","animationDelay","slideToggle","hasClass","addClass","class","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/24.fc2093e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Request.css';\r\n\r\nconst Request = ( props ) => {\r\n    return (\r\n        <div className=\"PreviousPORequest\">\r\n            <div className=\"d-flex align-items-center justify-content-between\">\r\n                <div className=\"d-flex align-items-center w-75\">\r\n                    <img src={ 'images/employees/' + props.data.emp_image } alt=\"employeeImg\" />\r\n                    <div>\r\n                        <p className=\"font-weight-bolder\"> { props.data.name } </p>\r\n                        <p> { props.data.designation_name } in { props.data.department_name }, { props.data.company_name } </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"w-25\">\r\n                    <p className=\"font-weight-bolder\">Total</p>\r\n                    <p> Rs { props.data.total.toLocaleString('en-US') }</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"py-3\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <p className=\"font-weight-bolder\">Date</p>\r\n                        <p> { props.d.toDateString() } </p>\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"font-weight-bolder\">Status</p>\r\n                        <p style={{ backgroundColor: props.bgColor, fontSize: '10px' }} className=\"text-white text-center rounded-pill px-2\"> { props.txt } </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex align-items-center\">\r\n                <i className=\"las la-map-marker-alt\"></i>\r\n                <div>\r\n                    <p className=\"font-weight-bolder\"> { props.data.company_name } </p>\r\n                    <p> { props.data.location_name } </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"ViewPrRequests_button\">\r\n                <Link to={\"/purchaseorder/view=previousrequests/\" + props.data.pr_id + '/' + props.data.po_id}>\r\n                    <button className=\"btn\">View</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Request;","export default __webpack_public_path__ + \"static/media/QFS-LOGO.a4ccc54a.PNG\";","export default __webpack_public_path__ + \"static/media/SEABOARD-SERVICES.b1cc0596.PNG\";","export default __webpack_public_path__ + \"static/media/SBL-LOGO.3e8ecf8d.PNG\";","import React, { useEffect, useState } from \"react\";\r\n\r\nimport './PR_printUI.css';\r\n\r\nimport QFS from './Logos/QFS-LOGO.PNG';\r\nimport SBS from './Logos/SEABOARD-SERVICES.PNG';\r\nimport SBL from './Logos/SBL-LOGO.PNG';\r\n\r\nimport axios from '../../../../../../../axios';\r\n\r\nconst PR_printUI = ( props ) => {\r\n\r\n    const [ListDetails, setListDetails] = useState(\r\n        {\r\n            info: [],\r\n            specifications: []\r\n        }\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let pr_id = props.PrID; // RETURNS AN ID ( PR ID )\r\n\r\n            axios.post(\r\n                '/getpurchaseorderdetails',\r\n                {\r\n                    pr_id: pr_id,\r\n                    po_id: null\r\n                }\r\n            ).then(\r\n                (res) => {\r\n                    \r\n                    setListDetails(\r\n                        {\r\n                            info: res.data[4],\r\n                            specifications: res.data[5]\r\n                        }\r\n                    )\r\n\r\n                }\r\n            ).catch(err => {\r\n\r\n                console.log(err);\r\n\r\n            })\r\n\r\n        }, [ props.PrID ]\r\n    )\r\n\r\n    let num = 20;\r\n    let arr = [];// [ 15, 30, 45, 60, 75, 90, 105, 120, 135, 150 ];\r\n\r\n    for (let x = 1; x <= 12; x++) {\r\n        arr.push(x * num);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                ListDetails.info.map(\r\n                    ( val, index ) => {\r\n\r\n                        const d1 = new Date( val.approve_date );\r\n                        const d2 = new Date( val.discard_date );\r\n                        const d3 = new Date( val.request_date );\r\n\r\n                        return (\r\n                            <div className=\"PR_printUI\" key={ index }>\r\n                                <div className=\"PR_printUI_Div\">\r\n                                    <h1 className=\" font-weight-bolder text-center\">Seaboard Group</h1>\r\n                                    <div className=\"PR_printUI_Logos\">\r\n                                        <div><img src={QFS} alt=\"QFS Logo\" /></div>\r\n                                        <div><img src={SBS} alt=\"SBS Logo\" /></div>\r\n                                        <div><img src={SBL} alt=\"SBL Logo\" /></div>\r\n                                    </div>\r\n                                    <h3 className=\"font-weight-bolder text-center\" >Purchase Requisition</h3>\r\n                                    <div className=\"PR_printUI_Top mt-5\">\r\n                                        <div>\r\n                                            <div className=\"d-flex\">\r\n                                                <p className=\"font-weight-bolder mr-3\">Comapny Name : </p>\r\n                                                <p> { val.pr_company_name } </p>\r\n                                            </div>\r\n                                            <div className=\"d-flex\">\r\n                                                <p className=\"font-weight-bolder mr-3\">Delivery / Work Location : </p>\r\n                                                <p> { val.location_name } </p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={ { width: '40%' } }>\r\n                                            <div className=\"d-flex border py-1\">\r\n                                                <div className=\"border-right w-50 text-center\"><p className=\"font-weight-bolder\">PR Number  </p></div>\r\n                                                <div className=\"text-center w-50\"><p> { val.pr_code } </p></div>\r\n                                            </div>\r\n                                            <div className=\"d-flex border py-1\">\r\n                                                <div className=\"border-right w-50 text-center\"><p className=\"font-weight-bolder\">Date  </p></div>\r\n                                                <div className=\"text-center w-50\"><p> { d1 ? d1.toString().substring(0,15) : null } </p></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"PR_printUI_Middle\">\r\n                                        <div className=\"PR_printUI_Grid\" style={{ backgroundColor: \"rgb(243, 243, 243)\" }}>\r\n                                            <div><p className=\"font-weight-bolder\">Sr: No:</p></div>\r\n                                            <div><p className=\"font-weight-bolder\">Description</p></div>\r\n                                            <div><p className=\"font-weight-bolder\">Quantity</p></div>\r\n                                            <div><p className=\"font-weight-bolder\" >Estimated Cost</p></div>\r\n                                            <div><p className=\"font-weight-bolder\" >Tax</p></div>\r\n                                            <div><p className=\"font-weight-bolder\">Total Cost</p></div>\r\n                                        </div>\r\n                                        {\r\n                                            ListDetails.specifications.map(\r\n                                                (val, index) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <div className=\"PR_printUI_Grid\">\r\n                                                                <div><p>{ index + 1 }</p></div>\r\n                                                                <div><p>{ val.description }</p></div>\r\n                                                                <div><p>{ val.quantity }</p></div>\r\n                                                                <div><p>{ val.price }</p></div>\r\n                                                                <div><p>{ val.tax + '%' }</p></div>\r\n                                                                <div><p>{ 'Rs ' + val.amount.toLocaleString('en-US') }</p></div>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                        <div className=\"PR_printUI_Grid\">\r\n                                            <div></div>\r\n                                            <div style={{ backgroundColor: \"rgb(243, 243, 243)\" }}><p className=\"font-weight-bolder text-right mr-2\">Total :</p></div>\r\n                                            <div><p></p></div>\r\n                                            <div><p></p></div>\r\n                                            <div><p></p></div>\r\n                                            <div><p>Rs { val.total.toLocaleString('en-US') } </p></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"PR_printUI_Bottom\">\r\n                                        <div className=\"PR_printUI_Grid1\" style={{ backgroundColor: \"rgb(243, 243, 243)\" }}>\r\n                                            <div><p className=\"font-weight-bolder\">Sr: No:</p></div>\r\n                                            <div><p className=\"font-weight-bolder\">Reason</p></div>\r\n                                        </div>\r\n                                        {\r\n                                            ListDetails.specifications.map(\r\n                                                (val, index) => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            <div className=\"PR_printUI_Grid1\">\r\n                                                                <div><p>{ index + 1 }</p></div>\r\n                                                                <div className=\"text-justify px-2\"><p>{ val.reason }</p></div>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )\r\n                                                }\r\n                                            )\r\n                                        }\r\n                                        <div className=\"PR_printUI_Remarks mt-4\" style={{ backgroundColor: \"rgb(243, 243, 243)\" }}>\r\n                                            <div className=\"DIVS\" ><p className=\"font-weight-bolder\">Sumbitted By</p></div>\r\n                                            <div className=\"DIVS\" ><p className=\"font-weight-bolder\">Approved By</p></div>\r\n                                            <div className=\"DIVS\" ><p className=\"font-weight-bolder\">Submitted To</p></div>\r\n                                        </div>\r\n                                        <div className=\"PR_printUI_Remarks PR_printUI_Remark\">\r\n                                            <div >\r\n                                                <div className=\"DIVS\" ><p className=\"font-weight-bolder mr-3\">Name : </p><p> { val.sender_name } </p></div>\r\n                                                <div className=\"DIVS\" ><p className=\"font-weight-bolder\">Date : </p><p>{ d1 ? d1.toString().substring(0,15) : null }</p></div>\r\n                                            </div>\r\n                                            <div >\r\n                                                <div className=\"DIVS\" ><p className=\"font-weight-bolder mr-3\">Name : </p><p> { val.approve_emp_name } </p></div>\r\n                                                <div className=\"DIVS\" ><p className=\"font-weight-bolder\">Date : </p><p>{ d2 ? d2.toString().substring(0,15) : null }</p></div>\r\n                                            </div>\r\n                                            <div >\r\n                                                <div className=\"DIVS\" ><p className=\"font-weight-bolder mr-3\">Name : </p><p> { val.handle_emp_name } </p></div>\r\n                                                <div className=\"DIVS\" ><p className=\"font-weight-bolder\">Date : </p><p>{ d3 ? d3.toString().substring(0,15) : null }</p></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n\r\n                    }\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default PR_printUI;","import React, { Suspense, lazy, useState, useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n// IMPORT CSS\r\nimport './PurchaseOrder.css';\r\n\r\nimport Request from './Request/Request';\r\n\r\nimport Menu from \"../../../../../UI/Menu/Menu\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport axios from '../../../../../../axios';\r\nimport socket from '../../../../../../io';\r\nimport $ from 'jquery';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport Modal from '../../../../../UI/Modal/Modal';\r\nimport PRPrintUI from './PR_printUI/PR_printUI';\r\n\r\nconst Home = lazy( () => import('./Home/Home') );\r\nconst Form = lazy( () => import('./Form/Form') );\r\nconst PreviousRequest = lazy( () => import('./PreviousRequest/PreviousRequest') );\r\nconst Bills = lazy( () => import('./Bills/Bills') );\r\n\r\nconst PurchaseOrder = () => {\r\n\r\n    // STATE FOR MENU\r\n    const [MenuData, setMenuData] = useState([]);\r\n\r\n    // HSOW/HIDE MODAL THROUGH THIS STATE BY CHANGE IT TO TRUE/FALSE\r\n    const [ShowHide, setShowHide] = useState( false );\r\n\r\n    const [Submitted, setSubmitted] = useState(false);\r\n\r\n    const [Requests, setRequests] = useState([]);\r\n    const [Companies, setCompanies] = useState([]);\r\n    const [Locations, setLocations] = useState([]);\r\n    const [ShiptoLocations, setShiptoLocations] = useState([]);\r\n    const [PurchaseOrderCode, setPurchaseOrderCode] = useState('');\r\n    const [CountStatus, setCountStatus] = useState([]);\r\n\r\n    \r\n    const [PrID, setPrID] = useState(0);\r\n    const [PrIDPrev, setPrIDPrev] = useState(0);\r\n    const [PRCode, setPRCode] = useState('');\r\n\r\n    const [RequestInformation, setRequestInformation] = useState(\r\n        {\r\n            company: {\r\n                company_code: 0,\r\n                company_name: '',\r\n                company_website: ''\r\n            },\r\n            location: {\r\n                location_code: 0,\r\n                location_name: '',\r\n                location_phone: '',\r\n                location_address: ''\r\n            },\r\n            ShipTo: {\r\n                company: {\r\n                    company_code: 0,\r\n                    company_name: '',\r\n                    company_website: ''\r\n                },\r\n                location: {\r\n                    location_code: 0,\r\n                    location_name: '',\r\n                    location_phone: '',\r\n                    location_address: ''\r\n                },\r\n            },\r\n            venders: [],\r\n            comments: '',\r\n            gst: 0,\r\n            cartage: 0,\r\n            others: 0,\r\n            total: 0\r\n        }\r\n    );\r\n\r\n    const [Items, setItems] = useState([]);\r\n    const [Amount, setAmount] = useState(0.0);\r\n    const [Total, setTotal] = useState(0.0);\r\n    const [Index, setIndex] = useState();\r\n\r\n    const [EditMode, setEditMode] = useState(false);\r\n\r\n    const [Item, setItem] = useState({\r\n        description: \"\",\r\n        reason: \"\",\r\n        price: 0,\r\n        taxRequired: \"NO\",\r\n        tax: '',\r\n        quantity: 1,\r\n    });\r\n\r\n    const [TaxMode, setTaxMode] = useState('exclusive');\r\n    const [IndividualTax, setIndividualTax] = useState(false);\r\n\r\n    // PURCHASE ORDER DETAILS STATE\r\n    const [ PurchaseOrderDetails, setPurchaseOrderDetails ] = useState(\r\n        {\r\n            info: [],\r\n            specifications: [],\r\n            venders: []\r\n        }\r\n    );\r\n    // FOR THE CURRENT PO ID\r\n    const [POID, setPOID] = useState(0);\r\n    // REQEUST DETAILS STATE\r\n    const [Details, setDetails] = useState([]);\r\n    // FOR ATTACH BILLS\r\n    const [ AttachBills, setAttachBills ] = useState([]);\r\n    // FOR BILLS PREVIEW\r\n    const [ BillPreview, setBillPreview ] = useState([]);\r\n\r\n    const Data = useSelector( ( state ) => state.EmpAuth.EmployeeData ); // CURRENT EMPLOYEE DATA\r\n\r\n    // NAVIGATION\r\n    const history = useHistory();\r\n\r\n    // TODO: REACT LIFECYCLE\r\n    useEffect(\r\n        () => {\r\n\r\n            // IF PURCHASE REQUISITION HAS ATTACHED\r\n            if ( PRCode.length > 0 )\r\n            {\r\n                // SET THE CODE TO THE INPUT\r\n                $('.prNumber').val( PRCode );\r\n            }\r\n\r\n            // IF COMMENTS HAS BEEN ENTERED\r\n            if ( RequestInformation.comments.length > 0 )\r\n            {\r\n                // SET THE COMMENTS TO THE TEXTAREA\r\n                $('#requestComments').val( RequestInformation.comments );\r\n            }\r\n\r\n            let po_id = window.location.href.split('/').pop().split('id=').pop(); // RETURNS AN ID ( PO ID ) FROM THE URL\r\n\r\n            if ( !isNaN( parseInt( po_id ) ) )\r\n            {\r\n                // GET PURCHASE ORDER'S PURCHASE REQUISITION ID\r\n                axios.post(\r\n                    '/getpridfrompo',\r\n                    {\r\n                        po_id: po_id\r\n                    }\r\n                ).then(\r\n                    ( res ) => {\r\n    \r\n                        axios.post(\r\n                            '/getpurchaseorderdetails',\r\n                            {\r\n                                pr_id: res.data[0] ? res.data[0].pr_id : null,\r\n                                po_id: po_id\r\n                            }\r\n                        ).then(\r\n                            (res) => {\r\n                                \r\n                                setDetails( res.data[4] );\r\n\r\n                                let poInfo = res.data[0];\r\n                                if ( res.data[4][0] )\r\n                                {\r\n                                    poInfo[0].pr_code = res.data[4][0].pr_code;\r\n                                }\r\n\r\n                                setPurchaseOrderDetails(\r\n                                    {\r\n                                        ...PurchaseOrderDetails,\r\n                                        info: poInfo,\r\n                                        specifications: res.data[1],\r\n                                        venders: res.data[3]\r\n                                    }\r\n                                )\r\n\r\n                                if ( res.data[2][0] )\r\n                                {\r\n                                    setAttachBills( res.data[2] );\r\n                                }\r\n                                setPOID( parseInt( po_id ) );\r\n            \r\n                            }\r\n                        ).catch(err => {\r\n            \r\n                            console.log(err);\r\n            \r\n                        });\r\n                    \r\n                    }\r\n                );\r\n    \r\n            }\r\n            // GET ALL PREVIOUS PURCHASE ORDERS\r\n            if ( Data.emp_id )\r\n            {\r\n                AllPO( Data.emp_id );\r\n                // GET ALL COMPANIES\r\n                GetAllCompanies();\r\n            }\r\n\r\n            let condition = window.location.href.split('/')[ window.location.href.split('/').length - 3 ].split('view=').pop();\r\n\r\n            if ( window.location.href.split('/').pop().split('view=').pop() === 'form' )\r\n            {\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Order',\r\n                            link: false,\r\n                            func: () => OpenPurchaseOrderForm()\r\n                        },\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Bills',\r\n                            link: false,\r\n                            func: () => OpenAttachedBillsView()\r\n                        }\r\n                    ]\r\n                )\r\n            }else if ( condition === 'previousrequests' || condition === 'attached_bills' )\r\n            {\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Order',\r\n                            link: false,\r\n                            func: () => OpenPurchaseOrderForm()\r\n                        },\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Attached Bills',\r\n                            link: false,\r\n                            func: () => OpenPurchaseOrderBills()\r\n                        }\r\n                    ]\r\n                )\r\n            }else\r\n            {\r\n                setMenuData(\r\n                    [\r\n                        {\r\n                            icon: 'las la-hand-holding-usd',\r\n                            txt: 'Purchase Order',\r\n                            link: false,\r\n                            func: () => OpenPurchaseOrderForm()\r\n                        }\r\n                    ]\r\n                )\r\n            }\r\n\r\n        }, [ window.location.href ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            if ( Data.company_code ) {\r\n\r\n                socket.on(\r\n                    'newpurchaseorder', () => {\r\n                        \r\n                        AllPO( Data.emp_id );\r\n                \r\n                    }\r\n                )\r\n\r\n            }\r\n\r\n\r\n        }, [ Data.company_code, Data.emp_id, Submitted ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // * IMPORTANT VARIABLES\r\n            let cartage = RequestInformation.cartage === '' ? 0 : parseFloat( RequestInformation.cartage );\r\n            let others = RequestInformation.others === '' ? 0 : parseFloat( RequestInformation.others );\r\n            let total = Total === '' ? 0 : parseFloat( Total );\r\n\r\n            let val = {\r\n                ...RequestInformation,\r\n                total: cartage + others + total\r\n            };\r\n\r\n            setRequestInformation( val );\r\n\r\n        }, [ RequestInformation.cartage, RequestInformation.others, Total]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            \r\n            // IMPORTANT VARIABLES\r\n            let price = parseFloat( Item.price );\r\n            let quantity = parseInt( Item.quantity );\r\n            let tax = parseFloat( Item.tax );\r\n\r\n            if ( isNaN( price ) || price < 0 )\r\n            {\r\n                price = 0;\r\n                setItem(\r\n                    {\r\n                        ...Item,\r\n                        price: 0\r\n                    }\r\n                )\r\n            }\r\n            \r\n            if ( isNaN( quantity ) || quantity < 0 )\r\n            {\r\n                quantity = 0;\r\n                setItem(\r\n                    {\r\n                        ...Item,\r\n                        quantity: 0\r\n                    }\r\n                )\r\n            }\r\n            \r\n            if ( isNaN( tax ) || tax < 0 )\r\n            {\r\n                tax = 0;\r\n                setItem(\r\n                    {\r\n                        ...Item,\r\n                        tax: ''\r\n                    }\r\n                )\r\n            }\r\n\r\n            if ( Item.taxRequired === 'YES' && TaxMode === 'exclusive' )\r\n            {\r\n                let amount = ( ( price * quantity ) / 100 ) * tax;\r\n                setAmount( amount + ( price * quantity ) );\r\n            }else\r\n            {\r\n                let amount = quantity * price;\r\n                setAmount( amount );\r\n            }\r\n    \r\n\r\n        }, [ Item.tax, Item.quantity, Item.price, TaxMode ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // IMPORTANT VARIABLES\r\n            let subTotal = parseFloat( Total );\r\n            let cartage = parseFloat( RequestInformation.cartage );\r\n            let others = parseFloat( RequestInformation.others );\r\n            let gst = parseFloat( RequestInformation.gst );\r\n\r\n            if ( isNaN( subTotal ) )\r\n            {\r\n                subTotal = 0;\r\n                setTotal( subTotal );\r\n            }\r\n            if ( isNaN( cartage ) )\r\n            {\r\n                cartage = 0;\r\n                setRequestInformation(\r\n                    {\r\n                        ...RequestInformation,\r\n                        cartage: 0\r\n                    }\r\n                );\r\n            }\r\n            if ( isNaN( others ) )\r\n            {\r\n                others = 0;\r\n                setRequestInformation(\r\n                    {\r\n                        ...RequestInformation,\r\n                        others: 0\r\n                    }\r\n                );\r\n            }\r\n            if ( isNaN( gst ) )\r\n            {\r\n                gst = 0;\r\n                setRequestInformation(\r\n                    {\r\n                        ...RequestInformation,\r\n                        gst: ''\r\n                    }\r\n                );\r\n            }\r\n\r\n            let amount = ( subTotal / 100 ) * gst;\r\n            setRequestInformation(\r\n                {\r\n                    ...RequestInformation,\r\n                    total: subTotal + amount + others + cartage\r\n                }\r\n            );\r\n            // if ( !IndividualTax )\r\n            // {\r\n            // }\r\n\r\n\r\n        }, [ RequestInformation.gst, RequestInformation.cartage, RequestInformation.others, Total ]\r\n    )\r\n\r\n    // TO OPEN THE VIEW WHERE EMPLOYEE CAN ATTACH BILLS REMOVE THEM AND ALSO PREVIEW THEM\r\n    const OpenAttachedBillsView = () => {\r\n\r\n        history.replace(\"/purchaseorder/view=bills\");\r\n\r\n    }\r\n\r\n    // THIS FUNCTION WILL OPEN THE PURCHASE ORDER\r\n    // FORM WHERE EMPLOYEE CAN FILL THE FIELDS AND SEND THE REQUEST\r\n    // TO THE MANAGEMENT\r\n    const OpenPurchaseOrderForm = () => {\r\n\r\n        history.replace(\"/purchaseorder/view=form\");\r\n\r\n    }\r\n\r\n    // THIS FUNCTION WILL USE TO VIEW THE HISTORIC PURCHASE ORDER'S BILLS\r\n    const OpenPurchaseOrderBills = () => {\r\n\r\n        // /purchaseorder/view=attached_bills/1/1\r\n        let links = window.location.href.split('/');\r\n        let pr_id = links[6];\r\n        let po_id = links[7];\r\n        history.replace('/purchaseorder/view=attached_bills/' + pr_id + '/' + po_id);\r\n\r\n    }\r\n\r\n    // GET ALL COMPANIES\r\n    const GetAllCompanies = () => {\r\n\r\n        const Data = new FormData();\r\n        axios.get('/getallcompanies', Data).then(\r\n            (res) => {\r\n\r\n                setCompanies( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // GET ALL PREVIOUS PURCHASE ORDERS\r\n    const AllPO = ( id ) => {\r\n\r\n        const Data = new FormData();\r\n        Data.append('empID', id);\r\n        axios.post('/getthatempinvtrypos', Data).then(\r\n            (res) => {\r\n\r\n                setRequests( res.data );\r\n                let arr = [];\r\n                for( let x = 0; x < res.data.length; x++ )\r\n                {\r\n    \r\n                    arr.push(res.data[x].status)\r\n    \r\n                }\r\n                setCountStatus( arr );\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n    \r\n    // GET COMPANY'S ALL LOCATIONS\r\n    const GetCompanyLocations = ( company_code ) => {\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: company_code ? company_code : Data.company_code\r\n            }\r\n        ).then(res => {\r\n\r\n            // CREATE PO CODE ACCORDING TO THE COMPANY CODE\r\n            createPOCode( company_code );\r\n\r\n            // SET VALUE TO LOCATIONS DROPDOWN\r\n            setLocations( res.data );\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n    \r\n    // CREATE CODE FOR PURCHASE ORDER\r\n    const createPOCode = ( company_code ) => {\r\n\r\n        let CCode = '';\r\n        let LastNum = '';\r\n        let Year = '';\r\n\r\n        const d = new Date();\r\n\r\n        // IF CURRENT MONTH IS GREATER THAN JUNE\r\n        if ( d.getMonth() > 6 )\r\n        {\r\n            Year = d.getFullYear().toString().substring(2,4) + '/' + ( d.getFullYear() + 1 ).toString().substring(2,4);\r\n        }else\r\n        {\r\n            Year = ( d.getFullYear() - 1 ).toString().substring(2,4) + '/' + d.getFullYear().toString().substring(2,4);\r\n        }\r\n\r\n        axios.post('/getshortcompanyname', { company_code: company_code }).then(\r\n            (res) => {\r\n\r\n                if ( res.data.length > 0 )\r\n                {\r\n                    CCode = res.data[0].code;\r\n                }\r\n\r\n                axios.post('/getpocode', { company_code: company_code }).then(\r\n                    (res) => {\r\n        \r\n                        if ( res.data.length > 0 )\r\n                        {\r\n                            let code = ( parseInt( res.data[0].po_code.split('-')[1] ) + 1 ).toString();\r\n                            if ( code.length === 1 )\r\n                            {\r\n                                code = '0' + code;\r\n                            }\r\n                            LastNum = code;\r\n                        }else\r\n                        {\r\n                            LastNum = '01';\r\n                        }\r\n\r\n                        setPurchaseOrderCode( CCode + '-' + LastNum + '-' + Year );\r\n        \r\n                    }\r\n                ).catch(\r\n                    (err) => {\r\n        \r\n                        console.log(err);\r\n        \r\n                    }\r\n                )\r\n\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n\r\n                console.log(err);\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN REQUEST COMPANY IS SELECTED\r\n    const OnChangeCompany = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED COMPANY\r\n        let Company = Companies.filter(\r\n            ( val ) => {\r\n\r\n                return val.company_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        if ( Company[0] )\r\n        {\r\n            // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n            setRequestInformation(\r\n                {\r\n                    ...RequestInformation,\r\n                    company: {\r\n                        company_code: Company[0].company_code,\r\n                        company_name: Company[0].company_name,\r\n                        company_website: Company[0].website\r\n                    }\r\n                }\r\n            )\r\n    \r\n            GetCompanyLocations( Company[0].company_code );\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN REQUEST LOCATION IS SELECTED\r\n    const OnChangeLocation = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED LOCATION\r\n        let Location = Locations.filter(\r\n            ( val ) => {\r\n\r\n                return val.location_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                location: {\r\n                    location_code: Location[0].location_code,\r\n                    location_name: Location[0].location_name,\r\n                    location_address: Location[0].address,\r\n                    location_phone: Location[0].location_phone\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN SHIP TO COMPANY IS SELECTED\r\n    const OnChangeShipToCompany = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED COMPANY\r\n        let Company = Companies.filter(\r\n            ( val ) => {\r\n\r\n                return val.company_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        axios.post('/getcompanylocations',\r\n            {\r\n                company_code: Company[0].company_code\r\n            }\r\n        ).then(res => {\r\n\r\n            // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n            setRequestInformation(\r\n                {\r\n                    ...RequestInformation,\r\n                    ShipTo: {\r\n                        ...RequestInformation.ShipTo,\r\n                        company: {\r\n                            company_code: Company[0].company_code,\r\n                            company_name: Company[0].company_name,\r\n                            company_website: Company[0].website\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n\r\n            // SET SHIP TO LOCATIONS\r\n            setShiptoLocations( res.data );\r\n\r\n        }).catch(err => {\r\n\r\n            console.log(err);\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // WHEN SHIP TO LOCATION IS SELECTED\r\n    const OnChangeShipToLocation = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n\r\n        // SELECTED LOCATION\r\n        let Location = ShiptoLocations.filter(\r\n            ( val ) => {\r\n\r\n                return val.location_code === parseInt( value )\r\n\r\n            }\r\n        )\r\n\r\n        // SET THE SELECTED COMPANY TO REQUEST INFORMATION\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                ShipTo: {\r\n                    ...RequestInformation.ShipTo,\r\n                    location: {\r\n                        location_code: Location[0].location_code,\r\n                        location_name: Location[0].location_name,\r\n                        location_address: Location[0].address,\r\n                        location_phone: Location[0].location_phone\r\n                    }\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // ADD VENDER TO THE REQUEST\r\n    const AddVender = ( val ) => {\r\n\r\n        let arr = RequestInformation.venders;\r\n        arr.push( val );\r\n        \r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                venders: arr\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // REMOVE THE ADDED VENDER FROM THE LIST\r\n    const RemoveVender = ( name ) => {\r\n\r\n        let Venders = RequestInformation.venders.filter(\r\n            ( val ) => {\r\n\r\n                return val.VenderName !== name\r\n\r\n            }\r\n        )\r\n\r\n        setRequestInformation(\r\n            {\r\n                ...RequestInformation,\r\n                venders: Venders\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // ON ENTER COMMENTS FOR THE REQUEST\r\n    const OnComments = ( e ) => {\r\n\r\n        // EXTRACTING VALUE\r\n        const { value } = e.target;\r\n\r\n        let val = {\r\n            ...RequestInformation,\r\n            comments: value\r\n        }\r\n\r\n        setRequestInformation( val );\r\n\r\n    }\r\n\r\n    // WHEN EMPLOYEE ENTERING THE DETAILS IN THE FIELDS AND THE DATA IS STORE TO STATE\r\n    const OnChangeHandler = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        let pass = true;\r\n        if ( name === 'quantity' || name === 'price' || name === 'tax' )\r\n        {\r\n            if ( value < 0 || value === -0 || value === '-0' )\r\n            {\r\n                ShowNotification( \"value should be greater than 0\", 'top-center' );\r\n                pass = false;\r\n            }\r\n        }\r\n\r\n        if ( pass )\r\n        {\r\n            const val = {\r\n              ...Item,\r\n              [name]: value,\r\n            };\r\n        \r\n            setItem(val);\r\n    \r\n            if (name === \"taxRequired\") {\r\n    \r\n                let input = document.getElementById('TAX');\r\n                if ( value === 'YES' )\r\n                {\r\n                    input.disabled = false;\r\n                    setIndividualTax( true );\r\n                    setRequestInformation(\r\n                        {\r\n                            ...RequestInformation,\r\n                            gst: '',\r\n                            total: isNaN( parseFloat( Total ) ) ? 0 : parseFloat( Total )\r\n                        }\r\n                    )\r\n                }else\r\n                {\r\n                    setItem(\r\n                        {\r\n                            ...Item,\r\n                            taxRequired: \"NO\",\r\n                            tax: ''\r\n                        }\r\n                    )\r\n                    input.disabled = true;\r\n                    setIndividualTax( false );\r\n                    \r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    // WHEN EMPLOYEE WANT TO ADD AN ITEM TO THE ENTERED ITEMS LIST\r\n    const AddItem = (e) => {\r\n        if (\r\n            e.keyCode === 13 && Item.description !== '' && Item.reason !== '' && Item.quantity > 0 && Item.price > 0\r\n        ) {\r\n\r\n            if (Item.reason.length < 20) {\r\n\r\n                let val = $(\".err_reason\").val();\r\n\r\n                let i = 0;\r\n                let txt = \"Reason must contain 20 characters minimum!!!\";\r\n                let speed = 50;\r\n                val = '';\r\n\r\n                function typeWriter() {\r\n                    if (i < txt.length) {\r\n                        val += txt.charAt(i);\r\n                        $(\".err_reason\").html(val);\r\n                        i++;\r\n                        setTimeout(typeWriter, speed);\r\n                    }\r\n                }\r\n\r\n                typeWriter();\r\n\r\n                setTimeout(() => {\r\n                    $(\".err_reason\").html('');\r\n                }, 5000);\r\n\r\n            } else {\r\n\r\n                if (Item.taxRequired === \"YES\" && Item.tax.toString() === '0') {\r\n                    ShowNotification( \"Tax required\", 'top-center' );\r\n                } else {\r\n                    if (!EditMode) {\r\n                        let cart = {\r\n                            description: Item.description,\r\n                            reason: Item.reason,\r\n                            price: Item.price,\r\n                            quantity: Item.quantity,\r\n                            taxRequired: Item.taxRequired,\r\n                            tax: Item.tax,\r\n                            amount: Amount,\r\n                        };\r\n                        setItems([...Items, cart]);\r\n\r\n                        setAmount(0.0);\r\n                        $('select').val('NO');\r\n                        setItem({\r\n                            description: \"\",\r\n                            reason: \"\",\r\n                            price: 0,\r\n                            taxRequired: \"NO\",\r\n                            tax: '',\r\n                            quantity: 1,\r\n                        });\r\n\r\n                        let t = Total;\r\n                        t = t + Amount;\r\n\r\n                        setTotal(t);\r\n\r\n                        var objDiv = document.getElementById(\"ItemsLIst\");\r\n                        if (objDiv !== null) {\r\n                            objDiv.scrollTop = objDiv.scrollHeight;\r\n                        }\r\n\r\n                    } else {\r\n                        let arr = Items;\r\n                        let cart = {};\r\n                        if (Item.id) {\r\n                            cart = {\r\n                                id: Item.id,\r\n                                pr_id: Item.pr_id,\r\n                                description: Item.description,\r\n                                reason: Item.reason,\r\n                                price: Item.price,\r\n                                quantity: Item.quantity,\r\n                                taxRequired: Item.taxRequired,\r\n                                tax: Item.tax,\r\n                                amount: Amount,\r\n                            };\r\n                        } else {\r\n                            cart = {\r\n                                description: Item.description,\r\n                                reason: Item.reason,\r\n                                price: Item.price,\r\n                                quantity: Item.quantity,\r\n                                taxRequired: Item.taxRequired,\r\n                                tax: Item.tax,\r\n                                amount: Amount,\r\n                            };\r\n                        }\r\n                        setTotal(( Total - arr[Index].amount ) + Amount);\r\n\r\n                        arr[Index] = cart;\r\n                        setItems(arr);\r\n\r\n                        setAmount(0.0);\r\n                        $('select').val('NO');\r\n                        setItem({\r\n                            description: \"\",\r\n                            reason: \"\",\r\n                            price: 0,\r\n                            taxRequired: \"NO\",\r\n                            tax: '',\r\n                            quantity: 1,\r\n                        });\r\n                        setEditMode(false);\r\n                        setIndex();\r\n                        $(\".POForm .PO_printUI_Middle .PO_printUI_Grid.MyItems\").removeClass(\"d-none\");\r\n\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    // WHEN EMPLOYEE WANT TO EDIT THE ENTERED ITEM DETAIL\r\n    const OnEdit = (index) => {\r\n        setEditMode(true);\r\n        setIndex(index);\r\n\r\n        if ( Items[index].tax !== '' )\r\n        {\r\n            $('select').val('YES');\r\n        }\r\n        setAmount(Items[index].amount);\r\n        setItem(Items[index]);\r\n\r\n        $(\".POForm .PO_printUI_Middle .PO_printUI_Grid.MyItems\").removeClass(\"d-none\");\r\n        $(\".POForm .PO_printUI_Middle .PO_printUI_Grid.MyItems\" + index).toggleClass(\"d-none\");\r\n    };\r\n\r\n    // WHEN EMPLOYEE WANT TO DELETE/REMOVE THE ENTERED ITEM\r\n    const onDelete = (id) => {\r\n\r\n        setItems(\r\n            Items.filter((val, index) => {\r\n                return index !== id;\r\n            })\r\n        );\r\n\r\n        setTotal(Total - Items[id].amount);\r\n    };\r\n\r\n    // WHEN PURCHASE ORDER IS SUBMIT\r\n    const SubmitPurchaseOrder = () => {\r\n\r\n        let pass = true;\r\n        if ( RequestInformation.company.company_code === 0 )\r\n        {\r\n            ShowNotification( \"No Company Selected\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( RequestInformation.location.location_code === 0 )\r\n        {\r\n            ShowNotification( \"No location Selected\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( RequestInformation.ShipTo.company.company_code === 0 )\r\n        {\r\n            ShowNotification( \"No Ship To Company Selected\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( RequestInformation.ShipTo.location.location_code === 0 )\r\n        {\r\n            ShowNotification( \"No Ship To Location Selected\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( RequestInformation.venders.length === 0 )\r\n        {\r\n            ShowNotification( \"No vender added\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( Items.length === 0 )\r\n        {\r\n            ShowNotification( \"No Items added\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( RequestInformation.comments.length === 0 )\r\n        {\r\n            ShowNotification( \"Please enter comments\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( AttachBills.length === 0 )\r\n        {\r\n            ShowNotification( \"Please attach at least one bill document.\", 'top-center' );\r\n            pass = false;\r\n        }else\r\n        if ( EditMode )\r\n        {\r\n            ShowNotification( \"The request is in edit mode, please press enter on the specification fields to get out of it.\", 'top-center' );\r\n            pass = false;\r\n        }\r\n\r\n        if ( pass )\r\n        {\r\n            const val = {\r\n                RequestInfo: RequestInformation,\r\n                specifications: Items,\r\n                SenderInfo: Data.emp_id,\r\n                code: PurchaseOrderCode,\r\n                TaxMode: TaxMode,\r\n                PrID: PrID\r\n            }\r\n            const D = new FormData();\r\n            D.append('data', JSON.stringify( val ));\r\n            AttachBills.forEach(file => {\r\n                D.append(\"Attachments\", file.file);\r\n            });\r\n    \r\n            axios.post(\r\n                '/purchase_order/new',\r\n                D\r\n            ).then(\r\n                () => {\r\n    \r\n                    ShowNotification( \"Request Submitted\", 'top-center' );\r\n                    setTimeout(() => {\r\n                        history.replace('/purchaseorder/');\r\n                        setTimeout(() => {\r\n                            history.replace('/purchaseorder/view=form');\r\n                        }, 100);\r\n                    }, 1000);\r\n\r\n                    socket.emit('newpurchaseorder');\r\n\r\n                    const Data3 = new FormData();\r\n                    Data3.append('access', JSON.stringify([523, 524, 1]));\r\n                    axios.post('/getemployeeaccesslike', Data3).then(\r\n                        (res) => {\r\n\r\n                            if (res.data[0]) {\r\n                                for (let x = 0; x < res.data.length; x++) {\r\n\r\n                                    const Data2 = new FormData();\r\n                                    Data2.append('eventID', 3);\r\n                                    Data2.append('link', '');\r\n                                    Data2.append('receiverID', res.data[x].emp_id);\r\n                                    Data2.append('senderID', sessionStorage.getItem('EmpID'));\r\n                                    Data2.append('Title', sessionStorage.getItem('name'));\r\n                                    Data2.append('NotificationBody', sessionStorage.getItem('name') + ' post a new purchase order request on the portal with id# ' + PurchaseOrderCode);\r\n                                    axios.post('/newnotification', Data2).then(() => {\r\n\r\n                                        axios.post('/sendmail', Data2).then(() => {\r\n\r\n                                            socket.emit('NewNotification', res.data[x].emp_id);\r\n\r\n                                        })\r\n                                    });\r\n\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    )\r\n    \r\n                }\r\n            ).catch(\r\n                (err) => {\r\n    \r\n                    console.log(err);\r\n                    ShowNotification( \"Request Failed\", 'top-center' );\r\n    \r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN EMPLOYEE ENTER PURCHASE REQUISITION NUMBER/CODE\r\n    const OnChangePrNumber = ( e ) => {\r\n\r\n        if ( e.keyCode === 13 )\r\n        {\r\n            // EXTRACTING VALUE\r\n            const { value } = e.target;\r\n\r\n            axios.post('/getprforpo',\r\n                {\r\n                    pr_code: value\r\n                }\r\n            ).then(res => {\r\n\r\n                // WHEN PURCHASE REQUISITION IS NOT EXISTS\r\n                const NotFound = () => {\r\n                    ShowNotification( \"Not Found\", 'top-center' );\r\n                    setItems([]);\r\n                    setTotal(0.00);\r\n                    setPrID( 0 );\r\n                    setPRCode('');\r\n                }\r\n\r\n                if ( res.data.length > 0 )\r\n                {\r\n                    if ( res.data[1].length > 0 )\r\n                    {\r\n                        setItems( res.data[0] );\r\n    \r\n                        setTotal( res.data[1][0].total );\r\n\r\n                        setRequestInformation(\r\n                            {\r\n                                ...RequestInformation,\r\n                                total: res.data[1][0].total\r\n                            }\r\n                        )\r\n                        setPrID( res.data[1][0].pr_id );\r\n                        setPRCode( value );\r\n                        ShowNotification( \"Connected\", 'top-center' );\r\n                    }else\r\n                    {\r\n                        NotFound();\r\n                    }\r\n                }else\r\n                {\r\n                    NotFound();\r\n                }\r\n\r\n            }).catch(err => {\r\n\r\n                console.log(err);\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN THE FINAL VALUE\r\n    // todo: (SUB TOTAL, GST, CARTAGE, OTHERS, TOTAL)\r\n    // GOT CHANGE\r\n    const FinalValuesChangeHandler = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n        const val = {\r\n            ...RequestInformation,\r\n            [name]: value\r\n        }\r\n\r\n        setRequestInformation( val );\r\n\r\n    }\r\n\r\n    // DECIDE IS TAX INCLUDED OR EXCLUDED\r\n    const ExclusiveInclusiveTax = ( e ) => {\r\n\r\n        // EXTRACTING VALUE\r\n        const { value } = e.target;\r\n        \r\n        // IMPORTANT VARIABLES\r\n        let total = parseFloat( Total );\r\n        let gst = parseFloat( RequestInformation.gst );\r\n        let cartage = RequestInformation.cartage === '' ? 0 : parseFloat(RequestInformation.cartage);\r\n        let others = RequestInformation.others === '' ? 0 : parseFloat(RequestInformation.others);\r\n        \r\n        if ( value === 'exclusive' )\r\n        {\r\n    \r\n            if ( isNaN( total ) )\r\n            {\r\n                total = 0;\r\n                setTotal(0.00);\r\n            }\r\n            if ( isNaN( gst ) )\r\n            {\r\n                gst = 0;\r\n                setRequestInformation(\r\n                    {\r\n                        ...RequestInformation,\r\n                        gst: ''\r\n                    }\r\n                );\r\n            }\r\n    \r\n            if ( Item.taxRequired === 'NO' )\r\n            {\r\n                \r\n                let amount = ( total / 100 ) * gst;\r\n                setRequestInformation(\r\n                    {\r\n                        ...RequestInformation,\r\n                        total: amount + total + cartage + others\r\n                    }\r\n                );\r\n            }\r\n        }else\r\n        {\r\n            // * IMPORTANT VARIABLES\r\n            let total = Total === '' ? 0 : parseFloat(Total);\r\n\r\n            let val = {\r\n                ...RequestInformation,\r\n                total: cartage + others + total\r\n            };\r\n\r\n            setRequestInformation(val);\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN INDIVIDUAL TAX MODE CHANGE FROM\r\n    // ! EXCLUSIVE/INCLUSIVE\r\n    const IndividualTaxMode = ( e ) => {\r\n\r\n        const { value } = e.target;\r\n        setTaxMode(value);\r\n\r\n    }\r\n\r\n    // SHOW POP-UP ALERT\r\n    const ShowNotification = ( note , position) => {\r\n\r\n        toast.dark(note.toString(), {\r\n            position: position,\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n\r\n    }\r\n\r\n    // ON ATTACH BILLS TO THE REQUEST\r\n    const onAttachBills = ( e ) => {\r\n\r\n        const reader = new FileReader();\r\n        const { files } = e.target;\r\n\r\n        reader.onload = () => {\r\n\r\n            if (reader.readyState === 2) {\r\n                let arr = [];\r\n                // let invoAttachments = document.querySelector('.invoAttachments');\r\n\r\n                for (let x = 0; x < files.length; x++) {\r\n                    arr.push(\r\n                        {\r\n                            name: files[x].name,\r\n                            file: files[x]\r\n                        }\r\n                    )\r\n                }\r\n\r\n                setAttachBills( arr );\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        if (files[0]) {\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN EMPLOYEE WANT TO SEE THE PREVIEW THE ATTACHED BILLS\r\n    const PreviewBill = ( id ) => {\r\n\r\n        let array = [];\r\n        if ( AttachBills[0].image )\r\n        {\r\n            array = AttachBills.filter(\r\n                ( val, index, arr ) => {\r\n          \r\n                  return arr[index].image === arr[id].image;\r\n          \r\n                }\r\n            )\r\n        }else\r\n        {\r\n            array = AttachBills.filter(\r\n                ( val, index, arr ) => {\r\n          \r\n                  return arr[index].name === arr[id].name;\r\n          \r\n                }\r\n            )\r\n        }\r\n        \r\n      \r\n        setBillPreview( array );\r\n\r\n    }\r\n\r\n    // WHEN EMPLOYEE WANTS TO REMOVE A BILL FROM THE ATTACHMENT LIST\r\n    const RemoveBill = ( id ) => {\r\n\r\n        let array = AttachBills.filter(\r\n            ( val, index, arr ) => {\r\n      \r\n              return arr[index].name !== arr[id].name;\r\n      \r\n            }\r\n        )\r\n      \r\n        setAttachBills( array );\r\n        setBillPreview([]);\r\n\r\n    }\r\n\r\n    // IF EMPLOYEE WANTS TO SEE THE HISTORIC PURCHASE ORDER'S PURCHASE REQUISITION\r\n    // HE CAN VIEW BY THIS FUNCTION\r\n    const ShowModal = ( pr_id ) => {\r\n\r\n        setPrIDPrev( pr_id );\r\n        setShowHide( !ShowHide );\r\n\r\n    }\r\n    \r\n    return (\r\n\r\n        // PURCHASE ORDER START\r\n        <div className=\"PurchaseOrderContainer\">\r\n            <ToastContainer />\r\n\r\n            {/* CUSTOM MODAL COMPONENT */}\r\n            <Modal \r\n                show={ ShowHide } \r\n                Hide={ \r\n                    () => {\r\n                        setShowHide( !ShowHide );\r\n                        setPrIDPrev(0);\r\n                    }\r\n                } \r\n                content=\r\n                {\r\n                    PrIDPrev === 0\r\n                    ?\r\n                    PrID === 0\r\n                    ?\r\n                    null\r\n                    :\r\n                    <PRPrintUI\r\n                        PrID={ PrID }\r\n                    />\r\n                    :\r\n                    <PRPrintUI\r\n                        PrID={ PrIDPrev }\r\n                    />\r\n                } \r\n            />\r\n\r\n            {/* PURCHASE ORDER MENU COMPONENT */}\r\n            <div style={ { height: '50px' } }>\r\n                <Menu data={ MenuData } />  \r\n            </div>\r\n\r\n            {/* CONTENT */}\r\n            {/* GRID CONTAINER */}\r\n            <div className='PurchaseOrderGrid'>\r\n\r\n                {/* LEFT PANEL */}\r\n                {/* PREVIOUS REQUESTS */}\r\n                <div className=\"Left PreviousPurchaseOrders\">\r\n\r\n                    {/* REQUESTS */}\r\n                    {\r\n                        Requests.length === 0\r\n                        ?\r\n                        <>\r\n                            <h5 className=\"text-center\">No Request Found</h5>\r\n                        </>\r\n                        :\r\n                        Requests.map(\r\n                            ( val, index ) => {\r\n\r\n                                const d = new Date( val.request_date );\r\n                                let txt = val.status;\r\n\r\n                                let bgColor = '#0eb8de';\r\n\r\n                                if (val.status === 'Approved' || val.status === 'Delivered') {\r\n                                    bgColor = '#307365';\r\n                                    txt = \"Approved By accounts\";\r\n                                }\r\n\r\n                                if (val.status === 'Rejected') {\r\n                                    bgColor = '#d19399';\r\n                                    txt = \"Rejected by accounts\";\r\n                                }\r\n\r\n                                if (val.status === 'Waiting For Approval') {\r\n                                    bgColor = '#fc9701';\r\n                                }\r\n\r\n                                return (\r\n                                    <Request \r\n                                        index={ index }\r\n                                        data={ val }\r\n                                        d={ d }\r\n                                        txt={ txt }\r\n                                        bgColor={ bgColor }\r\n                                    />\r\n                                );\r\n\r\n                            }\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n\r\n                {/* RIGHT PANEL */}\r\n                {/* MAIN CONTENT */}\r\n                <div className=\"Right MainContentWindow\">\r\n\r\n                    <Suspense fallback={ <div>Loading....</div> }>\r\n                        \r\n                        {/* ROUTES */}\r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=home'\r\n                            render={  \r\n                                () =>\r\n                                    <Home\r\n                                        ViewRequest={ Requests }\r\n                                        CountRequests={ Requests.length }\r\n                                        CountStatus={ CountStatus }\r\n                                        // MonthlyRequests={ MonthlyRequests }\r\n                                        EmpData={ Data }\r\n                                    />\r\n                            }\r\n                        />\r\n                        \r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=form'\r\n                            render={  \r\n                                () =>\r\n                                    <Form\r\n                                        Companies={ Companies }\r\n                                        Locations={ Locations }\r\n                                        ShiptoLocations={ ShiptoLocations }\r\n                                        RequestInformation={ RequestInformation }\r\n                                        Data={ Data }\r\n                                        Items={ Items }\r\n                                        Item={ Item }\r\n                                        Total={ Total }\r\n                                        Amount={ Amount }\r\n                                        PurchaseOrderCode={ PurchaseOrderCode }\r\n                                        TaxMode={ TaxMode }\r\n                                        IndividualTax={ IndividualTax }\r\n                                        PRCode={ PRCode }\r\n                                        Index={ Index }\r\n\r\n                                        AddItem={ AddItem }\r\n                                        OnEdit={ OnEdit }\r\n                                        onDelete={ onDelete }\r\n                                        OnChangeCompany={ OnChangeCompany }\r\n                                        OnChangeLocation={ OnChangeLocation }\r\n                                        OnChangeShipToCompany={ OnChangeShipToCompany }\r\n                                        OnChangeShipToLocation={ OnChangeShipToLocation }\r\n                                        AddVender={ AddVender }\r\n                                        RemoveVender={ RemoveVender }\r\n                                        OnComments={ OnComments }\r\n                                        OnChangeHandler={OnChangeHandler}\r\n                                        SubmitPurchaseOrder={ SubmitPurchaseOrder }\r\n                                        OnChangePrNumber={ OnChangePrNumber }\r\n                                        FinalValuesChangeHandler={ FinalValuesChangeHandler }\r\n                                        ExclusiveInclusiveTax={ ExclusiveInclusiveTax }\r\n                                        IndividualTaxMode={ IndividualTaxMode }\r\n                                        ShowHide={ () => setShowHide( !ShowHide ) }\r\n                                    />\r\n                            }\r\n                        />\r\n                        \r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=previousrequests/:id/:id'\r\n                            render={  \r\n                                () =>\r\n                                    <PreviousRequest\r\n                                        PurchaseOrderDetails={ PurchaseOrderDetails } \r\n\r\n                                        // FUNCTIONS\r\n                                        ShowModal={ ShowModal }\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                        {/* ROUTE FOR ATTACHMENT OF BILLS */}\r\n                        {/* ROUTE */}\r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=bills'\r\n                            render={  \r\n                                () =>\r\n                                    <Bills\r\n                                        Details={ Details }\r\n                                        AttachBills={ AttachBills }\r\n                                        BillPreview={ BillPreview }\r\n\r\n                                        onAttachBills={ onAttachBills }\r\n                                        PreviewBill={ PreviewBill }\r\n                                        RemoveBill={ RemoveBill }\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                        {/* TO VIEW THE PREVIOUS REQUEST'S BILLS */}\r\n                        {/* ROUTE */}\r\n                        <Route\r\n                            exact\r\n                            path='/purchaseorder/view=attached_bills/:id/:id'\r\n                            render={  \r\n                                () =>\r\n                                    <Bills\r\n                                        Details={ Details }\r\n                                        AttachBills={ AttachBills }\r\n                                        BillPreview={ BillPreview }\r\n\r\n                                        onAttachBills={ onAttachBills }\r\n                                        PreviewBill={ PreviewBill }\r\n                                        RemoveBill={ RemoveBill }\r\n                                    />\r\n                            }\r\n                        />\r\n\r\n                    </Suspense>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default PurchaseOrder;","import React from 'react'\r\nimport './Modal.css';\r\n\r\nconst Modal = ( props ) =>{\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request_Div\" style={ { display: props.show ? 'flex' : 'none'  } }>\r\n                <div className=\"dark\" onClick={ props.Hide }>\r\n                </div>\r\n                <div style={ { animationDelay: ( 0 + '.' + 1 ).toString() + 's' } } className={ props.show ? \"Attandence_Request_Div_Content Attandence_Request_Div_Content2\" : \"Attandence_Request_Div_Content\" }>\r\n                    {\r\n                        props.content\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Modal;","import React, { useEffect } from 'react';\r\nimport './Menu.css';\r\nimport $ from \"jquery\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n\r\n    useEffect(\r\n        () => {\r\n            $('.Speeddail_Grid').slideToggle(0);\r\n        }, []\r\n\r\n    )\r\n    const ShowMenuGrid = () => {\r\n        $('.Menu_Speeddail .Speeddail_Grid').slideToggle(200);\r\n        \r\n        if ( $('.Menu_Speeddail .Menu_Speeddail_circle .las').hasClass('la-bars') )\r\n        {\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').removeClass('la-bars');\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').addClass('la-times');\r\n        }else\r\n        {\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').removeClass('la-times');\r\n            $('.Menu_Speeddail .Menu_Speeddail_circle .las').addClass('la-bars');      \r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Menu\">\r\n                {\r\n                    props.data.length > 0\r\n                        ?\r\n                        <>\r\n                            <div className=\"Menu_Grid\">\r\n                                {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <button><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                                </Link>\r\n                                                            :\r\n                                                                <button onClick={ () => val.func() }><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                            </div>\r\n                            <div className=\"Menu_Speeddail\">\r\n                                <div className=\"Menu_Speeddail_circle\" onClick={ShowMenuGrid}>\r\n                                    <i class=\"las la-times\"></i>\r\n                                </div>\r\n                                <div className=\"Speeddail_Grid\">\r\n                                    {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <div key={index}>\r\n                                                                        <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                        <p>{val.txt}</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                                :\r\n                                                                <div className=\"clicks\" key={index} onClick={ () => val.func() }>\r\n                                                                    <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                    <p>{val.txt}</p>\r\n                                                                </div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Menu;","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}