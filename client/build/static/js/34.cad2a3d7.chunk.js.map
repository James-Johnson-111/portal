{"version":3,"sources":["../Webcam/webpack/universalModuleDefinition","../Webcam/webpack/bootstrap","../Webcam/src/react-webcam.tsx","../webpack:/Webcam/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","Components/EmployeeProtal/Dashboard/Pages/AtendanceRequest/Attandence_Request.jsx","Components/UI/Modal/Modal.jsx"],"names":["factory","hasGetUserMedia","navigator","mediaDevices","getUserMedia","window","undefined","constraints","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","call","Error","props","canvas","ctx","unmounted","state","hasUserMedia","componentDidMount","this","requestUserMedia","onUserMediaError","componentDidUpdate","nextProps","audioConstraintsChanged","JSON","stringify","audioConstraints","videoConstraintsChanged","videoConstraints","minScreenshotWidthChanged","minScreenshotWidth","minScreenshotHeightChanged","minScreenshotHeight","stopAndCleanup","componentWillUnmount","stopMediaStream","stream","getVideoTracks","getAudioTracks","map","track","removeTrack","stop","Webcam","src","URL","revokeObjectURL","getScreenshot","screenshotDimensions","getCanvas","toDataURL","screenshotFormat","screenshotQuality","video","videoHeight","canvasWidth","videoWidth","canvasHeight","forceScreenshotSourceSize","aspectRatio","clientWidth","document","createElement","width","height","getContext","mirrored","translate","scale","imageSmoothingEnabled","imageSmoothing","drawImage","sourceSelected","audio","then","handleUserMedia","catch","e","id","optional","sourceId","constraint","deviceId","Array","isArray","length","ideal","MediaStreamTrack","getSources","sources","audioSource","videoSource","forEach","source","kind","audioSourceId","videoSourceId","err","setState","srcObject","error","createObjectURL","onUserMedia","render","style","rest","videoStyle","transform","autoPlay","muted","playsInline","ref","defaultProps","module","Attandence_Request","refs","useRef","facingMode","useState","ModalShow","setModalShow","ModalContent","setModalContent","setRequestImage","subject","description","arrivalTime","arrivalFor","RequestData","setRequestData","image","imageName","RequestDataImage","setRequestDataImage","useEffect","type","className","onClick","takePhoto","$","hide","OnChangeHandler","target","name","value","val","screenshot","current","val1","block","split","contentType","blob","b64Data","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","i","charCodeAt","byteArray","Uint8Array","push","Blob","b64toBlob","d","Date","ImageCurrentName","getDate","toString","getMonth","getFullYear","getTime","val2","ShowPicDiv","required","inputProps","minLength","onChange","variant","InputLabelProps","shrink","backgroundColor","color","class","xmlns","viewBox","cx","cy","r","fill","display","marginLeft","show","Hide","content","Modal","animationDelay"],"mappings":"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","file":"static/js/34.cad2a3d7.chunk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Webcam\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"Webcam\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_react__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/react-webcam.tsx\");\n","import * as React from \"react\";\n\n// polyfill based on https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n(function polyfillGetUserMedia() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Older browsers might not implement mediaDevices at all, so we set an empty object first\n  if (navigator.mediaDevices === undefined) {\n    (navigator as any).mediaDevices = {};\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n  if (navigator.mediaDevices.getUserMedia === undefined) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      // First get ahold of the legacy getUserMedia, if present\n      const getUserMedia =\n        navigator.getUserMedia ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n\n      // Some browsers just don't implement it - return a rejected promise with an error\n      // to keep a consistent interface\n      if (!getUserMedia) {\n        return Promise.reject(\n          new Error(\"getUserMedia is not implemented in this browser\")\n        );\n      }\n\n      // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n      return new Promise(function(resolve, reject) {\n        getUserMedia.call(navigator, constraints, resolve, reject);\n      });\n    };\n  }\n})();\n\nfunction hasGetUserMedia() {\n  return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\n}\n\ninterface ScreenshotDimensions {\n  width: number;\n  height: number;\n}\n\nexport type WebcamProps = Omit<React.HTMLProps<HTMLVideoElement>, \"ref\"> & {\n  audio: boolean;\n  audioConstraints?: MediaStreamConstraints[\"audio\"];\n  forceScreenshotSourceSize: boolean;\n  imageSmoothing: boolean;\n  mirrored: boolean;\n  minScreenshotHeight?: number;\n  minScreenshotWidth?: number;\n  onUserMedia: (stream: MediaStream) => void;\n  onUserMediaError: (error: string | DOMException) => void;\n  screenshotFormat: \"image/webp\" | \"image/png\" | \"image/jpeg\";\n  screenshotQuality: number;\n  videoConstraints?: MediaStreamConstraints[\"video\"];\n}\n\ninterface WebcamState {\n  hasUserMedia: boolean;\n  src?: string;\n}\n\nexport default class Webcam extends React.Component<WebcamProps, WebcamState> {\n  static defaultProps = {\n    audio: true,\n    forceScreenshotSourceSize: false,\n    imageSmoothing: true,\n    mirrored: false,\n    onUserMedia: () => undefined,\n    onUserMediaError: () => undefined,\n    screenshotFormat: \"image/webp\",\n    screenshotQuality: 0.92,\n  };\n\n  private canvas: HTMLCanvasElement | null = null;\n\n  private ctx: CanvasRenderingContext2D | null = null;\n\n  private unmounted = false;\n\n  stream: MediaStream | null;\n\n  video: HTMLVideoElement | null;\n\n  constructor(props: WebcamProps) {\n    super(props);\n    this.state = {\n      hasUserMedia: false\n    };\n  }\n\n  componentDidMount() {\n    const { state, props } = this;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    if (!state.hasUserMedia) {\n      this.requestUserMedia();\n    }\n  }\n\n  componentDidUpdate(nextProps: WebcamProps) {\n    const { props } = this;\n\n    if (!hasGetUserMedia()) {\n      props.onUserMediaError(\"getUserMedia not supported\");\n\n      return;\n    }\n\n    const audioConstraintsChanged =\n      JSON.stringify(nextProps.audioConstraints) !==\n      JSON.stringify(props.audioConstraints);\n    const videoConstraintsChanged =\n      JSON.stringify(nextProps.videoConstraints) !==\n      JSON.stringify(props.videoConstraints);\n    const minScreenshotWidthChanged =\n      nextProps.minScreenshotWidth !== props.minScreenshotWidth;\n    const minScreenshotHeightChanged =\n      nextProps.minScreenshotHeight !== props.minScreenshotHeight;\n    if (\n      videoConstraintsChanged ||\n      minScreenshotWidthChanged ||\n      minScreenshotHeightChanged\n    ) {\n      this.canvas = null;\n      this.ctx = null;\n    }\n    if (audioConstraintsChanged || videoConstraintsChanged) {\n      this.stopAndCleanup();\n      this.requestUserMedia();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.stopAndCleanup();\n  }\n\n  private static stopMediaStream(stream: MediaStream | null) {\n    if (stream) {\n      if (stream.getVideoTracks && stream.getAudioTracks) {\n        stream.getVideoTracks().map(track => {\n          stream.removeTrack(track);\n          track.stop();\n        });\n        stream.getAudioTracks().map(track => {\n          stream.removeTrack(track);\n          track.stop()\n        });\n      } else {\n        ((stream as unknown) as MediaStreamTrack).stop();\n      }\n    }\n  }\n\n  private stopAndCleanup() {\n    const { state } = this;\n\n    if (state.hasUserMedia) {\n      Webcam.stopMediaStream(this.stream);\n\n      if (state.src) {\n        window.URL.revokeObjectURL(state.src);\n      }\n    }\n  }\n\n  getScreenshot(screenshotDimensions?: ScreenshotDimensions) {\n    const { state, props } = this;\n\n    if (!state.hasUserMedia) return null;\n\n    const canvas = this.getCanvas(screenshotDimensions);\n    return (\n      canvas &&\n      canvas.toDataURL(props.screenshotFormat, props.screenshotQuality)\n    );\n  }\n\n  getCanvas(screenshotDimensions?: ScreenshotDimensions) {\n    const { state, props } = this;\n\n    if (!this.video) {\n      return null;\n    }\n\n    if (!state.hasUserMedia || !this.video.videoHeight) return null;\n\n    if (!this.ctx) {\n      let canvasWidth = this.video.videoWidth;\n      let canvasHeight = this.video.videoHeight;\n      if (!this.props.forceScreenshotSourceSize) {\n        const aspectRatio = canvasWidth / canvasHeight;\n\n        canvasWidth = props.minScreenshotWidth || this.video.clientWidth;\n        canvasHeight = canvasWidth / aspectRatio;\n\n        if (\n          props.minScreenshotHeight &&\n          canvasHeight < props.minScreenshotHeight\n        ) {\n          canvasHeight = props.minScreenshotHeight;\n          canvasWidth = canvasHeight * aspectRatio;\n        }\n      }\n\n      this.canvas = document.createElement(\"canvas\");\n      this.canvas.width = screenshotDimensions?.width ||  canvasWidth;\n      this.canvas.height = screenshotDimensions?.height || canvasHeight;\n      this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    const { ctx, canvas } = this;\n\n    if (ctx && canvas) {\n      // mirror the screenshot\n      if (props.mirrored) {\n        ctx.translate(canvas.width, 0);\n        ctx.scale(-1, 1);\n      }\n\n      ctx.imageSmoothingEnabled = props.imageSmoothing;\n      ctx.drawImage(this.video, 0, 0, screenshotDimensions?.width || canvas.width, screenshotDimensions?.height || canvas.height);\n\n      // invert mirroring\n      if (props.mirrored) {\n        ctx.scale(-1, 1);\n        ctx.translate(-canvas.width, 0);\n      }\n    }\n\n    return canvas;\n  }\n\n  private requestUserMedia() {\n    const { props } = this;\n\n    const sourceSelected = (\n      audioConstraints: boolean | MediaTrackConstraints | undefined,\n      videoConstraints: boolean | MediaTrackConstraints | undefined,\n    ) => {\n      const constraints: MediaStreamConstraints = {\n        video: typeof videoConstraints !== \"undefined\" ? videoConstraints : true\n      };\n\n      if (props.audio) {\n        constraints.audio =\n          typeof audioConstraints !== \"undefined\" ? audioConstraints : true;\n      }\n\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(stream => {\n          if (this.unmounted) {\n            Webcam.stopMediaStream(stream);\n          } else {\n            this.handleUserMedia(null, stream);\n          }\n        })\n        .catch(e => {\n          this.handleUserMedia(e);\n        });\n    };\n\n    if (\"mediaDevices\" in navigator) {\n      sourceSelected(props.audioConstraints, props.videoConstraints);\n    } else {\n      const optionalSource = (id: string | null) => ({ optional: [{ sourceId: id }] }) as MediaTrackConstraints;\n\n      const constraintToSourceId = (constraint) => {\n        const { deviceId } = constraint;\n\n        if (typeof deviceId === \"string\") {\n          return deviceId;\n        }\n\n        if (Array.isArray(deviceId) && deviceId.length > 0) {\n          return deviceId[0];\n        }\n\n        if (typeof deviceId === \"object\" && deviceId.ideal) {\n          return deviceId.ideal;\n        }\n\n        return null;\n      };\n\n      // @ts-ignore: deprecated api\n      MediaStreamTrack.getSources(sources => {\n        let audioSource: string | null = null;\n        let videoSource: string | null = null;\n\n        sources.forEach((source: MediaStreamTrack) => {\n          if (source.kind === \"audio\") {\n            audioSource = source.id;\n          } else if (source.kind === \"video\") {\n            videoSource = source.id;\n          }\n        });\n\n        const audioSourceId = constraintToSourceId(props.audioConstraints);\n        if (audioSourceId) {\n          audioSource = audioSourceId;\n        }\n\n        const videoSourceId = constraintToSourceId(props.videoConstraints);\n        if (videoSourceId) {\n          videoSource = videoSourceId;\n        }\n\n        sourceSelected(\n          optionalSource(audioSource),\n          optionalSource(videoSource)\n        );\n      });\n    }\n  }\n\n  private handleUserMedia(err, stream?: MediaStream) {\n    const { props } = this;\n\n    if (err || !stream) {\n      this.setState({ hasUserMedia: false });\n      props.onUserMediaError(err);\n\n      return;\n    }\n\n    this.stream = stream;\n\n    try {\n      if (this.video) {\n        this.video.srcObject = stream;\n      }\n      this.setState({ hasUserMedia: true });\n    } catch (error) {\n      this.setState({\n        hasUserMedia: true,\n        src: window.URL.createObjectURL(stream)\n      });\n    }\n\n    props.onUserMedia(stream);\n  }\n\n  render() {\n    const { state, props } = this;\n\n    const {\n      audio,\n      forceScreenshotSourceSize,\n      onUserMedia,\n      onUserMediaError,\n      screenshotFormat,\n      screenshotQuality,\n      minScreenshotWidth,\n      minScreenshotHeight,\n      audioConstraints,\n      videoConstraints,\n      imageSmoothing,\n      mirrored,\n      style = {},\n      ...rest\n    } = props;\n\n    const videoStyle = mirrored ? { ...style, transform: `${style.transform || \"\"} scaleX(-1)` } : style;\n\n    return (\n      <video\n        autoPlay\n        src={state.src}\n        muted={audio}\n        playsInline\n        ref={ref => {\n          this.video = ref;\n        }}\n        style={videoStyle}\n        {...rest}\n      />\n    );\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","import React, { useEffect, useRef, useState } from 'react';\r\nimport './Attandence_Request.css';\r\n\r\nimport $ from 'jquery';\r\n// import Check from './check-circle.gif';\r\n\r\nimport Model from '../../../../UI/Modal/Modal';\r\n\r\nimport Webcam from 'react-webcam';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport spoken from 'spoken/build/spoken';\r\nimport axios from '../../../../../axios';\r\n\r\nconst Attandence_Request = () => {\r\n\r\n    const refs = useRef(null);\r\n    const videoConstraints = {\r\n        width: '100% !important',\r\n        facingMode: 'environment'\r\n    }\r\n\r\n    const [ ModalShow, setModalShow ] = useState( false );\r\n    const [ ModalContent, setModalContent ] = useState();\r\n    const [ RequestImage, setRequestImage ] = useState();\r\n\r\n    const [ RequestData, setRequestData ] = useState(\r\n        {\r\n            subject: '',\r\n            description: '',\r\n            arrivalTime: '',\r\n            arrivalFor: '',\r\n        }\r\n    )\r\n\r\n    const [ RequestDataImage, setRequestDataImage ] = useState(\r\n        {\r\n            image: '',\r\n            imageName: ''\r\n        }\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setModalContent(\r\n                <div>\r\n                    <Webcam\r\n                        audio={false}\r\n                        screenshotFormat=\"image/jpeg\"\r\n                        ref={refs}\r\n                        videoConstraints={videoConstraints}\r\n                        imageSmoothing\r\n                        forceScreenshotSourceSize=\"true\"\r\n                        // width=\"500px\"\r\n                        // height=\"500px\"\r\n                    />\r\n                    <button type=\"button\" className=\"btn btn-dark btn-block mt-3\" onClick={takePhoto}>TAKE YOUR PHOTO</button>\r\n                </div>\r\n            )\r\n\r\n            $('Model').hide(0);\r\n        }, []\r\n\r\n    );\r\n\r\n    const OnChangeHandler = ( e ) => {\r\n\r\n        const { name, value } = e.target;\r\n        const val = {\r\n            ...RequestData,\r\n            [name]: value\r\n        }\r\n\r\n        setRequestData( val );\r\n\r\n    }\r\n\r\n    const OnAttendanceRequest = ( e ) => {\r\n\r\n        e.preventDefault();\r\n        const Data = new FormData();\r\n        Data.append('subject', RequestData.subject);\r\n        Data.append('description', RequestData.description);\r\n        Data.append('arrivalTime', RequestData.arrivalTime);\r\n        Data.append('arrivalFor', RequestData.arrivalFor);\r\n        Data.append('imageName', RequestDataImage.imageName);\r\n        Data.append('emp_id', sessionStorage.getItem('EmpID'));\r\n\r\n        Data.append('image', RequestDataImage.image);\r\n\r\n        axios.post('/attendance_request', Data, { headers: { 'content-type': 'multipart/form-data' } }).then( res => {\r\n\r\n            setRequestData(\r\n                {\r\n                    subject: '',\r\n                    description: '',\r\n                    arrivalTime: '',\r\n                    arrivalFor: '',\r\n                }\r\n            )\r\n        \r\n            setRequestDataImage(\r\n                {\r\n                    image: '',\r\n                    imageName: ''\r\n                }\r\n            )\r\n\r\n            toast.dark('Request Submitted', {\r\n                position: 'top-right',\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n\r\n            spoken.say('Request Submitted');\r\n\r\n        } ).catch( err => {\r\n            \r\n            toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n        } )\r\n\r\n    }\r\n\r\n    \r\n    const b64toBlob = (b64Data, contentType, sliceSize) => {\r\n        contentType = contentType || '';\r\n        sliceSize = sliceSize || 512;\r\n        \r\n        var byteCharacters = atob(b64Data); // window.atob(b64Data)\r\n        var byteArrays = [];\r\n        \r\n        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n            var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n    \r\n            var byteNumbers = new Array(slice.length);\r\n            for (var i = 0; i < slice.length; i++) {\r\n                byteNumbers[i] = slice.charCodeAt(i);\r\n            }\r\n            \r\n            var byteArray = new Uint8Array(byteNumbers);\r\n            \r\n            byteArrays.push(byteArray);\r\n        }\r\n        \r\n        var blob = new Blob(byteArrays, {type: contentType});\r\n        return blob;\r\n    }\r\n    \r\n    const takePhoto = () => {\r\n        \r\n        var screenshot = refs.current.getScreenshot();\r\n        const val1 = {\r\n            ...RequestDataImage,\r\n            image: screenshot\r\n        }\r\n        setRequestDataImage( val1 );\r\n        setRequestImage( screenshot );\r\n        \r\n        let block = screenshot.split(\";\");\r\n        var contentType = block[0].split(\":\")[1];\r\n        var realData = block[1].split(\",\")[1];\r\n        var blob = b64toBlob(realData, contentType);\r\n        \r\n        const d = new Date();\r\n        \r\n        let ImageCurrentName = \"Attendance_Request_\" + d.getDate().toString() + '-' + ( d.getMonth() + 1 ).toString() + '-' + d.getFullYear().toString() + '_' + d.getTime();\r\n        \r\n        const val2 = {\r\n            ...RequestDataImage,\r\n            imageName: ImageCurrentName,\r\n            image: blob\r\n        }\r\n        setRequestDataImage( val2 );\r\n        setModalShow( false );\r\n        \r\n    }\r\n\r\n    const ariaLabel = { 'aria-label': 'description', minLength: 3 };\r\n    \r\n    const names = [\r\n        'Time IN',\r\n        'Break IN',\r\n        'Break OUt',\r\n        'Time OUT',\r\n    ];\r\n\r\n    const ShowPicDiv = () => {\r\n        \r\n        if ( ModalShow )\r\n        {\r\n            setModalShow(false);\r\n        }else\r\n        {\r\n            setModalShow(true);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request\">\r\n                <div className=\"Attandence_Request_Form\">\r\n                    <form>\r\n\r\n                    <h4 className=\"mb-4\">Attendance Request</h4>\r\n                    <div className=\"my-3\">\r\n                        <small className=\"font-weight-bold\">Subject</small>\r\n                        <input className=\"form-control\" value={ RequestData.subject } required inputProps={ariaLabel} style={{ width: \"100%\" }} name=\"subject\" onChange={ OnChangeHandler } />\r\n                    </div>\r\n                    <div className=\"my-3\">\r\n                        <small className=\"font-weight-bold\">Description</small>\r\n                        <textarea\r\n                            style={{ width: \"100%\", height: '100px' }}\r\n                            className=\"form-control\"\r\n                            required\r\n                            minLength=\"10\"\r\n                                name=\"description\"\r\n                                onChange={ OnChangeHandler }\r\n                                value={ RequestData.description }\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"Request_Form_Grid my-3\">\r\n                        <div>\r\n                            <small className=\"font-weight-bold\">Arrival Time</small>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                name=\"arrivalTime\"\r\n                                onChange={ OnChangeHandler }\r\n                                type=\"time\"\r\n                                variant=\"standard\"\r\n                                style={{ width: \"100%\" }}\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                required\r\n                                value={ RequestData.arrivalTime }\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <small className=\"font-weight-bold\">Arrival For</small>\r\n                            <select\r\n                                style={{ width: '100%', height: \"26px\" }}\r\n                                variant='standard'\r\n                                value={ RequestData.arrivalFor }\r\n                                required\r\n                                name=\"arrivalFor\"\r\n                                onChange={ OnChangeHandler }\r\n                            >\r\n                                {names.map((name) => (\r\n                                    <option\r\n                                        key={name}\r\n                                        value={name}\r\n                                    >\r\n                                        {name}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <button \r\n                            style={{ backgroundColor: '#474d53', color: 'white', width: '100%' }} \r\n                            onClick={ShowPicDiv}\r\n                            className=\"TakePhotoBtn btn d-flex justify-content-center\" type=\"button\"\r\n                        >\r\n                            {\r\n                                RequestDataImage.imageName === ''\r\n                                ?\r\n                                    <p className=\"mb-0\">Take Photo </p>\r\n                                :\r\n                                    <svg class=\"checkmark\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\">\r\n                                        <circle class=\"checkmark__circle\" cx=\"26\" cy=\"26\" r=\"25\" fill=\"none\" />\r\n                                        <path class=\"checkmark__check\" fill=\"none\" d=\"M14.1 27.2l7.1 7.2 16.7-16.8\" />\r\n                                    </svg>\r\n                            }\r\n                        </button>\r\n                        <button \r\n                            style={{ width: '30%', height: '35px', display: 'block', marginLeft: 'auto' }} \r\n                            className=\"mt-3 btn-dark btn btn-sm\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n                <Model show={ ModalShow } Hide={ ShowPicDiv } content={ ModalContent } />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Attandence_Request;","import React from 'react'\r\nimport './Modal.css';\r\n\r\nconst Modal = ( props ) =>{\r\n    return (\r\n        <>\r\n            <div className=\"Attandence_Request_Div\" style={ { display: props.show ? 'flex' : 'none'  } }>\r\n                <div className=\"dark\" onClick={ props.Hide }>\r\n                </div>\r\n                <div style={ { animationDelay: ( 0 + '.' + 1 ).toString() + 's' } } className={ props.show ? \"Attandence_Request_Div_Content Attandence_Request_Div_Content2\" : \"Attandence_Request_Div_Content\" }>\r\n                    {\r\n                        props.content\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Modal;"],"sourceRoot":""}