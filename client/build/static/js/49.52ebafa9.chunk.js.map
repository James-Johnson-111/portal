{"version":3,"sources":["images/qfs.PNG","images/sbs.PNG","images/sbl.PNG","Components/EmployeeProtal/Dashboard/Pages/Inventory/ViewPurchaseOrder/Components/CreatePO/CreatePO.js","Components/EmployeeProtal/Dashboard/Pages/Inventory/ViewPurchaseOrder/ViewPurchaseOrder.jsx","Components/UI/Menu/Menu.jsx"],"names":["jsPDF","orientation","unit","format","UI","lazy","Viewpurchaseorder","useState","PurchaseOrders","setPurchaseOrders","Options","setOptions","PrintDocuments","setPrintDocuments","PO","info","specifications","venders","PR","quotations","bills","vouchers","PurchaseOrder","setPurchaseOrder","Vouchers","setVouchers","EmpPurchaseOrders","setEmpPurchaseOrders","Data","useSelector","state","EmpAuth","EmployeeData","useEffect","GetPurchaseOrders","val","id","emp_id","access","axios","post","payload","JSON","stringify","then","res","data","catch","err","console","log","Menu","OpenEmployeeDetails","index","current_emp","icon","txt","link","func","OpenDetails","po_id","pr_id","AttachVouchers","e","reader","FileReader","files","target","onload","readyState","arr","x","length","push","name","file","readAsDataURL","RemoveVoucher","array","filter","ApproveRequest","preventDefault","d","Date","MyData","FormData","append","remarks","value","date","toString","forEach","headers","DiscardRequest","onChangeHandler","checked","$","prop","Print","document","getElementById","contentWindow","print","props","slideToggle","className","map","to","href","onClick","hasClass","removeClass","addClass","class"],"mappings":"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","file":"static/js/49.52ebafa9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/qfs.5da12671.PNG\";","export default __webpack_public_path__ + \"static/media/sbs.a4429307.PNG\";","export default __webpack_public_path__ + \"static/media/sbl.f2980e14.PNG\";","import { jsPDF } from \"jspdf\";\r\n\r\nimport QFS from '../../../../../../../../images/qfs.PNG';\r\nimport SBS from '../../../../../../../../images/sbs.PNG';\r\nimport SBL from '../../../../../../../../images/sbl.PNG';\r\n\r\nconst doc = new jsPDF(\r\n    {\r\n        orientation: \"portrait\",\r\n        unit: \"px\",\r\n        format: 'a4'\r\n    }\r\n);\r\n\r\nexport const CreatePO = () => {\r\n\r\n    doc.setFontSize(30);\r\n    doc.text(\r\n        'SEABOARD GROUP',\r\n        doc.internal.pageSize.getWidth() / 2,\r\n        40,\r\n        'center'\r\n    );\r\n\r\n    var img1 = new Image();\r\n    var img2 = new Image();\r\n    var img3 = new Image();\r\n    img1.src = QFS;\r\n    img2.src = SBS;\r\n    img3.src = SBL;\r\n    doc.addImage(img1, 'png', doc.internal.pageSize.getWidth() / 4, 78, 50, 40)\r\n    doc.addImage(img2, 'png', doc.internal.pageSize.getWidth() / 2, 78, 50, 40)\r\n    doc.addImage(img3, 'png', doc.internal.pageSize.getWidth() / 3, 78, 50, 40)\r\n\r\n    doc.save(\"two-by-four.pdf\");\r\n\r\n}","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\n\r\n// IMPORT AXIOS LIBRARY FOR API CALLING\r\nimport axios from '../../../../../../axios';\r\n\r\n// IMPORT REACT REDUX PACKAGES\r\nimport { useSelector } from 'react-redux';\r\nimport { CreatePO } from './Components/CreatePO/CreatePO';\r\nimport $ from 'jquery';\r\n\r\nimport Menu from '../../../../../UI/Menu/Menu';\r\n\r\n// IMPORT UI\r\nconst UI = lazy( () => import('./UI') ); \r\n\r\nconst Viewpurchaseorder = () => {\r\n\r\n    // PURCHASE ORDERS\r\n    const [ PurchaseOrders, setPurchaseOrders ] = useState([]);\r\n\r\n    // MENU OPTIONS\r\n    const [ Options, setOptions ] = useState([]);\r\n\r\n    // SELECTED DOCUMENTS FOR PRINTING\r\n    const [ PrintDocuments, setPrintDocuments ] = useState([]);\r\n\r\n    // SELECTED PURCHASE ORDER\r\n    const [ PurchaseOrder, setPurchaseOrder ] = useState(\r\n        {\r\n            PO: {\r\n                info: [],\r\n                specifications: [],\r\n                venders: []\r\n            },\r\n            PR: {\r\n                info: [],\r\n                specifications: [],\r\n            },\r\n            quotations: [],\r\n            bills: [],\r\n            vouchers: []\r\n        }\r\n    );\r\n    \r\n    // STATE VOUCHERS\r\n    const [ Vouchers, setVouchers ] = useState([]);\r\n\r\n    // SELECTED EMPLOYEE ALL REQUESTS\r\n    const [ EmpPurchaseOrders, setEmpPurchaseOrders ] = useState([]);\r\n\r\n    // EMPLOYEE ALL DETAILS\r\n    const Data = useSelector( ( state ) => state.EmpAuth.EmployeeData );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            GetPurchaseOrders();\r\n\r\n            // CreatePO();\r\n\r\n        }, []\r\n    );\r\n\r\n    // WHEN USER WANT TO GO BACK TO ALL EMPLOYEES LIST\r\n    const BackToEmployees = () => {\r\n\r\n        setEmpPurchaseOrders( [] );\r\n        setOptions( [] );\r\n        setPrintDocuments( [] );\r\n        setVouchers( [] );\r\n        setPurchaseOrder(\r\n            {\r\n                PO: {\r\n                    info: [],\r\n                    specifications: [],\r\n                    venders: []\r\n                },\r\n                PR: {\r\n                    info: [],\r\n                    specifications: [],\r\n                },\r\n                quotations: [],\r\n                bills: [],\r\n                vouchers: []\r\n            }\r\n        );\r\n\r\n    }\r\n\r\n    const GetPurchaseOrders = () => {\r\n\r\n        // SET VALUES TO OBJECT\r\n        const val = {\r\n            id: Data.emp_id,\r\n            access: Data.access\r\n        }\r\n\r\n        // PASS 'VAL' OBJECT IN AXIOS\r\n        axios.post(\r\n            '/getallpurchaseorders',\r\n            {\r\n                payload: JSON.stringify( val )\r\n            }\r\n        ).then(\r\n            res => { // RESPONSE\r\n\r\n                setPurchaseOrders( res.data );\r\n\r\n            }\r\n        ).catch(\r\n            err => { // ERROR\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN EMPLOYEE WANT TO OPEN THE REQUEST DETAILS\r\n    const OpenEmployeeDetails = ( index ) => {\r\n\r\n        let emp_id = PurchaseOrders[index].emp_id; // RETURNS AN ID\r\n        let current_emp = Data.emp_id; // CURRENT EMPLOYEE ID\r\n\r\n        // GET ALL THE REQUEST OF THE SELECTED EMPLOYEE\r\n        axios.post(\r\n            '/getallpurchaseordersofemployee',\r\n            {\r\n                emp_id: emp_id,\r\n                current_emp: current_emp\r\n            }\r\n        ).then(\r\n            res => { // RESPONSE\r\n\r\n                setEmpPurchaseOrders( res.data );\r\n\r\n                setOptions(\r\n                    [\r\n                        {\r\n                            icon: 'las la-search',\r\n                            txt: 'Back To Employees',\r\n                            link: false,\r\n                            func: () => BackToEmployees()\r\n                        }\r\n                    ]\r\n                )\r\n\r\n            }\r\n        ).catch(\r\n            err => { // ERROR\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const OpenDetails = ( index ) => {\r\n\r\n        let po_id = EmpPurchaseOrders[index].po_id; // RETURNS AN ID (PO ID)\r\n        let pr_id = EmpPurchaseOrders[index].pr_id; // RETURNS AN ID (PR ID)\r\n\r\n        // GET THE REQUEST DETAILS\r\n        axios.post(\r\n            '/getpurchaseorderdetails',\r\n            {\r\n                po_id: po_id,\r\n                pr_id: pr_id\r\n            }\r\n        ).then(\r\n            res => { // RESPONSE\r\n\r\n                console.log( res.data );\r\n                setPurchaseOrder(\r\n                    {\r\n                        ...PurchaseOrder,\r\n                        PO: {\r\n                            info: res.data[0],\r\n                            specifications: res.data[1],\r\n                            venders: res.data[3]\r\n                        },\r\n                        PR: {\r\n                            info: res.data[4],\r\n                            specifications: res.data[5]\r\n                        },\r\n                        bills: res.data[2],\r\n                        quotations: res.data[6],\r\n                        vouchers: res.data[7]\r\n                    }\r\n                );\r\n\r\n            }\r\n        ).catch(\r\n            err => { // ERROR\r\n\r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN USER ATTACH SOME SUPPORTING DOCUMENTS\r\n    const AttachVouchers = ( e ) => {\r\n\r\n        // CREATE AN INSTANCE FOR READING THE UPLOADED FILE\r\n        const reader = new FileReader();\r\n\r\n        // EXTRACT ALL FILES FROM THE INPUT\r\n        const { files } = e.target;\r\n\r\n        // WHEN READER IS READY TO USE\r\n        reader.onload = () => {\r\n\r\n            // WHEN ALL FILES ARE LOADED\r\n            if \r\n            (\r\n                reader.readyState === 2\r\n            )\r\n            {\r\n\r\n                // * CREATING VARIABLES\r\n                let arr = []; // TO STORE THE DATA OF UPLOADED FILES\r\n\r\n                for\r\n                (\r\n                    let x = 0; x < files.length; x++\r\n                )\r\n                {\r\n                    arr.push(\r\n                        {\r\n                            name: files[x].name, // FILE NAME\r\n                            file: files[x] // FILE\r\n                        }\r\n                    )\r\n                }\r\n\r\n                // SET FILES TO STATE\r\n                setVouchers( arr );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // IF THE SYSTEM RECEIVE ANY FILE\r\n        if \r\n        (\r\n            files[0]\r\n        )\r\n        {\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN USER WANT TO REMOVE FROM UPLOADED VOUCHERS\r\n    const RemoveVoucher = ( id ) => {\r\n\r\n        // FILTER THE VOUCHERS WITHOUT THE SELECTED VOUCHER\r\n        let array = Vouchers.filter(\r\n            ( val, index ) => {\r\n      \r\n              return index !== id;\r\n      \r\n            }\r\n        )\r\n      \r\n        // SET VOUCHERS WITH THE SELECTED VOUCHER\r\n        setVouchers( array );\r\n\r\n    }\r\n\r\n    // WHEN USER WANT OT APPROVE THE REQUEST\r\n    const ApproveRequest = ( po_id, e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const d = new Date();\r\n\r\n        const MyData = new FormData();\r\n        MyData.append('payload', \r\n            JSON.stringify(\r\n                [{\r\n                    po_id: po_id,\r\n                    emp_id: Data.emp_id,\r\n                    remarks: e.target['remarks'].value,\r\n                    date: d.toString()\r\n                }]\r\n            )\r\n        );\r\n        Vouchers.forEach(file => {\r\n            MyData.append(\"vouchers\", file.file);\r\n        });\r\n\r\n        // APPROVE REQUEST\r\n        axios.post(\r\n            '/approvepurchaseorder', \r\n            MyData,\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n            }\r\n        ).then(\r\n            res => { // RESPONSE\r\n                \r\n                if\r\n                (\r\n                    res.data === 'success'\r\n                )\r\n                {\r\n                    setVouchers([]);\r\n                    setPurchaseOrder(\r\n                        {\r\n                            PO: {\r\n                                info: [],\r\n                                specifications: [],\r\n                                venders: []\r\n                            },\r\n                            PR: {\r\n                                info: [],\r\n                                specifications: [],\r\n                            },\r\n                            quotations: [],\r\n                            bills: [],\r\n                            vouchers: []\r\n                        }\r\n                    );\r\n                }\r\n\r\n            }\r\n        ).catch(\r\n            err => { // ERROR\r\n            \r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // IF THE USER PRINTS THE REQUEST\r\n    const Print = () => {\r\n\r\n        for ( let x = 0; x < PrintDocuments.length; x++ )\r\n        {\r\n            let iframe = document.getElementById(PrintDocuments[x]);\r\n            iframe.contentWindow.print();\r\n        }\r\n\r\n    }\r\n\r\n    // WHEN USER WANT OT discard THE REQUEST\r\n    const DiscardRequest = ( po_id, e ) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const d = new Date();\r\n\r\n        const MyData = new FormData();\r\n        MyData.append('payload', \r\n            JSON.stringify(\r\n                [{\r\n                    po_id: po_id,\r\n                    emp_id: Data.emp_id,\r\n                    remarks: e.target['remarks'].value,\r\n                    date: d.toString()\r\n                }]\r\n            )\r\n        );\r\n\r\n        // DISCARD REQUEST\r\n        axios.post(\r\n            '/discardpurchaseorder', \r\n            MyData\r\n        ).then(\r\n            res => { // RESPONSE\r\n                \r\n                if\r\n                (\r\n                    res.data === 'success'\r\n                )\r\n                {\r\n                    setVouchers([]);\r\n                    setPurchaseOrder(\r\n                        {\r\n                            PO: {\r\n                                info: [],\r\n                                specifications: [],\r\n                                venders: []\r\n                            },\r\n                            PR: {\r\n                                info: [],\r\n                                specifications: [],\r\n                            },\r\n                            quotations: [],\r\n                            bills: [],\r\n                            vouchers: []\r\n                        }\r\n                    );\r\n                }\r\n\r\n            }\r\n        ).catch(\r\n            err => { // ERROR\r\n            \r\n                console.log( err );\r\n\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    // WHEN USER WANT TO PRINT SOME DOCUMENTS AND TICK THE CHECKBOXES IN THE DIALOG BOX\r\n    const onChangeHandler = ( e ) => {\r\n\r\n        const \r\n        { \r\n            name, // INPUT NAME\r\n            checked  // INPUT IS CHECKED ? RETURNS TRUE OR FALSE\r\n        } = e.target;\r\n\r\n        // IF USER CHECK THE INPUT NAMED (CHECKALL)\r\n        if ( name === 'checkall' )\r\n        {\r\n\r\n            if ( checked )\r\n            {\r\n                $('.printCheckboxes').prop('checked', true); // SET ALL CHECKBOXES TO TRUE\r\n                setPrintDocuments(\r\n                    ['pr', 'po', 'quotation', 'bill', 'voucher']\r\n                )\r\n            }else\r\n            {\r\n                $('.printCheckboxes').prop('checked', false); // SET ALL CHECKBOXES TO FALSE\r\n                setPrintDocuments(\r\n                    []\r\n                )\r\n            }\r\n\r\n        }else\r\n\r\n        if ( checked ) // IF TRUE\r\n        {\r\n            let arr = PrintDocuments;\r\n            arr.push( name );\r\n            setPrintDocuments( arr );\r\n        }else // IF FALSE\r\n        {\r\n            let arr = PrintDocuments.filter(\r\n                ( val ) => {\r\n\r\n                    return val !== name\r\n\r\n                }\r\n            );\r\n\r\n            setPrintDocuments( arr );\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Suspense>\r\n            <Menu data={ Options } />\r\n            <UI\r\n            \r\n                // PURCHASE ORDERS\r\n                PurchaseOrders={ PurchaseOrders }\r\n                // SELECTED EMPLOYEE PURCHASE ORDERS\r\n                EmpPurchaseOrders={ EmpPurchaseOrders }\r\n                // WHEN USER SELECT A PURCHASE ORDER TO VIEW IT'S DETAILS\r\n                PurchaseOrder={ PurchaseOrder }\r\n                // FOR UPLOADED VOUCHERS\r\n                Vouchers={ Vouchers }\r\n                // EMPLOYEE INFO (CURRENT)\r\n                Data={ Data }\r\n\r\n                // * FUNCTIONS\r\n                // OPEN ALL REQUESTS OF THE SELECTED EMPLOYEE\r\n                OpenEmployeeDetails={ OpenEmployeeDetails }\r\n                // OPEN THE PURCHASE ORDER DETAILS\r\n                OpenDetails={ OpenDetails }\r\n                // WHEN USER UPLOAD VOUCHERS\r\n                AttachVouchers={ AttachVouchers }\r\n                // IF USER WANT TO REMOVE A VOUCHER\r\n                RemoveVoucher={ RemoveVoucher }\r\n                // WHEN USER WANT TO APPROVE PURCHASE ORDER\r\n                ApproveRequest={ ApproveRequest }\r\n                // WHEN USER WANT TO DISCARD PURCHASE ORDER\r\n                DiscardRequest={ DiscardRequest }\r\n                // WHEN USER TICKS A CHECKBOX IN PRINTING OPTIONS DIALOG BOX\r\n                onChangeHandler={ onChangeHandler }\r\n                // PRINT THE DOCUMENTS\r\n                Print={ Print }\r\n\r\n             />\r\n        </Suspense>\r\n    );\r\n}\r\n\r\nexport default Viewpurchaseorder;\r\n","import React, { useEffect } from 'react';\r\nimport './Menu.css';\r\nimport $ from \"jquery\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = (props) => {\r\n\r\n    useEffect(\r\n        () => {\r\n            $('.Speeddail_Grid').slideToggle(0);\r\n        }, []\r\n\r\n    )\r\n    const ShowMenuGrid = () => {\r\n        $('.Menu_Speeddail .Speeddail_Grid').slideToggle(200);\r\n        \r\n        if ( $('.Menu_Speeddail .Button .las').hasClass('la-bars') )\r\n        {\r\n            $('.Menu_Speeddail .Button .las').removeClass('la-bars');\r\n            $('.Menu_Speeddail .Button .las').addClass('la-times');\r\n        }else\r\n        {\r\n            $('.Menu_Speeddail .Button .las').removeClass('la-times');\r\n            $('.Menu_Speeddail .Button .las').addClass('la-bars');      \r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"Menu\">\r\n                {\r\n                    props.data.length > 0\r\n                        ?\r\n                        <>\r\n                            <div className=\"Menu_Grid\">\r\n                                {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <button><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                                </Link>\r\n                                                            :\r\n                                                                <button onClick={ () => val.func() }><p className=\"font-weight-bolder mb-0\">{val.txt}</p></button>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                            </div>\r\n                            <div className=\"Menu_Speeddail\">\r\n                                <div className=\" \" onClick={ShowMenuGrid}>\r\n                                    <i class=\"las la-times\"></i>\r\n                                </div>\r\n                                <div className=\"Speeddail_Grid\">\r\n                                    {\r\n                                        props.data.map(\r\n                                            (val, index) => {\r\n\r\n                                                return (\r\n                                                    <>\r\n                                                        {\r\n                                                            val.txt\r\n                                                            ?\r\n                                                            val.link ?\r\n                                                                <Link to={val.href}>\r\n                                                                    <div key={index}>\r\n                                                                        <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                        <p>{val.txt}</p>\r\n                                                                    </div>\r\n                                                                </Link>\r\n                                                                :\r\n                                                                <div className=\"clicks\" key={index} onClick={ () => val.func() }>\r\n                                                                    <div className={ \"mb-1 Speeddail_Grid1 divs\" + index }><i className={val.icon}></i></div>\r\n                                                                    <p>{val.txt}</p>\r\n                                                                </div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        null\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Menu;"],"sourceRoot":""}