{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Procurement/ViewPurchaseRequisition/Components/Home/Home.jsx","../node_modules/webpack/buildin/module.js"],"names":["Home","props","useState","ChartData","setChartData","requests","months","MonthlyRequests","setMonthlyRequests","RequestsSplit","setRequestsSplit","EmpData","setEmpData","TotalValue","setTotalValue","Resize","setResize","useEffect","count","rejected","approved","waiting","sent","viewed","x","CountStatus","length","push","labels","datasets","label","data","backgroundColor","arr","arr2","month","companies","ViewRequest","includes","company_name","filter","val","total","parseFloat","company","window","addEventListener","className","CountRequests","Object","keys","access","JSON","parse","toLocaleString","width","map","index","style","fontSize","borderRadius","height","maintainAspectRatio","id","borderColor","module","exports","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/55.0a71aea1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './Home.css';\r\nimport { Pie, Line } from 'react-chartjs-2';\r\n\r\nconst Home = (props) => {\r\n\r\n    const [ChartData, setChartData] = useState({});\r\n    const [MonthlyRequests, setMonthlyRequests] = useState(\r\n        {\r\n            requests: [],\r\n            months: []\r\n        }\r\n    );\r\n    const [RequestsSplit, setRequestsSplit] = useState([]);\r\n\r\n    const [EmpData, setEmpData] = useState({});\r\n    \r\n    const [TotalValue, setTotalValue] = useState(0.00);\r\n    const [Resize, setResize] = useState(false);\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            // IMPORTANT VARIABLES\r\n            let count = [];\r\n            let rejected = 0;\r\n            let approved = 0;\r\n            let waiting = 0;\r\n            let sent = 0;\r\n            let viewed = 0;\r\n\r\n            // FOR REJECTED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Rejected') {\r\n                    rejected = rejected + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR APPROVED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Approved') {\r\n                    approved = approved + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR WAITING\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Waiting For Approval') {\r\n                    waiting = waiting + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR SENT\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Sent') {\r\n                    sent = sent + 1;\r\n                }\r\n\r\n            }\r\n\r\n            // FOR VIEWED\r\n            for (let x = 0; x < props.CountStatus.length; x++) {\r\n\r\n                if (props.CountStatus[x] === 'Viewed') {\r\n                    viewed = viewed + 1;\r\n                }\r\n\r\n            }\r\n\r\n            count.push(\r\n                rejected,\r\n                approved,\r\n                waiting,\r\n                sent,\r\n                viewed\r\n            )\r\n\r\n            setChartData(\r\n                {\r\n                    labels: ['Rejected', 'Approved', 'Waiting For Approval', 'Sent', 'Viewed'],\r\n                    datasets: [\r\n                        {\r\n                            label: 'Requests for the year',\r\n                            data: count,\r\n                            backgroundColor: [\r\n                                '#DC3545',\r\n                                '#28A745',\r\n                                '#FFC107',\r\n                                '#17A2B8',\r\n                                '#007BFF'\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            );\r\n\r\n        }, [ props.CountStatus, Resize ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let arr = [];\r\n            let arr2 = [];\r\n\r\n            for ( let x = 0; x < props.MonthlyRequests.length; x++ )\r\n            {\r\n                arr.push( props.MonthlyRequests[x].count );\r\n                arr2.push( props.MonthlyRequests[x].month );\r\n            }\r\n\r\n            setMonthlyRequests(\r\n                {\r\n                    ...MonthlyRequests,\r\n                    requests: arr,\r\n                    months: arr2\r\n                }\r\n            )\r\n\r\n        }, [ props.MonthlyRequests ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            let companies = [];\r\n            let data = [];\r\n            for ( let x = 0; x < props.ViewRequest.length; x++ )\r\n            {\r\n                if ( !companies.includes( props.ViewRequest[x].company_name ) )\r\n                {\r\n                    companies.push( props.ViewRequest[x].company_name );\r\n                }\r\n            }\r\n\r\n            for ( let x = 0; x < companies.length; x++ )\r\n            {\r\n                let arr = props.ViewRequest.filter(\r\n                    ( val ) => {\r\n\r\n                        return val.company_name === companies[x];\r\n\r\n                    }\r\n                );\r\n\r\n                let total = 0.00;\r\n                for( let x = 0; x < arr.length; x++ )\r\n                {\r\n\r\n                    total = total + parseFloat( arr[x].total );\r\n\r\n                }\r\n\r\n                data.push(\r\n                    {\r\n                        company: companies[x],\r\n                        count: arr.length,\r\n                        total: total\r\n                    }\r\n                )\r\n            }\r\n\r\n            setRequestsSplit( data );\r\n\r\n            let total = 0.00;\r\n            for( let x = 0; x < props.ViewRequest.length; x++ )\r\n            {\r\n\r\n                total = total + parseFloat( props.ViewRequest[x].total );\r\n\r\n            }\r\n\r\n            setTotalValue( total );\r\n\r\n        }, [ props.ViewRequest ]\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            setEmpData( props.EmpData );\r\n\r\n            window.addEventListener(\r\n                'resize', () => {\r\n\r\n                    setResize( !Resize );\r\n                    \r\n                }\r\n            )\r\n\r\n        }, [ props.EmpData ]\r\n    )\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"three\">\r\n                <div className=\"Calculate px-4\">\r\n                    <small className=\"text-secondary\">Total Requests</small>\r\n                    <h3 className=\"font-weight-bolder\">\r\n                        {props.CountRequests} <small className=\"text-secondary\">Received</small>\r\n                    </h3>\r\n                    {\r\n                        Object.keys(EmpData).length === 0\r\n                        ?\r\n                        null\r\n                        :\r\n                        EmpData.access ? JSON.parse(EmpData.access).includes(522) || JSON.parse(EmpData.access).includes(1)\r\n                        ?\r\n                            <>\r\n                                <small className=\"text-secondary\">Total Value Rs</small>\r\n                                <h3 className=\"font-weight-bolder\">\r\n                                    { TotalValue.toLocaleString('en-US') } <small className=\"text-secondary\">Estimated</small>\r\n                                </h3>\r\n                            </>\r\n                            :\r\n                            null\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"RequestStatusChart\">\r\n                    <Pie\r\n                        width='100%'\r\n                        // height='100px'\r\n                        data={ChartData}\r\n                    />\r\n                </div>\r\n                <div className=\"RequestStatusChart py-4 px-3\">\r\n                    {\r\n                        RequestsSplit.map(\r\n                            ( val, index ) => {\r\n\r\n                                return (\r\n                                    <div \r\n                                        className=\" mb-3\"\r\n                                        style={\r\n                                            {\r\n                                                fontSize: '13px'\r\n                                            }\r\n                                        }\r\n                                        key={ index }\r\n                                    >\r\n                                        <div className=\"font-weight-bold\">\r\n                                            {\r\n                                                val.company\r\n                                            }: \r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center justify-content-between\"> \r\n                                            <div>\r\n                                                {\r\n                                                    val.count\r\n                                                } <sub>Requests</sub>\r\n                                            </div>\r\n                                            <div>\r\n                                                PKR \r\n                                                <span className=\"ml-2\">\r\n                                                    {\r\n                                                        val.total\r\n                                                    } /-\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div\r\n                style={\r\n                    {\r\n                        backgroundColor: \"#fff\",\r\n                        borderRadius: '5px'\r\n                    }\r\n                }\r\n            >\r\n                <Line\r\n                    width='100px'\r\n                    height='40px'\r\n                    maintainAspectRatio={ false }\r\n                    data={\r\n                        {\r\n                            labels: MonthlyRequests.months,\r\n                            datasets: [\r\n                                {\r\n                                    id: 1,\r\n                                    label: 'Monthly Received Requests',\r\n                                    data: MonthlyRequests.requests,\r\n                                    borderColor: '#F14B71'\r\n                                }\r\n                            ],\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}