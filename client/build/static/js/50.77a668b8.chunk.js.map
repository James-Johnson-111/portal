{"version":3,"sources":["Components/EmployeeProtal/Dashboard/Pages/Employee/Attendance/Attendance.jsx","../node_modules/react-html-table-to-excel/index.js"],"names":["Attendance","EmpData","useSelector","state","EmpAuth","EmployeeData","ref","React","createRef","AccessControls","useState","DailyAttendance","setDailyAttendance","Companies","setCompanies","dateFrom","dateTo","company","Filters","setFilters","useEffect","axios","get","then","response","data","catch","err","toast","dark","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","OnFilter","e","Data","FormData","target","name","value","val","append","company_code","post","res","className","access","JSON","parse","includes","variant","style","width","fontSize","fontFamily","onChange","map","index","company_name","type","marginBottom","fullWidth","length","id","dayName","Date","emp_date","toString","substring","getDay","console","log","status","emp_id","time_in","time_out","break_in","break_out","table","filename","sheet","buttonText","Object","defineProperty","exports","_createClass","defineProperties","props","i","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","propTypes","string","isRequired","ReactHTMLTableToExcel","_Component","instance","TypeError","_classCallCheck","this","_this","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","handleDownload","bind","subClass","superClass","create","constructor","setPrototypeOf","_inherits","document","getElementById","nodeType","nodeName","outerHTML","String","context","worksheet","window","navigator","msSaveOrOpenBlob","blobObject","Blob","click","element","createElement","href","base64","format","download","body","appendChild","removeChild","onClick","s","btoa","unescape","encodeURIComponent","c","replace","m","p","Component","defaultProps"],"mappings":"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","file":"static/js/50.77a668b8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport './Attendance.css';\r\n\r\nimport axios from '../../../../../../axios';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\n\r\nconst Attendance = () => {\r\n\r\n    const EmpData = useSelector( ( state ) => state.EmpAuth.EmployeeData );\r\n    const ref = React.createRef();\r\n    const AccessControls = useSelector( ( state ) => state.EmpAuth.EmployeeData );\r\n\r\n    const [ DailyAttendance, setDailyAttendance ] = useState([]);\r\n    const [ Companies, setCompanies ] = useState([]);\r\n    const [ Filters, setFilters ] = useState(\r\n        {\r\n            dateFrom: '', dateTo: '', company: null\r\n        }\r\n    );\r\n    \r\n    useEffect(\r\n        () => {\r\n\r\n            axios.get('/getcompaniescodes').then( response => {\r\n\r\n                setCompanies( response.data );\r\n\r\n            } ).catch( err => {\r\n\r\n                toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n\r\n            } );\r\n\r\n        }, []\r\n    )\r\n\r\n    const OnFilter = ( e ) => {\r\n\r\n        const Data = new FormData();\r\n        const { name, value } = e.target;\r\n\r\n        const val = {\r\n            ...Filters,\r\n            [name]: value\r\n        }\r\n\r\n        setFilters( val );\r\n\r\n        if ( name === 'dateFrom' && value !== '' && Filters.dateTo !== '' )\r\n        {\r\n            if ( Filters.dateTo > value )\r\n            {\r\n\r\n                Data.append('DateFrom', value);\r\n                Data.append('DateTo', Filters.dateTo);\r\n                Data.append('CompanyCode', Filters.company === null ? EmpData.company_code : Filters.company)\r\n                axios.post('/allemployeesattcompanywiseaccordingtodate', Data).then( res => {\r\n\r\n                    setDailyAttendance( res.data );\r\n\r\n                } ).catch( err => {\r\n\r\n                    toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n                } );\r\n\r\n            }else\r\n            {\r\n                toast.dark('Date From should be less than Date To', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n\r\n        if ( name === 'dateTo' && value !== '' && Filters.dateFrom !== '' )\r\n        {\r\n            if ( Filters.dateFrom < value )\r\n            {\r\n                Data.append('DateFrom', Filters.dateFrom);\r\n                Data.append('DateTo', value);\r\n                Data.append('CompanyCode', Filters.company === null ? EmpData.company_code : Filters.company)\r\n                axios.post('/allemployeesattcompanywiseaccordingtodate', Data).then( res => {\r\n                    \r\n                    setDailyAttendance( res.data );\r\n\r\n                } ).catch( err => {\r\n\r\n                    toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n                } );\r\n            }else\r\n            {\r\n                toast.dark('Date To should be greater than Date From', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n\r\n        if ( name === 'company' && Filters.dateFrom !== '' && Filters.dateTo !== '' )\r\n        {\r\n            if ( Filters.dateTo > Filters.dateFrom )\r\n            {\r\n\r\n                Data.append('DateFrom', Filters.dateFrom);\r\n                Data.append('DateTo', Filters.dateTo);\r\n                Data.append('CompanyCode', value)\r\n                axios.post('/allemployeesattcompanywiseaccordingtodate', Data).then( res => {\r\n\r\n                    setDailyAttendance( res.data );\r\n\r\n                } ).catch( err => {\r\n\r\n                    toast.dark( err , {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });;\r\n\r\n                } );\r\n\r\n            }else\r\n            {\r\n                toast.dark('Date From should be less than Date To', {\r\n                    position: 'top-right',\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <div className=\"View_Employee_Attendance\">\r\n                <div className=\"DivFirst\">\r\n                    <div className=\"Filters\">\r\n\r\n                        <h3 className=\"mb-4\">Filters</h3>\r\n                        {\r\n                            AccessControls.access ? JSON.parse(AccessControls.access).includes(502) || JSON.parse(AccessControls.access).includes(1)\r\n                                ?\r\n                                <>\r\n                                    <label className=\"mb-0\">Company</label>\r\n                                    <select\r\n                                        className=\"form-control bg-light\"\r\n                                        variant=\"standard\"\r\n                                        style={{ width: '100%', fontSize: '12px', fontFamily: 'Quicksand' }}\r\n                                        onChange={ OnFilter }\r\n                                        name='company'\r\n                                    >\r\n                                        <option\r\n                                            value=''\r\n                                        >\r\n                                            Select the Option\r\n                                        </option>\r\n                                        {Companies.map(\r\n                                            (val, index) => (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={val.company_code}\r\n                                                >\r\n                                                    {val.company_name}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </>\r\n                                :\r\n                                null\r\n                                :\r\n                                null\r\n                        }\r\n                        <label className=\"mb-0\">Date From</label>\r\n                        <input className=\"form-control form-control-sm bg-light\" name=\"dateFrom\" onChange={ OnFilter } type=\"date\" variant=\"standard\" style={ { marginBottom: '10px' } } fullWidth />\r\n                        <label className=\"mb-0\">Date To</label>\r\n                        <input className=\"form-control form-control-sm bg-light\" name=\"dateTo\" onChange={ OnFilter } type=\"date\" variant=\"standard\" style={ { marginBottom: '10px' } } fullWidth />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"Attendance\">\r\n                        <h5 className=\"mb-4 font-weight-bolder\">Daily Attendance</h5>\r\n                        <div className=\"attendance-content\">\r\n                            {\r\n                                DailyAttendance.length === 0\r\n                                    ?\r\n                                    <h5 className=\"text-center font-weight-bolder\">No Record Found</h5>\r\n                                    :\r\n                                    <table className=\"table\" id=\"table-to-xls\" ref={ ref }>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th className=\"d-none\">IDs</th>\r\n                                                <th>Name</th>\r\n                                                <th>Date</th>\r\n                                                <th className=\"d-none\">Day</th>\r\n                                                <th>Time In</th>\r\n                                                <th>Time Out</th>\r\n                                                <th>Break In</th>\r\n                                                <th>Break Out</th>\r\n                                                <th className=\"d-none\">Status</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                DailyAttendance.map(\r\n                                                    (val, index) => {\r\n\r\n                                                        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n                                                        var d = new Date(val.emp_date.toString().substring(0, 10));\r\n                                                        var dayName = days[d.getDay()];\r\n\r\n                                                        console.log( val.status );\r\n\r\n                                                        return (\r\n                                                            <tr key={index}>\r\n                                                                <td className=\"d-none\"> {val.emp_id} </td>\r\n                                                                <td> {val.name} </td>\r\n                                                                <td> {val.emp_date.toString().substring(0, 10)} </td>\r\n                                                                <td className=\"d-none\"> {dayName} </td>\r\n                                                                {\r\n                                                                    val.status === 'leave' && val.time_in === null && val.time_out === null && val.break_in === null && val.break_out === null\r\n                                                                    ?\r\n                                                                    <>\r\n                                                                        <td> leave </td>\r\n                                                                        <td> leave </td>\r\n                                                                        <td> leave </td>\r\n                                                                        <td> leave </td>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    val.status === 'leave' && (val.time_in !== null || val.time_out !== null || val.break_in !== null || val.break_out !== null)\r\n                                                                    ?\r\n                                                                    <>\r\n                                                                        <td> {val.time_in === null ? <span>No Time In</span> : val.time_in} </td>\r\n                                                                        <td> {val.time_out === null ? <span>No Time Out</span> : val.time_out} </td>\r\n                                                                        <td> {val.break_in === null ? <span>No Break In</span> : val.break_in} </td>\r\n                                                                        <td> {val.break_out === null ? <span>No Break Out</span> : val.break_out} </td>\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    <>\r\n                                                                        <td> {val.time_in === null ? <span>No Time In</span> : val.time_in} </td>\r\n                                                                        <td> {val.time_out === null ? <span>No Time Out</span> : val.time_out} </td>\r\n                                                                        <td> {val.break_in === null ? <span>No Break In</span> : val.break_in} </td>\r\n                                                                        <td> {val.break_out === null ? <span>No Break Out</span> : val.break_out} </td>\r\n                                                                    </>\r\n                                                                }\r\n                                                                <td className=\"d-none\"> \r\n                                                                    {\r\n                                                                        val.status === 'leave' && val.time_in === null && val.time_out === null && val.break_in === null && val.break_out === null\r\n                                                                    ?\r\n                                                                    <>\r\n                                                                    { val.status }\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    val.status === 'leave' && (val.time_in !== null || val.time_out !== null || val.break_in !== null || val.break_out !== null)\r\n                                                                    ?\r\n                                                                    <>\r\n                                                                        Short Leave\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    <>\r\n                                                                        { val.status }\r\n                                                                    </>\r\n                                                                    } \r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n\r\n                                                    }\r\n                                                )\r\n                                            }\r\n                                        </tbody>\r\n                                    </table>\r\n                            }\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <ReactHTMLTableToExcel\r\n                                id=\"test-table-xls-button\"\r\n                                className=\"download-table-xls-button btn btn-success ml-2\"\r\n                                table=\"table-to-xls\"\r\n                                filename={EmpData.company_name + '_Employees_Attendance_From_' + Filters.dateFrom + '_To_' + Filters.dateTo}\r\n                                sheet={ [ \"Employees\", \"Employees\", \"Employees\", \"Employees\" ] }\r\n                                buttonText=\"Export in excel\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Attendance;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* global window, document, Blob */\n\n\nvar propTypes = {\n  table: _propTypes2.default.string.isRequired,\n  filename: _propTypes2.default.string.isRequired,\n  sheet: _propTypes2.default.string.isRequired,\n  id: _propTypes2.default.string,\n  className: _propTypes2.default.string,\n  buttonText: _propTypes2.default.string\n};\n\nvar defaultProps = {\n  id: 'button-download-as-xls',\n  className: 'button-download',\n  buttonText: 'Download'\n};\n\nvar ReactHTMLTableToExcel = function (_Component) {\n  _inherits(ReactHTMLTableToExcel, _Component);\n\n  function ReactHTMLTableToExcel(props) {\n    _classCallCheck(this, ReactHTMLTableToExcel);\n\n    var _this = _possibleConstructorReturn(this, (ReactHTMLTableToExcel.__proto__ || Object.getPrototypeOf(ReactHTMLTableToExcel)).call(this, props));\n\n    _this.handleDownload = _this.handleDownload.bind(_this);\n    return _this;\n  }\n\n  _createClass(ReactHTMLTableToExcel, [{\n    key: 'handleDownload',\n    value: function handleDownload() {\n      if (!document) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Failed to access document object');\n        }\n\n        return null;\n      }\n\n      if (document.getElementById(this.props.table).nodeType !== 1 || document.getElementById(this.props.table).nodeName !== 'TABLE') {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error('Provided table property is not html table element');\n        }\n\n        return null;\n      }\n\n      var table = document.getElementById(this.props.table).outerHTML;\n      var sheet = String(this.props.sheet);\n      var filename = String(this.props.filename) + '.xls';\n\n      var uri = 'data:application/vnd.ms-excel;base64,';\n      var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>{table}</body></html>';\n\n      var context = {\n        worksheet: sheet || 'Worksheet',\n        table: table\n      };\n\n      // If IE11\n      if (window.navigator.msSaveOrOpenBlob) {\n        var fileData = ['' + ('<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-mic' + 'rosoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta cha' + 'rset=\"UTF-8\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:Exce' + 'lWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/>' + '</x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></' + 'xml><![endif]--></head><body>') + table + '</body></html>'];\n        var blobObject = new Blob(fileData);\n        document.getElementById('react-html-table-to-excel').click()(function () {\n          window.navigator.msSaveOrOpenBlob(blobObject, filename);\n        });\n\n        return true;\n      }\n\n      var element = window.document.createElement('a');\n      element.href = uri + ReactHTMLTableToExcel.base64(ReactHTMLTableToExcel.format(template, context));\n      element.download = filename;\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n\n      return true;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'button',\n        {\n          id: this.props.id,\n          className: this.props.className,\n          type: 'button',\n          onClick: this.handleDownload\n        },\n        this.props.buttonText\n      );\n    }\n  }], [{\n    key: 'base64',\n    value: function base64(s) {\n      return window.btoa(unescape(encodeURIComponent(s)));\n    }\n  }, {\n    key: 'format',\n    value: function format(s, c) {\n      return s.replace(/{(\\w+)}/g, function (m, p) {\n        return c[p];\n      });\n    }\n  }]);\n\n  return ReactHTMLTableToExcel;\n}(_react.Component);\n\nReactHTMLTableToExcel.propTypes = propTypes;\nReactHTMLTableToExcel.defaultProps = defaultProps;\n\nexports.default = ReactHTMLTableToExcel;\n"],"sourceRoot":""}