{"version":3,"sources":["images/sent.png","images/waiting.png","images/rejected.png","images/approved.png","images/delivery.png","Components/EmployeeProtal/Dashboard/Pages/Inventory/ViewInvtryRequests/RequestDetails/RequestDetails.jsx","Components/EmployeeProtal/Dashboard/Pages/Inventory/ViewInvtryRequests/ViewInvtryRequestsUI.jsx"],"names":["InvoiceBuilder","lazy","RequestDetails","props","useState","StartLoading","setStartLoading","ModalShow","setModalShow","ModalContent","setModalContent","useEffect","$","slideUp","fallback","Loading","display","className","EmployeeRequests","length","map","val","index","d","Date","request_date","time","bgColor","status","style","animationDelay","toString","substring","request_time","match","slice","join","total","name","backgroundColor","company_name","location_name","onClick","OpenRequestDetails","pr_id","info","sendDate","viewDate","view_date","ApprDate","approve_date","DiscardDate","discard_date","DeliveryDate","delivery_date","tConvert","sender_name","emp_for_name","sender_gender","handle_emp_name","discard_emp_name","approve_emp_name","id","slideToggle","view_time","approve_time","discard_time","delivery_time","toLocaleString","remarks","emp_remarks","JSON","parse","EmpData","access","includes","color","fontSize","onDiscard","onApprove","specifications","description","reason","price","quantity","amount","src","Sent","alt","Rejected","Waiting","Approval","Deliver","quotations","image","width","height","ZoomAttachment","backgroundImage","ShowAllRequests","Modal","show","Hide","content","ViewInvtryRequestsUI","window","location","reload","Requests","emp_image","designation_name","disabled","ViewThatEmpRequests","emp_id"],"mappings":"2OAAe,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qC,OCgBnCA,EAAiBC,gBAAM,kBAAM,kCAmfpBC,EAjfQ,SAACC,GAEpB,MAA0CC,oBAAU,GAApD,mBAAQC,EAAR,KAAsBC,EAAtB,KACA,EAAoCF,oBAAU,GAA9C,mBAAQG,EAAR,KAAmBC,EAAnB,KACA,EAA0CJ,oBAAU,GAApD,mBAAQK,EAAR,KAAsBC,EAAtB,KAoCA,OAVAC,qBACI,WAEIC,IAAE,aAAaC,QAAQ,GAEvBP,GAAiB,KAElB,IAIH,qCACI,cAAC,IAAD,IACA,eAAC,WAAD,CAAUQ,SAAW,mCAAE,cAACC,EAAA,EAAD,CAASC,QAAUX,MAA1C,UACI,qBAAKY,UAAU,WAAf,SAEI,sBAAKA,UAAU,oBAAf,UAEI,qBAAKA,UAAU,OAAf,SAE0C,IAAlCd,EAAMe,iBAAiBC,OAEvB,mCAAE,oDAEFhB,EAAMe,iBAAiBE,KACnB,SAAEC,EAAKC,GAEH,IAAMC,EAAI,IAAIC,KAAMH,EAAII,cAgBxB,IAdkBC,EAcdC,EAAU,UAed,MAboB,aAAfN,EAAIO,QAAwC,cAAfP,EAAIO,SAElCD,EAAU,WAEM,aAAfN,EAAIO,SAELD,EAAU,WAEM,yBAAfN,EAAIO,SAELD,EAAU,WAIV,sBAAKV,UAAU,eAA2BY,MAAO,CAAEC,gBAAiB,KAAUR,GAAOS,WAAa,KAAlG,UACI,sBAAKd,UAAU,yDAAf,UACI,oBAAGA,UAAU,OAAb,cAAsBM,EAAIA,EAAEQ,WAAWC,UAAU,EAAG,IAAM,QAhCpDN,EAgCsEL,EAAIY,cA7BxFP,EAAOA,EAAKK,WAAWG,MAAM,6CAA+C,CAACR,IAEpEP,OAAS,KACdO,EAAOA,EAAKS,MAAM,IACb,IAAMT,EAAK,GAAK,GAAK,KAAO,KACjCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAExBA,EAAKU,KAAK,KAsBuF,KAAhG,OACA,oBAAGnB,UAAU,OAAb,gBAAuB,4BAAkB,OAAdI,EAAIgB,MAAiB,EAAIhB,EAAIgB,cAG5D,oBAAGpB,UAAU,yDAAb,UACI,mBAAGA,UAAU,wBAAb,SAAsCI,EAAIiB,OAC1C,sBAAMrB,UAAU,MAAMY,MAAO,CAAEU,gBAAiBZ,GAAhD,SAA4DN,EAAIO,YAGpE,sBAAKX,UAAU,yDAAf,UACI,gCACI,mBAAGA,UAAU,OAAb,SAAqBI,EAAImB,eACzB,mBAAGvB,UAAU,OAAb,SAAqBI,EAAIoB,mBAE7B,8BACI,wBAAQxB,UAAU,MAAMyB,QAAS,kBAAMvC,EAAMwC,mBAAmBtB,EAAIuB,QAApE,yBAjBuBtB,QA2BvD,qBAAKL,UAAU,QAAf,SAEQd,EAAMD,eAAe2C,KAAK1B,OAAS,EAEnChB,EAAMD,eAAe2C,KAAKzB,KACtB,SAAEC,EAAKC,GAEH,IAAIwB,EAAgC,OAArBzB,EAAII,aAAwB,GAAK,IAAID,KAAKH,EAAII,cACzDsB,EAA6B,OAAlB1B,EAAI2B,UAAqB,GAAK,IAAIxB,KAAKH,EAAI2B,WACtDC,EAAgC,OAArB5B,EAAI6B,aAAwB,GAAK,IAAI1B,KAAKH,EAAI6B,cACzDC,EAAmC,OAArB9B,EAAI+B,aAAwB,GAAK,IAAI5B,KAAKH,EAAI+B,cAC5DC,EAAqC,OAAtBhC,EAAIiC,cAAyB,GAAK,IAAI9B,KAAKH,EAAIiC,eAElE,SAASC,EAAS7B,GASd,OAPAA,EAAOA,EAAKK,WAAWG,MAAM,6CAA+C,CAACR,IAEpEP,OAAS,KACdO,EAAOA,EAAKS,MAAM,IACb,IAAMT,EAAK,GAAK,GAAK,KAAO,KACjCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAExBA,EAAKU,KAAK,IAGrB,OAGI,sBAAKnB,UAAU,iBAAf,UACI,oBAAIA,UAAU,OAAd,6BACA,sBAAKA,UAAU,sBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,sBAAKA,UAAU,QAAf,UACI,iDACA,sBAAKA,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,qBACA,kCAAMI,EAAImB,aAAV,UAEJ,sBAAKvB,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,+BACA,kCAAMI,EAAIoB,cAAV,UAEJ,sBAAKxB,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,kCAAMI,EAAImC,YAAV,UAEJ,sBAAKvC,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,2BACA,kCAAMI,EAAIoC,eAAiBpC,EAAImC,YAAsC,SAAtBnC,EAAIqC,cAA2B,UAAY,UAAarC,EAAIoC,aAA3G,UAEJ,sBAAKxC,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,0DAEJ,sBAAKA,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,uBACA,kCAA8B,OAAxBI,EAAIsC,gBAA2B,UAAYtC,EAAIsC,gBAArD,UAEJ,sBAAK1C,UAAU,sDAAf,UACI,oBAAGA,UAAU,wBAAb,cAAiE,OAAzBI,EAAIuC,iBAA4B,cAAgB,aAAxF,OAE6B,OAAzBvC,EAAIuC,iBAEJ,kCAA+B,OAAzBvC,EAAIwC,iBAA4B,UAAYxC,EAAIwC,iBAAtD,OAEA,kCAAMxC,EAAIuC,iBAAV,UAGR,sBAAKE,GAAG,cAAc7C,UAAU,uBAAuByB,QAAU,WAAQ9B,IAAE,aAAamD,YAAY,KAAMnD,IAAE,gBAAgBmD,YAAY,MAAxI,UACI,mBAAG9C,UAAU,6BAAb,uBACA,mBAAGA,UAAU,yBAGjB,sBAAK6C,GAAG,WAAR,UACI,sBAAK7C,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,0BACA,kCAAM6B,EAAwB,KAAbA,EAAkB,UAAYA,EAASf,WAAWC,UAAU,EAAE,IAAM,OAASuB,EAAUlC,EAAIY,cAAiB,KAA7H,UAEJ,sBAAKhB,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,uBACA,kCAAM8B,EAAwB,KAAbA,EAAkB,UAAYA,EAAShB,WAAWC,UAAU,EAAE,IAAM,OAASuB,EAAUlC,EAAI2C,WAAc,KAA1H,UAEJ,sBAAK/C,UAAU,sDAAf,UACI,oBAAGA,UAAU,wBAAb,cAAiE,OAAzBI,EAAIuC,iBAA4B,gBAAkB,eAA1F,OAE6B,OAAzBvC,EAAIuC,iBAEJ,kCAAMX,EAAwB,KAAbA,EAAkB,UAAYA,EAASlB,WAAWC,UAAU,EAAE,IAAM,OAASuB,EAAUlC,EAAI4C,cAAiB,KAA7H,OAEA,kCAAMd,EAA8B,KAAhBA,EAAqB,UAAYA,EAAYpB,WAAWC,UAAU,EAAE,IAAM,OAASuB,EAAUlC,EAAI6C,cAAiB,KAAtI,UAGR,sBAAKjD,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,2BACA,kCAAMoC,EAAgC,KAAjBA,EAAsB,UAAYA,EAAatB,WAAWC,UAAU,EAAE,IAAM,OAASuB,EAAUlC,EAAI8C,eAAkB,KAA1I,UAEJ,sBAAKL,GAAG,cAAc7C,UAAU,uBAAuByB,QAAU,WAAQ9B,IAAE,aAAamD,YAAY,KAAMnD,IAAE,gBAAgBmD,YAAY,MAAxI,UACI,mBAAG9C,UAAU,6BAAb,uBACA,mBAAGA,UAAU,0BAGrB,uBACA,sBAAKA,UAAU,sDAAf,UACI,mBAAGA,UAAU,wBAAb,mBACA,oCAAsB,OAAdI,EAAIgB,MAAiB,EAAIhB,EAAIgB,MAAM+B,eAAe,eAG1C,OAAhB/C,EAAIgD,QAEJ,qCACI,uBACA,sBAAKpD,UAAU,sDAAf,UACI,mBAAGA,UAAU,6BAAb,qBAGA,mBAAGA,UAAU,OAAb,SACMI,EAAIgD,gBAKlB,KAGoB,OAApBhD,EAAIiD,YAEJ,qCACI,uBACA,sBAAKrD,UAAU,sDAAf,UACI,mBAAGA,UAAU,6BAAb,8BAGA,mBAAGA,UAAU,OAAb,SACMI,EAAIiD,oBAKlB,MAGAC,KAAKC,MAAOrE,EAAMsE,QAAQC,QAAQC,SAAS,MAAQJ,KAAKC,MAAMrE,EAAMsE,QAAQC,QAAQC,SAAS,OAE9E,yBAAftD,EAAIO,OAEJ,qCACI,uBACA,sBAAKX,UAAU,kDAAf,UACI,wBACIA,UAAU,kBACVY,MAAO,CAAEU,gBAAiB,MAAOqC,MAAO,QAASC,SAAU,QAC3DnC,QAAS,kBAAMvC,EAAM2E,UAAU3E,EAAMD,eAAe2C,KAAK,GAAGD,QAHhE,qBAMA,wBACI3B,UAAU,aACVY,MAAO,CAAEU,gBAAiB,UAAWqC,MAAO,QAASC,SAAU,QAC/DnC,QAAS,kBAAMvC,EAAM4E,UAAU5E,EAAMD,eAAe2C,KAAK,GAAGD,QAHhE,2BAWR,QAIR,oBAAI3B,UAAU,OAAd,oCACA,qBAAKA,UAAU,sBAAf,SAEQd,EAAMD,eAAe8E,eAAe5D,KAChC,SAAEC,EAAKC,GACH,OAEI,sBAAKL,UAAU,uBAAf,UACI,oBAAIA,UAAU,mBAAd,SAAmCI,EAAI4D,cACvC,4BACM5D,EAAI6D,SAEV,sBAAKjE,UAAU,2DAAf,UACI,gCACI,mBAAGA,UAAU,mBAAb,mBACA,oBAAGA,UAAU,GAAb,gBACSI,EAAI8D,MAAMf,eAAe,eAGtC,gCACI,mBAAGnD,UAAU,mBAAb,sBACA,mBAAGA,UAAU,GAAb,SACMI,EAAI+D,cAGd,gCACI,mBAAGnE,UAAU,mBAAb,oBACA,oBAAGA,UAAU,GAAb,gBACSI,EAAIgE,OAAOjB,eAAe,oBArBH9C,WAiCpE,sBAAKL,UAAU,4BAAf,UACI,sBAAKA,UAAU,QAAf,UACI,gDACA,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,SACI,mBAAGA,UAAU,kCAEjB,qBAAKA,UAAU,aAAf,SACI,qBAAKqE,IAAMC,EAAOtE,UAAU,QAAQuE,IAAI,cAE5C,qBAAKvE,UAAU,aAAf,SACI,gCACI,oBAAIA,UAAU,OAAd,kBACA,4GAMZ,qBAAKA,UAAU,QAAf,SACI,8BACI,qBAAKA,UAAU,aAIJ,aAAfI,EAAIO,OAEJ,qCACI,sBAAKX,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,SACI,mBAAGA,UAAU,kCAEjB,qBAAKA,UAAU,aAAf,SACI,qBAAKqE,IAAMG,EAAWxE,UAAU,eAAeuE,IAAI,cAEvD,qBAAKvE,UAAU,aAAf,SACI,gCACI,oBAAIA,UAAU,OAAd,sBACA,uEAMZ,qBAAKA,UAAU,QAAf,SACI,8BACI,qBAAKA,UAAU,gBAK3B,KAEJ,sBAAKA,UAA2B,aAAfI,EAAIO,QAAwC,SAAfP,EAAIO,OAAoB,SAAW,mBAAjF,UACI,qBAAKX,UAAU,aAAf,SACI,mBAAGA,UAAU,kCAEjB,qBAAKA,UAAU,aAAf,SACI,qBAAKqE,IAAMI,EAAUzE,UAAU,eAAeuE,IAAI,cAEtD,qBAAKvE,UAAU,aAAf,SACI,gCACI,oBAAIA,UAAU,OAAd,kCACA,2GAMZ,qBAAKA,UAAU,QAAf,SACI,8BACI,qBAAKA,UAAU,aAGvB,sBAAKA,UAA2B,aAAfI,EAAIO,QAAwC,aAAfP,EAAIO,QAAwC,cAAfP,EAAIO,OAAyB,SAAW,mBAAnH,UACI,qBAAKX,UAAU,aAAf,SACI,mBAAGA,UAAU,kCAEjB,qBAAKA,UAAU,aAAf,SACI,qBAAKqE,IAAMK,EAAW1E,UAAU,eAAeuE,IAAI,cAEvD,qBAAKvE,UAAU,aAAf,SACI,gCACI,oBAAIA,UAAU,OAAd,sBACA,kGAMZ,qBAAKA,UAAU,QAAf,SACI,8BACI,qBAAKA,UAAU,aAGvB,sBAAKA,UAA2B,cAAfI,EAAIO,OAAyB,SAAW,mBAAzD,UACI,qBAAKX,UAAU,aAAf,SACI,mBAAGA,UAAU,kCAEjB,qBAAKA,UAAU,aAAf,SACI,qBAAKqE,IAAMM,EAAU3E,UAAU,eAAeuE,IAAI,cAEtD,qBAAKvE,UAAU,aAAf,SACI,gCACI,oBAAIA,UAAU,OAAd,uBACA,uGAQhB,oBAAIA,UAAU,OAAd,iCACA,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,qBAAf,SAEQd,EAAMD,eAAe2F,WAAW1E,OAAS,EAEzChB,EAAMD,eAAe2F,WAAWzE,KAC5B,SAAEC,EAAKC,GAEH,OACI,qBAAKL,UAAU,aAAayB,QAAU,kBA9a3F,SAAEpB,GAErBZ,EACI,mCACI,qBAAK4E,IAAM,mCAAqCnF,EAAMD,eAAe2F,WAAWvE,GAAOwE,MAAQC,MAAM,OAAOC,OAAO,OAAOR,IAAI,kBAItIhF,GAAc,GAsasGyF,CAAgB3E,IAAwBO,MAAQ,CAAEqE,gBAAiB,wCAA0C7E,EAAIyE,MAAQ,OAAzFxE,MAMxF,0DAtTcA,MAkUlD,YAQZnB,EAAMD,eAAe2C,KAAK1B,OAAS,IAES,WAAxChB,EAAMD,eAAe2C,KAAK,GAAGjB,QAA+D,SAAxCzB,EAAMD,eAAe2C,KAAK,GAAGjB,QAE7E,qBAAKX,UAAU,gBAAf,SACI,cAACjB,EAAD,CACImG,gBAAkBhG,EAAMgG,gBACxBjG,eAAgBC,EAAMD,eACtBuE,QAAStE,EAAMsE,YAM/B,KAEJ,cAAC2B,EAAA,EAAD,CAAOC,KAAM9F,EAAW+F,KApeV,WAIlB9F,GAFCD,IAkeoDgG,QAAS9F,WCtZ3D+F,UA9Fc,SAACrG,GAE1B,OACI,mCACI,qBAAKc,UAAU,iBAAf,SAEI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,oDAAf,UACI,mDACA,mBAAGyB,QAAU,kBAAM+D,OAAOC,SAASC,UAAW1F,UAAU,uBAaxDd,EAAMe,iBAAiBC,OAAS,EAEhC,cAAC,EAAD,CACID,iBAAmBf,EAAMe,iBACzBhB,eAAiBC,EAAMD,eACvBuE,QAAUtE,EAAMsE,QAChB9B,mBAAqBxC,EAAMwC,mBAC3BwD,gBAAkBhG,EAAMgG,gBAIxBrB,UAAY3E,EAAM2E,UAElBC,UAAY5E,EAAM4E,YAGI,IAA1B5E,EAAMyG,SAASzF,OAEf,gDAEAhB,EAAMyG,SAASxF,KACX,SAAEC,EAAKC,GAEH,IAQkBI,EARdH,EAAI,IAAIC,KAAKH,EAAII,cAoBrB,OACI,sBAAKR,UAAU,UAAf,UAII,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,iBAAiBqE,IAAK,oBAAsBjE,EAAIwF,UAAWd,MAAM,KAAKC,OAAO,KAAKR,IAAI,WACrG,sBAAKvE,UAAU,OAAf,UACI,mBAAGA,UAAU,wBAAb,SAAuCI,EAAIiB,OAC3C,oBAAGrB,UAAU,OAAb,UAAsBI,EAAIyF,iBAA1B,OAAkDzF,EAAImB,aAAtD,KAAwEnB,EAAIoB,uBAGpF,sBAAKxB,UAAU,oDAAf,UACI,wBAAQA,UAAU,eAAe8F,UAAQ,EAAzC,SAA4CxF,EAAIA,EAAEQ,WAAWC,UAAU,EAAE,IAAM,QAzBzEN,EAyB4FL,EAAIY,cAvB9GP,EAAOA,EAAKK,WAAWG,MAAM,6CAA+C,CAACR,IAEpEP,OAAS,KACdO,EAAOA,EAAKS,MAAM,IACb,IAAMT,EAAK,GAAK,GAAK,KAAO,KACjCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAExBA,EAAKU,KAAK,KAgB8G,OACvH,wBAAQnB,UAAU,MAAMyB,QAAU,kBAAMvC,EAAM6G,oBAAqB3F,EAAI4F,SAAvE,gCAbuB3F","file":"static/js/43.d348082b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sent.2768de1b.png\";","export default __webpack_public_path__ + \"static/media/waiting.8691c4c3.png\";","export default __webpack_public_path__ + \"static/media/rejected.0ea9857f.png\";","export default __webpack_public_path__ + \"static/media/approved.a72aa311.png\";","export default __webpack_public_path__ + \"static/media/delivery.deadc353.png\";","import React, { lazy, Suspense, useEffect, useState } from 'react';\r\n\r\nimport './RequestDetails.css';\r\nimport Loading from '../../../../../../UI/Loading/Loading';\r\nimport Modal from '../../../../../../UI/Modal/Modal';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport $ from 'jquery';\r\n\r\nimport Sent from '../../../../../../../images/sent.png';\r\nimport Waiting from '../../../../../../../images/waiting.png';\r\nimport Rejected from '../../../../../../../images/rejected.png';\r\nimport Approval from '../../../../../../../images/approved.png';\r\nimport Deliver from '../../../../../../../images/delivery.png';\r\n\r\nconst InvoiceBuilder = lazy( () => import('../InvoiceBuilder/InvoiceBuilder') );\r\n\r\nconst RequestDetails = (props) => {\r\n\r\n    const [ StartLoading, setStartLoading ] = useState( true );\r\n    const [ ModalShow, setModalShow ] = useState( false );\r\n    const [ ModalContent, setModalContent ] = useState( false );\r\n\r\n    const HideModelFunction = () => {\r\n\r\n        if ( ModalShow )\r\n        {\r\n            setModalShow( false );\r\n        }else\r\n        {\r\n            setModalShow( true );\r\n        }\r\n\r\n    }\r\n\r\n    const ZoomAttachment = ( index ) => {\r\n\r\n        setModalContent(\r\n            <>\r\n                <img src={ 'images/Inventory/pr_attachments/' + props.RequestDetails.quotations[index].image } width=\"100%\" height=\"auto\" alt=\"Attachment\" />\r\n            </>\r\n        )\r\n\r\n        setModalShow( true );\r\n\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            $('#viewMore').slideUp(0);\r\n\r\n            setStartLoading( false ); // set loading to false\r\n\r\n        }, []\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <Suspense fallback={ <><Loading display={ StartLoading } /></> }>\r\n                <div className=\"InvoPrev\">\r\n\r\n                    <div className=\"InvoPrevContainer\">\r\n\r\n                        <div className=\"Left\">\r\n                            {\r\n                                props.EmployeeRequests.length === 0\r\n                                ?\r\n                                <><h6>No Request Found</h6></>\r\n                                :\r\n                                props.EmployeeRequests.map( // if available run map() function\r\n                                    ( val, index ) => {\r\n\r\n                                        const d = new Date( val.request_date );\r\n\r\n                                        function tConvert(time) \r\n                                        {\r\n                                            // Check correct time format and split into components\r\n                                            time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n                                            if (time.length > 1) { // If time format correct\r\n                                                time = time.slice(1);  // Remove full string match value\r\n                                                time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\r\n                                                time[0] = +time[0] % 12 || 12; // Adjust hours\r\n                                            }\r\n                                            return time.join(''); // return adjusted time or original string\r\n\r\n                                        }\r\n\r\n                                        let bgColor = '#0eb8de';\r\n\r\n                                        if ( val.status === 'Approved' || val.status === 'Delivered' )\r\n                                        {\r\n                                            bgColor = '#307365';\r\n                                        }\r\n                                        if ( val.status === 'Rejected' )\r\n                                        {\r\n                                            bgColor = '#d19399';\r\n                                        }\r\n                                        if ( val.status === 'Waiting For Approval' )\r\n                                        {\r\n                                            bgColor = '#fc9701';\r\n                                        }\r\n\r\n                                        return (\r\n                                            <div className=\"Invorequests\" key={index} style={{ animationDelay: (0 + '.' + index).toString() + 's' }}>\r\n                                                <div className=\"mb-3 d-flex align-items-center justify-content-between\">\r\n                                                    <p className=\"mb-0\"> {d ? d.toString().substring(0, 15) + ' at ' + tConvert(val.request_time) : null} </p>\r\n                                                    <p className=\"mb-0\">Rs <b>{val.total === null ? 0 : val.total}</b></p>\r\n                                                </div>\r\n\r\n                                                <p className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                                                    <p className=\"mb-0 font-weight-bold\">{val.name}</p>\r\n                                                    <span className=\"imp\" style={{ backgroundColor: bgColor }}>{val.status}</span>\r\n                                                </p>\r\n\r\n                                                <div className=\"mt-3 d-flex align-items-center justify-content-between\">\r\n                                                    <div>\r\n                                                        <p className=\"mb-0\">{val.company_name}</p>\r\n                                                        <p className=\"mb-0\">{val.location_name}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <button className=\"btn\" onClick={() => props.OpenRequestDetails(val.pr_id)}>View</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n\r\n                                    }\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"Right\">\r\n                            {\r\n                                props.RequestDetails.info.length > 0\r\n                                ?\r\n                                props.RequestDetails.info.map(\r\n                                    ( val, index ) => {\r\n\r\n                                        let sendDate = val.request_date === null ? '' : new Date(val.request_date);\r\n                                        let viewDate = val.view_date === null ? '' : new Date(val.view_date);\r\n                                        let ApprDate = val.approve_date === null ? '' : new Date(val.approve_date);\r\n                                        let DiscardDate = val.discard_date === null ? '' : new Date(val.discard_date);\r\n                                        let DeliveryDate = val.delivery_date === null ? '' : new Date(val.delivery_date);\r\n\r\n                                        function tConvert(time) {\r\n                                            // Check correct time format and split into components\r\n                                            time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n                                            if (time.length > 1) { // If time format correct\r\n                                                time = time.slice(1);  // Remove full string match value\r\n                                                time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\r\n                                                time[0] = +time[0] % 12 || 12; // Adjust hours\r\n                                            }\r\n                                            return time.join(''); // return adjusted time or original string\r\n                                        }\r\n\r\n                                        return (\r\n\r\n\r\n                                            <div className=\"RequestDetails\" key={ index }>\r\n                                                <h5 className=\"mb-3\">Request Details</h5>\r\n                                                <div className='RequestDetailsInner'>\r\n                                                    <div className='RequestDetailsInner_Left'>\r\n                                                        <div className='inner'>\r\n                                                            <h6>Request Summary</h6>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Company</p>\r\n                                                                <p> { val.company_name } </p>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Delivery Location</p>\r\n                                                                <p> { val.location_name } </p>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Requested By</p>\r\n                                                                <p> { val.sender_name } </p>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Requested For</p>\r\n                                                                <p> { val.emp_for_name === val.sender_name ? ( val.sender_gender === 'Male' ? 'Himself' : 'Herself') : val.emp_for_name } </p>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Submitted To</p>\r\n                                                                <p> Inventory Department </p>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Handle By</p>\r\n                                                                <p> { val.handle_emp_name === null ? 'Not Yet' : val.handle_emp_name } </p>\r\n                                                            </div>\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\"> { val.discard_emp_name === null ? 'Approved By' : 'Discard By' } </p>\r\n                                                                {\r\n                                                                    val.discard_emp_name === null\r\n                                                                    ?\r\n                                                                    <p> { val.approve_emp_name === null ? 'Not Yet' : val.approve_emp_name } </p>\r\n                                                                    :\r\n                                                                    <p> { val.discard_emp_name } </p>\r\n                                                                }\r\n                                                            </div>\r\n                                                            <div id=\"viewMoreBtn\" className=\"text-center viewMore\" onClick={ () => { $('#viewMore').slideToggle(400); $('#viewMoreBtn').slideToggle(400) } }>\r\n                                                                <p className=\"font-weight-bold mr-1 mb-0\">View more</p>\r\n                                                                <i className=\"las la-angle-down\"></i>\r\n                                                            </div>\r\n\r\n                                                            <div id=\"viewMore\">\r\n                                                                <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                    <p className=\"font-weight-bold mr-1\">Request Date</p>\r\n                                                                    <p> { sendDate ? sendDate === '' ? 'Not Yet' : sendDate.toString().substring(0,15) + ' at ' + tConvert( val.request_time ) : null } </p>\r\n                                                                </div>\r\n                                                                <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                    <p className=\"font-weight-bold mr-1\">View Date</p>\r\n                                                                    <p> { viewDate ? viewDate === '' ? 'Not Yet' : viewDate.toString().substring(0,15) + ' at ' + tConvert( val.view_time ) : null } </p>\r\n                                                                </div>\r\n                                                                <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                    <p className=\"font-weight-bold mr-1\"> { val.discard_emp_name === null ? 'Approval Date' : 'Discard Date' } </p>\r\n                                                                    {\r\n                                                                        val.discard_emp_name === null\r\n                                                                        ?\r\n                                                                        <p> { ApprDate ? ApprDate === '' ? 'Not Yet' : ApprDate.toString().substring(0,15) + ' at ' + tConvert( val.approve_time ) : null } </p>\r\n                                                                        :\r\n                                                                        <p> { DiscardDate ? DiscardDate === '' ? 'Not Yet' : DiscardDate.toString().substring(0,15) + ' at ' + tConvert( val.discard_time ) : null } </p>\r\n                                                                    }\r\n                                                                </div>\r\n                                                                <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                    <p className=\"font-weight-bold mr-1\">Delivery Date</p>\r\n                                                                    <p> { DeliveryDate ? DeliveryDate === '' ? 'Not Yet' : DeliveryDate.toString().substring(0,15) + ' at ' + tConvert( val.delivery_time ) : null } </p>\r\n                                                                </div>\r\n                                                                <div id=\"viewLessBtn\" className=\"text-center viewMore\" onClick={ () => { $('#viewMore').slideToggle(400); $('#viewMoreBtn').slideToggle(400) } }>\r\n                                                                    <p className=\"font-weight-bold mr-1 mb-0\">View less</p>\r\n                                                                    <i className=\"las la-angle-up\"></i>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <hr />\r\n                                                            <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                <p className=\"font-weight-bold mr-1\">Total</p>\r\n                                                                <p>Rs { val.total === null ? 0 : val.total.toLocaleString('en-US') }</p>\r\n                                                            </div>\r\n                                                            {\r\n                                                                val.remarks !== null\r\n                                                                ?\r\n                                                                <>\r\n                                                                    <hr />\r\n                                                                    <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                        <p className=\"mb-0 font-weight-bold mr-4\">\r\n                                                                            Remarks\r\n                                                                        </p>\r\n                                                                        <p className=\"mb-0\">\r\n                                                                            { val.remarks }\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                            {\r\n                                                                val.emp_remarks !== null\r\n                                                                ?\r\n                                                                <>\r\n                                                                    <hr />\r\n                                                                    <div className=\"d-flex align-content-center justify-content-between\">\r\n                                                                        <p className=\"mb-0 font-weight-bold mr-4\">\r\n                                                                            Employee Remarks\r\n                                                                        </p>\r\n                                                                        <p className=\"mb-0\">\r\n                                                                            { val.emp_remarks }\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                            {\r\n                                                                JSON.parse( props.EmpData.access).includes(513) || JSON.parse(props.EmpData.access).includes(515)\r\n                                                                ?\r\n                                                                val.status === 'Waiting For Approval'\r\n                                                                ?\r\n                                                                <>\r\n                                                                    <hr />\r\n                                                                    <div className=\"d-flex align-content-center justify-content-end\">\r\n                                                                        <button\r\n                                                                            className=\"btn btn-sm mr-2\"\r\n                                                                            style={{ backgroundColor: 'red', color: 'white', fontSize: '12px' }}\r\n                                                                            onClick={() => props.onDiscard(props.RequestDetails.info[0].pr_id)}>\r\n                                                                            Discard\r\n                                                                        </button>\r\n                                                                        <button\r\n                                                                            className=\"btn btn-sm\"\r\n                                                                            style={{ backgroundColor: '#0eb8de', color: 'white', fontSize: '12px' }}\r\n                                                                            onClick={() => props.onApprove(props.RequestDetails.info[0].pr_id)}>\r\n                                                                            Approve\r\n                                                                        </button>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                        </div>\r\n                                                        \r\n                                                        <h5 className=\"my-3\">Request Specifications</h5>\r\n                                                        <div className=\"SpecificationsInner\">\r\n                                                            {\r\n                                                                props.RequestDetails.specifications.map(\r\n                                                                    ( val, index ) => {\r\n                                                                        return (\r\n\r\n                                                                            <div className=\"inner specifications\" key={ index }>\r\n                                                                                <h6 className=\"font-weight-bold\">{ val.description }</h6>\r\n                                                                                <p>\r\n                                                                                    { val.reason }\r\n                                                                                </p>\r\n                                                                                <div className=\"d-flex align-content-center justify-content-between mt-3\">\r\n                                                                                    <div>\r\n                                                                                        <p className=\"font-weight-bold\">Price</p>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Rs { val.price.toLocaleString('en-US') }\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div>\r\n                                                                                        <p className=\"font-weight-bold\">Quantity</p>\r\n                                                                                        <p className=\"\">\r\n                                                                                            { val.quantity }\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                    <div>\r\n                                                                                        <p className=\"font-weight-bold\">Amount</p>\r\n                                                                                        <p className=\"\">\r\n                                                                                            Rs { val.amount.toLocaleString('en-US') }\r\n                                                                                        </p>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n\r\n                                                                        )\r\n                                                                    }\r\n                                                                )\r\n                                                            }\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='RequestDetailsInner_Right'>\r\n                                                        <div className=\"inner\">\r\n                                                            <h6>Request Status</h6>\r\n                                                            <div className=\"status\">\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <i className=\"mx-auto las la-check-circle\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <img src={ Sent } className=\"w-100\" alt=\"SentImg\" />\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <div>\r\n                                                                        <h6 className=\"mb-0\">Sent</h6>\r\n                                                                        <p>\r\n                                                                            Your request has been sent and received by the inventory department\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"Break\">\r\n                                                                <div>\r\n                                                                    <div className=\"line\"></div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {\r\n                                                                val.status === 'Rejected'\r\n                                                                ?\r\n                                                                <>\r\n                                                                    <div className='status'>\r\n                                                                        <div className=\"statusItem\">\r\n                                                                            <i className=\"mx-auto las la-check-circle\"></i>\r\n                                                                        </div>\r\n                                                                        <div className=\"statusItem\">\r\n                                                                            <img src={ Rejected } className=\"w-75 mx-auto\" alt=\"SentImg\" />\r\n                                                                        </div>\r\n                                                                        <div className=\"statusItem\">\r\n                                                                            <div>\r\n                                                                                <h6 className=\"mb-0\">Rejected</h6>\r\n                                                                                <p>\r\n                                                                                    Your request has been rejected\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className=\"Break\">\r\n                                                                        <div>\r\n                                                                            <div className=\"line\"></div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </>\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                            <div className={ val.status !== 'Rejected' && val.status !== 'Sent' ? \"status\" : \"status grayScale\" }>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <i className=\"mx-auto las la-check-circle\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <img src={ Waiting } className=\"w-75 mx-auto\" alt=\"SentImg\" />\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <div>\r\n                                                                        <h6 className=\"mb-0\">Waiting For Approval</h6>\r\n                                                                        <p>\r\n                                                                            Your request has been sent for approval in the accounts department\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"Break\">\r\n                                                                <div>\r\n                                                                    <div className=\"line\"></div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className={ val.status === 'Approved' || val.status === 'Accepted' || val.status === 'Delivered' ? \"status\" : \"status grayScale\" }>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <i className=\"mx-auto las la-check-circle\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <img src={ Approval } className=\"w-75 mx-auto\" alt=\"SentImg\" />\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <div>\r\n                                                                        <h6 className=\"mb-0\">Approved</h6>\r\n                                                                        <p>\r\n                                                                            Your request has been approved by the accounts department\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"Break\">\r\n                                                                <div>\r\n                                                                    <div className=\"line\"></div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className={ val.status === 'Delivered' ? \"status\" : \"status grayScale\" }>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <i className=\"mx-auto las la-check-circle\"></i>\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <img src={ Deliver } className=\"w-75 mx-auto\" alt=\"SentImg\" />\r\n                                                                </div>\r\n                                                                <div className=\"statusItem\">\r\n                                                                    <div>\r\n                                                                        <h6 className=\"mb-0\">Delivered</h6>\r\n                                                                        <p>\r\n                                                                            Your request has been delivered by the inventory department\r\n                                                                        </p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        {/* Request Attachments */}\r\n                                                        <h5 className=\"my-3\">Request Attachments</h5>\r\n                                                        <div className=\"inner\">\r\n                                                            <div className='RequestAttachments'>\r\n                                                                {\r\n                                                                    props.RequestDetails.quotations.length > 0\r\n                                                                    ?\r\n                                                                    props.RequestDetails.quotations.map(\r\n                                                                        ( val, index ) => {\r\n\r\n                                                                            return (\r\n                                                                                <div className=\"Attachment\" onClick={ () => ZoomAttachment( index ) } key={ index } style={ { backgroundImage: \"url('images/Inventory/pr_attachments/\" + val.image + \"')\" } }></div>\r\n                                                                            )\r\n\r\n                                                                        }\r\n                                                                    )\r\n                                                                    :\r\n                                                                    <p>No Attachment</p>\r\n                                                                }\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        )\r\n                                    }\r\n                                )\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                {\r\n                    props.RequestDetails.info.length > 0\r\n                        ?\r\n                        props.RequestDetails.info[0].status === 'Viewed' || props.RequestDetails.info[0].status === 'Sent'\r\n                        ?\r\n                            <div className=\"InvoContainer\">\r\n                                <InvoiceBuilder\r\n                                    ShowAllRequests={ props.ShowAllRequests }\r\n                                    RequestDetails={props.RequestDetails}\r\n                                    EmpData={props.EmpData}\r\n                                />\r\n                            </div>\r\n                        :\r\n                        null\r\n                    :\r\n                    null\r\n                }\r\n                <Modal show={ModalShow} Hide={HideModelFunction} content={ModalContent} />\r\n            </Suspense>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default RequestDetails;","import React from 'react';\r\n\r\n// import css\r\nimport './ViewInvtryRequestsUI.css';\r\n\r\n// import Request Details Component\r\nimport RequestDetails from './RequestDetails/RequestDetails';\r\n\r\nconst ViewInvtryRequestsUI = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"ViewPRRequests\">\r\n                {/* left Side */}\r\n                <div className=\"Left\">\r\n                    <div className=\"d-flex align-items-center justify-content-between\">\r\n                        <h4>Purchase Requests</h4>\r\n                        <i onClick={ () => window.location.reload() } className=\"las la-redo-alt\"></i>\r\n                    </div>\r\n                    {/* Purchase Requests */}\r\n                    {/* props.RequestDetails.info.map(\r\n                            ( val, index ) => {\r\n\r\n                                return (\r\n                                    <></>\r\n                                )\r\n\r\n                            }\r\n                        ) */}\r\n                    {\r\n                        props.EmployeeRequests.length > 0\r\n                        ?\r\n                        <RequestDetails\r\n                            EmployeeRequests={ props.EmployeeRequests }\r\n                            RequestDetails={ props.RequestDetails }\r\n                            EmpData={ props.EmpData } \r\n                            OpenRequestDetails={ props.OpenRequestDetails }\r\n                            ShowAllRequests={ props.ShowAllRequests }\r\n\r\n                            // functions\r\n                            // When user dwants to discard the request\r\n                            onDiscard={ props.onDiscard }\r\n                            // when user wants to approve the request\r\n                            onApprove={ props.onApprove }\r\n                         />\r\n                        :\r\n                        props.Requests.length === 0\r\n                        ?\r\n                        <h5>No Request Yet</h5>\r\n                        :\r\n                        props.Requests.map(\r\n                            ( val, index ) => {\r\n\r\n                                let d = new Date(val.request_date);\r\n                                const isToday = (someDate) => {\r\n                                    const today = new Date()\r\n                                    return someDate.getDate() === today.getDate() &&\r\n                                        someDate.getMonth() === today.getMonth() &&\r\n                                        someDate.getFullYear() === today.getFullYear()\r\n                                }\r\n\r\n                                function tConvert(time) {\r\n                                    // Check correct time format and split into components\r\n                                    time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n                                    if (time.length > 1) { // If time format correct\r\n                                        time = time.slice(1);  // Remove full string match value\r\n                                        time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\r\n                                        time[0] = +time[0] % 12 || 12; // Adjust hours\r\n                                    }\r\n                                    return time.join(''); // return adjusted time or original string\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"Request\" key={ index }>\r\n                                        {/* Request Status */}\r\n                                        {/* { isToday(d ? d : null) ? <div className=\"status\" style={{ backgroundColor: '#000', color: '#fff' }}>New</div> : null } */}\r\n                                        {/* Employee Info */}\r\n                                        <div className=\"empInfo\">\r\n                                            <img className=\"rounded-circle\" src={'images/employees/' + val.emp_image} width=\"35\" height=\"35\" alt=\"empImg\" />\r\n                                            <div className=\"ml-2\">\r\n                                                <p className=\"mb-0 font-weight-bold\">{ val.name }</p>\r\n                                                <p className=\"mb-0\">{ val.designation_name } at { val.company_name }, { val.location_name }</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"d-flex align-items-center justify-content-between\">\r\n                                            <button className=\"btn bg-white\" disabled>{ d ? d.toString().substring(0,15) + ' at ' + tConvert( val.request_time ) : null }</button>\r\n                                            <button className=\"btn\" onClick={ () => props.ViewThatEmpRequests( val.emp_id ) }>View Requests</button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n\r\n                            }\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ViewInvtryRequestsUI;"],"sourceRoot":""}